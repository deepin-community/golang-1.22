# command-line-arguments
command-line-arguments.convertNeq0B<1> STEXT nosplit size=6 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:15)	TEXT	command-line-arguments.convertNeq0B(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:15)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:15)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:15)	FUNCDATA	$5, command-line-arguments.convertNeq0B.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:15)	FUNCDATA	$6, command-line-arguments.convertNeq0B.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:15)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:18)	ANDL	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:19)	ANDL	BX, AX
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:19)	RET
	0x0000 83 e0 01 21 d8 c3                                ...!..
command-line-arguments.convertNeq0W<1> STEXT nosplit size=6 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:22)	TEXT	command-line-arguments.convertNeq0W(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:22)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:22)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:22)	FUNCDATA	$5, command-line-arguments.convertNeq0W.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:22)	FUNCDATA	$6, command-line-arguments.convertNeq0W.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:22)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:25)	ANDL	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:26)	ANDL	BX, AX
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:26)	RET
	0x0000 83 e0 01 21 d8 c3                                ...!..
command-line-arguments.convertNeq0L<1> STEXT nosplit size=6 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:29)	TEXT	command-line-arguments.convertNeq0L(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:29)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:29)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:29)	FUNCDATA	$5, command-line-arguments.convertNeq0L.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:29)	FUNCDATA	$6, command-line-arguments.convertNeq0L.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:29)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:32)	ANDL	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:33)	ANDL	BX, AX
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:33)	RET
	0x0000 83 e0 01 21 d8 c3                                ...!..
command-line-arguments.convertNeq0Q<1> STEXT nosplit size=6 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:36)	TEXT	command-line-arguments.convertNeq0Q(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:36)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:36)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:36)	FUNCDATA	$5, command-line-arguments.convertNeq0Q.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:36)	FUNCDATA	$6, command-line-arguments.convertNeq0Q.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:36)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:39)	ANDL	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:40)	ANDL	BX, AX
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:40)	RET
	0x0000 83 e0 01 21 d8 c3                                ...!..
command-line-arguments.convertNeqBool32<1> STEXT nosplit size=4 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:43)	TEXT	command-line-arguments.convertNeqBool32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:43)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:43)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:43)	FUNCDATA	$5, command-line-arguments.convertNeqBool32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:43)	FUNCDATA	$6, command-line-arguments.convertNeqBool32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:43)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:45)	ANDL	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:45)	RET
	0x0000 83 e0 01 c3                                      ....
command-line-arguments.convertEqBool32<1> STEXT nosplit size=8 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:48)	TEXT	command-line-arguments.convertEqBool32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:48)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:48)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:48)	FUNCDATA	$5, command-line-arguments.convertEqBool32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:48)	FUNCDATA	$6, command-line-arguments.convertEqBool32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:48)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:50)	BTL	$0, AX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:50)	SETCC	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:50)	RET
	0x0000 0f ba e0 00 0f 93 c0 c3                          ........
command-line-arguments.convertNeqBool64<1> STEXT nosplit size=4 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:53)	TEXT	command-line-arguments.convertNeqBool64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:53)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:53)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:53)	FUNCDATA	$5, command-line-arguments.convertNeqBool64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:53)	FUNCDATA	$6, command-line-arguments.convertNeqBool64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:53)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:55)	ANDL	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:55)	RET
	0x0000 83 e0 01 c3                                      ....
command-line-arguments.convertEqBool64<1> STEXT nosplit size=8 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:58)	TEXT	command-line-arguments.convertEqBool64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:58)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:58)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:58)	FUNCDATA	$5, command-line-arguments.convertEqBool64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:58)	FUNCDATA	$6, command-line-arguments.convertEqBool64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:58)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:60)	BTL	$0, AX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:60)	SETCC	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:60)	RET
	0x0000 0f ba e0 00 0f 93 c0 c3                          ........
command-line-arguments.TestSetEq64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:63)	TEXT	command-line-arguments.TestSetEq64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:63)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:63)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:63)	FUNCDATA	$5, command-line-arguments.TestSetEq64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:63)	FUNCDATA	$6, command-line-arguments.TestSetEq64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:63)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:67)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:67)	SETEQ	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:68)	RET
	0x0000 48 39 c3 0f 94 c0 c3                             H9.....
command-line-arguments.TestSetNeq64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:70)	TEXT	command-line-arguments.TestSetNeq64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:70)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:70)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:70)	FUNCDATA	$5, command-line-arguments.TestSetNeq64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:70)	FUNCDATA	$6, command-line-arguments.TestSetNeq64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:70)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:74)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:74)	SETNE	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:75)	RET
	0x0000 48 39 c3 0f 95 c0 c3                             H9.....
command-line-arguments.TestSetLt64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:77)	TEXT	command-line-arguments.TestSetLt64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:77)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:77)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:77)	FUNCDATA	$5, command-line-arguments.TestSetLt64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:77)	FUNCDATA	$6, command-line-arguments.TestSetLt64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:77)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:81)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:81)	SETHI	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:82)	RET
	0x0000 48 39 c3 0f 97 c0 c3                             H9.....
command-line-arguments.TestSetLe64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:84)	TEXT	command-line-arguments.TestSetLe64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:84)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:84)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:84)	FUNCDATA	$5, command-line-arguments.TestSetLe64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:84)	FUNCDATA	$6, command-line-arguments.TestSetLe64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:84)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:88)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:88)	SETCC	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:89)	RET
	0x0000 48 39 c3 0f 93 c0 c3                             H9.....
command-line-arguments.TestSetGt64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:91)	TEXT	command-line-arguments.TestSetGt64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:91)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:91)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:91)	FUNCDATA	$5, command-line-arguments.TestSetGt64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:91)	FUNCDATA	$6, command-line-arguments.TestSetGt64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:91)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:95)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:95)	SETCS	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:96)	RET
	0x0000 48 39 c3 0f 92 c0 c3                             H9.....
command-line-arguments.TestSetGe64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:98)	TEXT	command-line-arguments.TestSetGe64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:98)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:98)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:98)	FUNCDATA	$5, command-line-arguments.TestSetGe64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:98)	FUNCDATA	$6, command-line-arguments.TestSetGe64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:98)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:102)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:102)	SETLS	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:103)	RET
	0x0000 48 39 c3 0f 96 c0 c3                             H9.....
command-line-arguments.TestSetLtFp64<1> STEXT nosplit size=8 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:105)	TEXT	command-line-arguments.TestSetLtFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:105)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:105)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:105)	FUNCDATA	$5, command-line-arguments.TestSetLtFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:105)	FUNCDATA	$6, command-line-arguments.TestSetLtFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:105)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:109)	UCOMISD	X0, X1
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:109)	SETHI	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:110)	RET
	0x0000 66 0f 2e c8 0f 97 c0 c3                          f.......
command-line-arguments.TestSetLeFp64<1> STEXT nosplit size=8 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:112)	TEXT	command-line-arguments.TestSetLeFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:112)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:112)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:112)	FUNCDATA	$5, command-line-arguments.TestSetLeFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:112)	FUNCDATA	$6, command-line-arguments.TestSetLeFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:112)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:116)	UCOMISD	X0, X1
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:116)	SETCC	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:117)	RET
	0x0000 66 0f 2e c8 0f 93 c0 c3                          f.......
command-line-arguments.TestSetGtFp64<1> STEXT nosplit size=8 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:119)	TEXT	command-line-arguments.TestSetGtFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:119)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:119)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:119)	FUNCDATA	$5, command-line-arguments.TestSetGtFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:119)	FUNCDATA	$6, command-line-arguments.TestSetGtFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:119)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:123)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:123)	SETHI	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:124)	RET
	0x0000 66 0f 2e c1 0f 97 c0 c3                          f.......
command-line-arguments.TestSetGeFp64<1> STEXT nosplit size=8 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:126)	TEXT	command-line-arguments.TestSetGeFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:126)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:126)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:126)	FUNCDATA	$5, command-line-arguments.TestSetGeFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:126)	FUNCDATA	$6, command-line-arguments.TestSetGeFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:126)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:130)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:130)	SETCC	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:131)	RET
	0x0000 66 0f 2e c1 0f 93 c0 c3                          f.......
command-line-arguments.TestSetInvEq64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:133)	TEXT	command-line-arguments.TestSetInvEq64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:133)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:133)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:133)	FUNCDATA	$5, command-line-arguments.TestSetInvEq64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:133)	FUNCDATA	$6, command-line-arguments.TestSetInvEq64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:133)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:137)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:137)	SETNE	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:138)	RET
	0x0000 48 39 c3 0f 95 c0 c3                             H9.....
command-line-arguments.TestSetInvNeq64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:140)	TEXT	command-line-arguments.TestSetInvNeq64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:140)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:140)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:140)	FUNCDATA	$5, command-line-arguments.TestSetInvNeq64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:140)	FUNCDATA	$6, command-line-arguments.TestSetInvNeq64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:140)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:144)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:144)	SETEQ	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:145)	RET
	0x0000 48 39 c3 0f 94 c0 c3                             H9.....
command-line-arguments.TestSetInvLt64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:147)	TEXT	command-line-arguments.TestSetInvLt64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:147)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:147)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:147)	FUNCDATA	$5, command-line-arguments.TestSetInvLt64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:147)	FUNCDATA	$6, command-line-arguments.TestSetInvLt64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:147)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:151)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:151)	SETLS	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:152)	RET
	0x0000 48 39 c3 0f 96 c0 c3                             H9.....
command-line-arguments.TestSetInvLe64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:154)	TEXT	command-line-arguments.TestSetInvLe64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:154)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:154)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:154)	FUNCDATA	$5, command-line-arguments.TestSetInvLe64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:154)	FUNCDATA	$6, command-line-arguments.TestSetInvLe64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:154)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:158)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:158)	SETCS	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:159)	RET
	0x0000 48 39 c3 0f 92 c0 c3                             H9.....
command-line-arguments.TestSetInvGt64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:161)	TEXT	command-line-arguments.TestSetInvGt64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:161)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:161)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:161)	FUNCDATA	$5, command-line-arguments.TestSetInvGt64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:161)	FUNCDATA	$6, command-line-arguments.TestSetInvGt64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:161)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:165)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:165)	SETCC	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:166)	RET
	0x0000 48 39 c3 0f 93 c0 c3                             H9.....
command-line-arguments.TestSetInvGe64<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:168)	TEXT	command-line-arguments.TestSetInvGe64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:168)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:168)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:168)	FUNCDATA	$5, command-line-arguments.TestSetInvGe64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:168)	FUNCDATA	$6, command-line-arguments.TestSetInvGe64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:168)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:172)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:172)	SETHI	AL
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:173)	RET
	0x0000 48 39 c3 0f 97 c0 c3                             H9.....
command-line-arguments.TestSetInvEqFp64<1> STEXT nosplit size=13 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:176)	TEXT	command-line-arguments.TestSetInvEqFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:176)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:176)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:176)	FUNCDATA	$5, command-line-arguments.TestSetInvEqFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:176)	FUNCDATA	$6, command-line-arguments.TestSetInvEqFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:176)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:180)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:180)	SETNE	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:180)	SETPS	CL
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:180)	ORL	CX, AX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:181)	RET
	0x0000 66 0f 2e c1 0f 95 c0 0f 9a c1 09 c8 c3           f............
command-line-arguments.TestSetInvNeqFp64<1> STEXT nosplit size=13 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:183)	TEXT	command-line-arguments.TestSetInvNeqFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:183)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:183)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:183)	FUNCDATA	$5, command-line-arguments.TestSetInvNeqFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:183)	FUNCDATA	$6, command-line-arguments.TestSetInvNeqFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:183)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:187)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:187)	SETEQ	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:187)	SETPC	CL
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:187)	ANDL	CX, AX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:188)	RET
	0x0000 66 0f 2e c1 0f 94 c0 0f 9b c1 21 c8 c3           f.........!..
command-line-arguments.TestSetInvLtFp64<1> STEXT nosplit size=11 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:190)	TEXT	command-line-arguments.TestSetInvLtFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:190)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:190)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:190)	FUNCDATA	$5, command-line-arguments.TestSetInvLtFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:190)	FUNCDATA	$6, command-line-arguments.TestSetInvLtFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:190)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:194)	UCOMISD	X0, X1
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:194)	SETHI	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:194)	XORL	$1, AX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:195)	RET
	0x0000 66 0f 2e c8 0f 97 c0 83 f0 01 c3                 f..........
command-line-arguments.TestSetInvLeFp64<1> STEXT nosplit size=11 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:197)	TEXT	command-line-arguments.TestSetInvLeFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:197)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:197)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:197)	FUNCDATA	$5, command-line-arguments.TestSetInvLeFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:197)	FUNCDATA	$6, command-line-arguments.TestSetInvLeFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:197)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:201)	UCOMISD	X0, X1
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:201)	SETCC	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:201)	XORL	$1, AX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:202)	RET
	0x0000 66 0f 2e c8 0f 93 c0 83 f0 01 c3                 f..........
command-line-arguments.TestSetInvGtFp64<1> STEXT nosplit size=11 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:204)	TEXT	command-line-arguments.TestSetInvGtFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:204)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:204)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:204)	FUNCDATA	$5, command-line-arguments.TestSetInvGtFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:204)	FUNCDATA	$6, command-line-arguments.TestSetInvGtFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:204)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:208)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:208)	SETHI	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:208)	XORL	$1, AX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:209)	RET
	0x0000 66 0f 2e c1 0f 97 c0 83 f0 01 c3                 f..........
command-line-arguments.TestSetInvGeFp64<1> STEXT nosplit size=11 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:211)	TEXT	command-line-arguments.TestSetInvGeFp64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:211)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:211)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:211)	FUNCDATA	$5, command-line-arguments.TestSetInvGeFp64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:211)	FUNCDATA	$6, command-line-arguments.TestSetInvGeFp64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:211)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:215)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:215)	SETCC	AL
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:215)	XORL	$1, AX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:216)	RET
	0x0000 66 0f 2e c1 0f 93 c0 83 f0 01 c3                 f..........
command-line-arguments.TestLogicalCompareZero<1> STEXT nosplit size=213 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:218)	TEXT	command-line-arguments.TestLogicalCompareZero(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:218)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:218)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:218)	FUNCDATA	$5, command-line-arguments.TestLogicalCompareZero.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:218)	FUNCDATA	$6, command-line-arguments.TestLogicalCompareZero.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:218)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:220)	MOVQ	(AX), CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:220)	ANDL	$3, CX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:221)	TESTQ	CX, CX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:221)	JEQ	14
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:222)	MOVQ	CX, (AX)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:225)	MOVQ	8(AX), CX
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:225)	ANDQ	16(AX), CX
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:226)	TESTQ	CX, CX
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:226)	JEQ	31
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:227)	MOVQ	CX, 8(AX)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:230)	MOVQ	16(AX), CX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:230)	NOTQ	CX
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:230)	ANDQ	8(AX), CX
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:231)	TESTQ	CX, CX
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:231)	JEQ	51
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:232)	MOVQ	CX, 8(AX)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:235)	MOVQ	32(AX), CX
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:235)	ORQ	24(AX), CX
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:235)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:236)	TESTQ	CX, CX
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:236)	JEQ	73
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:237)	MOVQ	CX, 24(AX)
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:240)	MOVQ	40(AX), CX
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:240)	SUBQ	48(AX), CX
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:241)	TESTQ	CX, CX
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:241)	JEQ	90
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:242)	MOVQ	CX, 40(AX)
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:245)	MOVQ	48(AX), CX
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:245)	ORQ	40(AX), CX
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:245)	NOTQ	CX
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:246)	TESTQ	CX, CX
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:246)	JEQ	110
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:247)	MOVQ	CX, 40(AX)
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:250)	MOVQ	56(AX), CX
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:250)	XORQ	64(AX), CX
	0x0076 00118 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:251)	TESTQ	CX, CX
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:251)	JEQ	127
	0x007b 00123 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:252)	MOVQ	CX, 56(AX)
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:255)	MOVQ	72(AX), CX
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:255)	ADDQ	80(AX), CX
	0x0087 00135 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:256)	TESTQ	CX, CX
	0x008a 00138 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:256)	JEQ	144
	0x008c 00140 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:257)	MOVQ	CX, 72(AX)
	0x0090 00144 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:260)	MOVQ	88(AX), CX
	0x0094 00148 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:260)	NEGQ	CX
	0x0097 00151 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:261)	TESTQ	CX, CX
	0x009a 00154 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:261)	JEQ	160
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:262)	MOVQ	CX, 88(AX)
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:265)	MOVQ	96(AX), CX
	0x00a4 00164 (<unknown line number>)	NOP
	0x00a4 00164 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:265)	BSRQ	CX, CX
	0x00a8 00168 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:265)	MOVQ	$-1, DX
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:265)	CMOVQEQ	DX, CX
	0x00b3 00179 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:265)	ADDQ	$-63, CX
	0x00b7 00183 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:265)	NEGQ	CX
	0x00ba 00186 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:266)	TESTQ	CX, CX
	0x00bd 00189 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:266)	JEQ	195
	0x00bf 00191 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:267)	MOVQ	CX, 96(AX)
	0x00c3 00195 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:271)	MOVQ	96(AX), CX
	0x00c7 00199 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:271)	ADDQ	$4, CX
	0x00cb 00203 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:272)	TESTQ	CX, CX
	0x00ce 00206 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:272)	JGT	212
	0x00d0 00208 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:273)	MOVQ	CX, 96(AX)
	0x00d4 00212 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/bool.go:276)	RET
	0x0000 48 8b 08 83 e1 03 48 85 c9 74 03 48 89 08 48 8b  H.....H..t.H..H.
	0x0010 48 08 48 23 48 10 48 85 c9 74 04 48 89 48 08 48  H.H#H.H..t.H.H.H
	0x0020 8b 48 10 48 f7 d1 48 23 48 08 48 85 c9 74 04 48  .H.H..H#H.H..t.H
	0x0030 89 48 08 48 8b 48 20 48 0b 48 18 0f 1f 44 00 00  .H.H.H H.H...D..
	0x0040 48 85 c9 74 04 48 89 48 18 48 8b 48 28 48 2b 48  H..t.H.H.H.H(H+H
	0x0050 30 48 85 c9 74 04 48 89 48 28 48 8b 48 30 48 0b  0H..t.H.H(H.H0H.
	0x0060 48 28 48 f7 d1 48 85 c9 74 04 48 89 48 28 48 8b  H(H..H..t.H.H(H.
	0x0070 48 38 48 33 48 40 48 85 c9 74 04 48 89 48 38 48  H8H3H@H..t.H.H8H
	0x0080 8b 48 48 48 03 48 50 48 85 c9 74 04 48 89 48 48  .HHH.HPH..t.H.HH
	0x0090 48 8b 48 58 48 f7 d9 48 85 c9 74 04 48 89 48 58  H.HXH..H..t.H.HX
	0x00a0 48 8b 48 60 48 0f bd c9 48 c7 c2 ff ff ff ff 48  H.H`H...H......H
	0x00b0 0f 44 ca 48 83 c1 c1 48 f7 d9 48 85 c9 74 04 48  .D.H...H..H..t.H
	0x00c0 89 48 60 48 8b 48 60 48 83 c1 04 48 85 c9 7f 04  .H`H.H`H...H....
	0x00d0 48 89 48 60 c3                                   H.H`.
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
go:info.math/bits.LeadingZeros64$abstract<0> SDWARFABSFCN dupok size=38
	0x0000 05 6d 61 74 68 2f 62 69 74 73 2e 4c 65 61 64 69  .math/bits.Leadi
	0x0010 6e 67 5a 65 72 6f 73 36 34 00 01 25 01 13 78 00  ngZeros64..%..x.
	0x0020 00 00 00 00 00 00                                ......
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 33+4 t=R_DWARFSECREF go:info.uint64<0>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*[64]uint64-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 36 34 5d 75 69 6e 74 36 34           ..*[64]uint64
type:.eqfunc512<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:[64]uint64<0> SRODATA dupok size=72
	0x0000 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 b9 6c 70 a5 0a 08 08 11 00 00 00 00 00 00 00 00  .lp.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 40 00 00 00 00 00 00 00                          @.......
	rel 24+8 t=R_ADDR type:.eqfunc512<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[64]uint64-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[64]uint64<0>+0
	rel 48+8 t=R_ADDR type:uint64<0>+0
	rel 56+8 t=R_ADDR type:[]uint64<0>+0
type:*[64]uint64<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a2 5e 13 78 08 08 08 36 00 00 00 00 00 00 00 00  .^.x...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[64]uint64-<0>+0
	rel 48+8 t=R_ADDR type:[64]uint64<0>+0
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
command-line-arguments.convertNeq0B.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 01 01 01 ff                                   .....
command-line-arguments.convertNeq0B.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertNeq0W.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 02 02 01 ff                                   .....
command-line-arguments.convertNeq0W.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertNeq0L.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 04 04 01 ff                                   .....
command-line-arguments.convertNeq0L.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertNeq0Q.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 01 ff                                   .....
command-line-arguments.convertNeq0Q.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertNeqBool32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.convertNeqBool32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertEqBool32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.convertEqBool32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertNeqBool64.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.convertNeqBool64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.convertEqBool64.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.convertEqBool64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetEq64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetEq64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetNeq64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetNeq64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetLt64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetLt64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetLe64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetLe64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetGt64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetGt64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetGe64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetGe64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetLtFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetLtFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetLeFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetLeFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetGtFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetGtFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetGeFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetGeFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvEq64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvEq64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvNeq64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvNeq64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvLt64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvLt64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvLe64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvLe64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvGt64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvGt64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvGe64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvGe64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvEqFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvEqFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvNeqFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvNeqFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvLtFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvLtFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvLeFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvLeFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvGtFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvGtFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.TestSetInvGeFp64.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.TestSetInvGeFp64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.TestLogicalCompareZero.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.TestLogicalCompareZero.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.convertNeq0B<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 03 00 00 00 00 00 00 00 05 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.convertNeq0B<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.convertNeq0B<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.convertNeq0B<1>+0
aux for command-line-arguments.convertNeq0B<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 0c 14  ................
	0x0010 2e 06 23 02 01 00 01 01                          ..#.....
	rel 3+8 t=R_ADDR command-line-arguments.convertNeq0B<1>+0
aux for command-line-arguments.convertNeq0B<0> SDWARFFCN size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 4e  guments.convertN
	0x0020 65 71 30 42 00 00 00 00 00 00 00 00 00 00 00 00  eq0B............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 0f 01 12 78 00  ..............x.
	0x0040 00 0f 00 00 00 00 00 00 00 00 12 63 00 00 0f 00  ...........c....
	0x0050 00 00 00 00 00 00 00 11 7e 72 30 00 01 0f 00 00  ........~r0.....
	0x0060 00 00 00 0d 62 00 12 00 00 00 00 00 00 00 00 00  ....b...........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.convertNeq0B<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.convertNeq0B<1>+6
	rel 66+4 t=R_DWARFSECREF go:info.uint8<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 103+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.convertNeq0W<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 03 00 00 00 00 00 00 00 05 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.convertNeq0W<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.convertNeq0W<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.convertNeq0W<1>+0
aux for command-line-arguments.convertNeq0W<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 13 14  ................
	0x0010 2e 06 23 02 01 00 01 01                          ..#.....
	rel 3+8 t=R_ADDR command-line-arguments.convertNeq0W<1>+0
aux for command-line-arguments.convertNeq0W<0> SDWARFFCN size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 4e  guments.convertN
	0x0020 65 71 30 57 00 00 00 00 00 00 00 00 00 00 00 00  eq0W............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 16 01 12 78 00  ..............x.
	0x0040 00 16 00 00 00 00 00 00 00 00 12 63 00 00 16 00  ...........c....
	0x0050 00 00 00 00 00 00 00 11 7e 72 30 00 01 16 00 00  ........~r0.....
	0x0060 00 00 00 0d 62 00 19 00 00 00 00 00 00 00 00 00  ....b...........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.convertNeq0W<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.convertNeq0W<1>+6
	rel 66+4 t=R_DWARFSECREF go:info.uint16<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 103+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.convertNeq0L<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 03 00 00 00 00 00 00 00 05 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.convertNeq0L<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.convertNeq0L<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.convertNeq0L<1>+0
aux for command-line-arguments.convertNeq0L<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 1a 14  ................
	0x0010 2e 06 23 02 01 00 01 01                          ..#.....
	rel 3+8 t=R_ADDR command-line-arguments.convertNeq0L<1>+0
aux for command-line-arguments.convertNeq0L<0> SDWARFFCN size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 4e  guments.convertN
	0x0020 65 71 30 4c 00 00 00 00 00 00 00 00 00 00 00 00  eq0L............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 1d 01 12 78 00  ..............x.
	0x0040 00 1d 00 00 00 00 00 00 00 00 12 63 00 00 1d 00  ...........c....
	0x0050 00 00 00 00 00 00 00 11 7e 72 30 00 01 1d 00 00  ........~r0.....
	0x0060 00 00 00 0d 62 00 20 00 00 00 00 00 00 00 00 00  ....b. .........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.convertNeq0L<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.convertNeq0L<1>+6
	rel 66+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 103+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.convertNeq0Q<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 03 00 00 00 00 00 00 00 05 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.convertNeq0Q<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.convertNeq0Q<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.convertNeq0Q<1>+0
aux for command-line-arguments.convertNeq0Q<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 21 14  ..............!.
	0x0010 2e 06 23 02 01 00 01 01                          ..#.....
	rel 3+8 t=R_ADDR command-line-arguments.convertNeq0Q<1>+0
aux for command-line-arguments.convertNeq0Q<0> SDWARFFCN size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 4e  guments.convertN
	0x0020 65 71 30 51 00 00 00 00 00 00 00 00 00 00 00 00  eq0Q............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 24 01 12 78 00  ...........$..x.
	0x0040 00 24 00 00 00 00 00 00 00 00 12 63 00 00 24 00  .$.........c..$.
	0x0050 00 00 00 00 00 00 00 11 7e 72 30 00 01 24 00 00  ........~r0..$..
	0x0060 00 00 00 0d 62 00 27 00 00 00 00 00 00 00 00 00  ....b.'.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.convertNeq0Q<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.convertNeq0Q<1>+6
	rel 66+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 103+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.convertNeqBool32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.convertNeqBool32<1>+0
aux for command-line-arguments.convertNeqBool32<0> SDWARFLINES size=23
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 27 14  ..............'.
	0x0010 06 2d 02 01 00 01 01                             .-.....
	rel 3+8 t=R_ADDR command-line-arguments.convertNeqBool32<1>+0
aux for command-line-arguments.convertNeqBool32<0> SDWARFFCN size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 4e  guments.convertN
	0x0020 65 71 42 6f 6f 6c 33 32 00 00 00 00 00 00 00 00  eqBool32........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 2b  ...............+
	0x0040 01 12 78 00 00 2b 00 00 00 00 00 00 00 00 11 7e  ..x..+.........~
	0x0050 72 30 00 01 2b 00 00 00 00 00 00                 r0..+......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.convertNeqBool32<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.convertNeqBool32<1>+4
	rel 70+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.convertEqBool32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.convertEqBool32<1>+0
aux for command-line-arguments.convertEqBool32<0> SDWARFLINES size=23
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 2c 14  ..............,.
	0x0010 06 37 02 04 00 01 01                             .7.....
	rel 3+8 t=R_ADDR command-line-arguments.convertEqBool32<1>+0
aux for command-line-arguments.convertEqBool32<0> SDWARFFCN size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 45  guments.convertE
	0x0020 71 42 6f 6f 6c 33 32 00 00 00 00 00 00 00 00 00  qBool32.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 30 01  ..............0.
	0x0040 12 78 00 00 30 00 00 00 00 00 00 00 00 11 7e 72  .x..0.........~r
	0x0050 30 00 01 30 00 00 00 00 00 00                    0..0......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.convertEqBool32<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.convertEqBool32<1>+8
	rel 69+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.convertNeqBool64<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.convertNeqBool64<1>+0
aux for command-line-arguments.convertNeqBool64<0> SDWARFLINES size=23
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 31 14  ..............1.
	0x0010 06 2d 02 01 00 01 01                             .-.....
	rel 3+8 t=R_ADDR command-line-arguments.convertNeqBool64<1>+0
aux for command-line-arguments.convertNeqBool64<0> SDWARFFCN size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 4e  guments.convertN
	0x0020 65 71 42 6f 6f 6c 36 34 00 00 00 00 00 00 00 00  eqBool64........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 35  ...............5
	0x0040 01 12 78 00 00 35 00 00 00 00 00 00 00 00 11 7e  ..x..5.........~
	0x0050 72 30 00 01 35 00 00 00 00 00 00                 r0..5......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.convertNeqBool64<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.convertNeqBool64<1>+4
	rel 70+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.convertEqBool64<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.convertEqBool64<1>+0
aux for command-line-arguments.convertEqBool64<0> SDWARFLINES size=23
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 36 14  ..............6.
	0x0010 06 37 02 04 00 01 01                             .7.....
	rel 3+8 t=R_ADDR command-line-arguments.convertEqBool64<1>+0
aux for command-line-arguments.convertEqBool64<0> SDWARFFCN size=90
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 76 65 72 74 45  guments.convertE
	0x0020 71 42 6f 6f 6c 36 34 00 00 00 00 00 00 00 00 00  qBool64.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 3a 01  ..............:.
	0x0040 12 78 00 00 3a 00 00 00 00 00 00 00 00 11 7e 72  .x..:.........~r
	0x0050 30 00 01 3a 00 00 00 00 00 00                    0..:......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.convertEqBool64<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.convertEqBool64<1>+8
	rel 69+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.TestSetEq64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetEq64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetEq64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetEq64<1>+0
aux for command-line-arguments.TestSetEq64<0> SDWARFLINES size=25
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 3d 14  ..............=.
	0x0010 06 2d 06 2e 02 01 00 01 01                       .-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetEq64<1>+0
aux for command-line-arguments.TestSetEq64<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 45  guments.TestSetE
	0x0020 71 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  q64.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 3f 01 12 78 00 00  ..........?..x..
	0x0040 3f 00 00 00 00 00 00 00 00 12 79 00 00 3f 00 00  ?.........y..?..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 3f 00 00 00  .......~r0..?...
	0x0060 00 00 0d 62 00 43 00 00 00 00 00 00 00 00 00     ...b.C.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.TestSetEq64<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.TestSetEq64<1>+7
	rel 65+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetNeq64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetNeq64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetNeq64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetNeq64<1>+0
aux for command-line-arguments.TestSetNeq64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c4 00  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetNeq64<1>+0
aux for command-line-arguments.TestSetNeq64<0> SDWARFFCN size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 4e  guments.TestSetN
	0x0020 65 71 36 34 00 00 00 00 00 00 00 00 00 00 00 00  eq64............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 46 01 12 78 00  ...........F..x.
	0x0040 00 46 00 00 00 00 00 00 00 00 12 79 00 00 46 00  .F.........y..F.
	0x0050 00 00 00 00 00 00 00 11 7e 72 30 00 01 46 00 00  ........~r0..F..
	0x0060 00 00 00 0d 62 00 4a 00 00 00 00 00 00 00 00 00  ....b.J.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.TestSetNeq64<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.TestSetNeq64<1>+7
	rel 66+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 103+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetLt64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetLt64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetLt64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetLt64<1>+0
aux for command-line-arguments.TestSetLt64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 cb 00  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetLt64<1>+0
aux for command-line-arguments.TestSetLt64<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 4c  guments.TestSetL
	0x0020 74 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  t64.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 4d 01 12 78 00 00  ..........M..x..
	0x0040 4d 00 00 00 00 00 00 00 00 12 79 00 00 4d 00 00  M.........y..M..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 4d 00 00 00  .......~r0..M...
	0x0060 00 00 0d 62 00 51 00 00 00 00 00 00 00 00 00     ...b.Q.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.TestSetLt64<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.TestSetLt64<1>+7
	rel 65+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetLe64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetLe64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetLe64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetLe64<1>+0
aux for command-line-arguments.TestSetLe64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d2 00  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetLe64<1>+0
aux for command-line-arguments.TestSetLe64<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 4c  guments.TestSetL
	0x0020 65 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  e64.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 54 01 12 78 00 00  ..........T..x..
	0x0040 54 00 00 00 00 00 00 00 00 12 79 00 00 54 00 00  T.........y..T..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 54 00 00 00  .......~r0..T...
	0x0060 00 00 0d 62 00 58 00 00 00 00 00 00 00 00 00     ...b.X.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.TestSetLe64<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.TestSetLe64<1>+7
	rel 65+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetGt64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetGt64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetGt64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetGt64<1>+0
aux for command-line-arguments.TestSetGt64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d9 00  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetGt64<1>+0
aux for command-line-arguments.TestSetGt64<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 47  guments.TestSetG
	0x0020 74 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  t64.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 5b 01 12 78 00 00  ..........[..x..
	0x0040 5b 00 00 00 00 00 00 00 00 12 79 00 00 5b 00 00  [.........y..[..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 5b 00 00 00  .......~r0..[...
	0x0060 00 00 0d 62 00 5f 00 00 00 00 00 00 00 00 00     ...b._.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.TestSetGt64<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.TestSetGt64<1>+7
	rel 65+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetGe64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetGe64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetGe64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetGe64<1>+0
aux for command-line-arguments.TestSetGe64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e0 00  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetGe64<1>+0
aux for command-line-arguments.TestSetGe64<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 47  guments.TestSetG
	0x0020 65 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  e64.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 62 01 12 78 00 00  ..........b..x..
	0x0040 62 00 00 00 00 00 00 00 00 12 79 00 00 62 00 00  b.........y..b..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 62 00 00 00  .......~r0..b...
	0x0060 00 00 0d 62 00 66 00 00 00 00 00 00 00 00 00     ...b.f.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.TestSetGe64<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.TestSetGe64<1>+7
	rel 65+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetLtFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 07 00 00 00 00 00 00 00 08 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetLtFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetLtFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetLtFp64<1>+0
aux for command-line-arguments.TestSetLtFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e7 00  ................
	0x0010 14 06 37 06 2e 02 01 00 01 01                    ..7.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetLtFp64<1>+0
aux for command-line-arguments.TestSetLtFp64<0> SDWARFFCN size=113
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 4c  guments.TestSetL
	0x0020 74 46 70 36 34 00 00 00 00 00 00 00 00 00 00 00  tFp64...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 69 01 12 78  ............i..x
	0x0040 00 00 69 00 00 00 00 00 00 00 00 12 79 00 00 69  ..i.........y..i
	0x0050 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 69 00  .........~r0..i.
	0x0060 00 00 00 00 0d 62 00 6d 00 00 00 00 00 00 00 00  .....b.m........
	0x0070 00                                               .
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.TestSetLtFp64<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.TestSetLtFp64<1>+8
	rel 67+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 95+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 104+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 108+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetLeFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 07 00 00 00 00 00 00 00 08 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetLeFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetLeFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetLeFp64<1>+0
aux for command-line-arguments.TestSetLeFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ee 00  ................
	0x0010 14 06 37 06 2e 02 01 00 01 01                    ..7.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetLeFp64<1>+0
aux for command-line-arguments.TestSetLeFp64<0> SDWARFFCN size=113
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 4c  guments.TestSetL
	0x0020 65 46 70 36 34 00 00 00 00 00 00 00 00 00 00 00  eFp64...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 70 01 12 78  ............p..x
	0x0040 00 00 70 00 00 00 00 00 00 00 00 12 79 00 00 70  ..p.........y..p
	0x0050 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 70 00  .........~r0..p.
	0x0060 00 00 00 00 0d 62 00 74 00 00 00 00 00 00 00 00  .....b.t........
	0x0070 00                                               .
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.TestSetLeFp64<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.TestSetLeFp64<1>+8
	rel 67+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 95+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 104+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 108+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetGtFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 07 00 00 00 00 00 00 00 08 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetGtFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetGtFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetGtFp64<1>+0
aux for command-line-arguments.TestSetGtFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 f5 00  ................
	0x0010 14 06 37 06 2e 02 01 00 01 01                    ..7.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetGtFp64<1>+0
aux for command-line-arguments.TestSetGtFp64<0> SDWARFFCN size=113
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 47  guments.TestSetG
	0x0020 74 46 70 36 34 00 00 00 00 00 00 00 00 00 00 00  tFp64...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 77 01 12 78  ............w..x
	0x0040 00 00 77 00 00 00 00 00 00 00 00 12 79 00 00 77  ..w.........y..w
	0x0050 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 77 00  .........~r0..w.
	0x0060 00 00 00 00 0d 62 00 7b 00 00 00 00 00 00 00 00  .....b.{........
	0x0070 00                                               .
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.TestSetGtFp64<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.TestSetGtFp64<1>+8
	rel 67+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 95+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 104+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 108+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetGeFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 07 00 00 00 00 00 00 00 08 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetGeFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetGeFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetGeFp64<1>+0
aux for command-line-arguments.TestSetGeFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 fc 00  ................
	0x0010 14 06 37 06 2e 02 01 00 01 01                    ..7.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetGeFp64<1>+0
aux for command-line-arguments.TestSetGeFp64<0> SDWARFFCN size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 47  guments.TestSetG
	0x0020 65 46 70 36 34 00 00 00 00 00 00 00 00 00 00 00  eFp64...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 7e 01 12 78  ............~..x
	0x0040 00 00 7e 00 00 00 00 00 00 00 00 12 79 00 00 7e  ..~.........y..~
	0x0050 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 7e 00  .........~r0..~.
	0x0060 00 00 00 00 0d 62 00 82 01 00 00 00 00 00 00 00  .....b..........
	0x0070 00 00                                            ..
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.TestSetGeFp64<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.TestSetGeFp64<1>+8
	rel 67+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 95+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 105+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 109+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvEq64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvEq64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvEq64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvEq64<1>+0
aux for command-line-arguments.TestSetInvEq64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 83 01  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvEq64<1>+0
aux for command-line-arguments.TestSetInvEq64<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 45 71 36 34 00 00 00 00 00 00 00 00 00 00  nvEq64..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 85 01 01  ................
	0x0040 12 78 00 00 85 01 00 00 00 00 00 00 00 00 12 79  .x.............y
	0x0050 00 00 85 01 00 00 00 00 00 00 00 00 11 7e 72 30  .............~r0
	0x0060 00 01 85 01 00 00 00 00 00 0d 62 00 89 01 00 00  ..........b.....
	0x0070 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 39+8 t=R_ADDR command-line-arguments.TestSetInvEq64<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.TestSetInvEq64<1>+7
	rel 70+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+51
	rel 100+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 110+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 114+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvNeq64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvNeq64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvNeq64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvNeq64<1>+0
aux for command-line-arguments.TestSetInvNeq64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 8a 01  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvNeq64<1>+0
aux for command-line-arguments.TestSetInvNeq64<0> SDWARFFCN size=120
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 4e 65 71 36 34 00 00 00 00 00 00 00 00 00  nvNeq64.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 8c 01  ................
	0x0040 01 12 78 00 00 8c 01 00 00 00 00 00 00 00 00 12  ..x.............
	0x0050 79 00 00 8c 01 00 00 00 00 00 00 00 00 11 7e 72  y.............~r
	0x0060 30 00 01 8c 01 00 00 00 00 00 0d 62 00 90 01 00  0..........b....
	0x0070 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.TestSetInvNeq64<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.TestSetInvNeq64<1>+7
	rel 71+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 89+4 t=R_DWARFSECREF <0>+51
	rel 101+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 111+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 115+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvLt64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvLt64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvLt64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvLt64<1>+0
aux for command-line-arguments.TestSetInvLt64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 91 01  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvLt64<1>+0
aux for command-line-arguments.TestSetInvLt64<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 4c 74 36 34 00 00 00 00 00 00 00 00 00 00  nvLt64..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 93 01 01  ................
	0x0040 12 78 00 00 93 01 00 00 00 00 00 00 00 00 12 79  .x.............y
	0x0050 00 00 93 01 00 00 00 00 00 00 00 00 11 7e 72 30  .............~r0
	0x0060 00 01 93 01 00 00 00 00 00 0d 62 00 97 01 00 00  ..........b.....
	0x0070 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 39+8 t=R_ADDR command-line-arguments.TestSetInvLt64<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.TestSetInvLt64<1>+7
	rel 70+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+51
	rel 100+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 110+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 114+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvLe64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvLe64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvLe64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvLe64<1>+0
aux for command-line-arguments.TestSetInvLe64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 98 01  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvLe64<1>+0
aux for command-line-arguments.TestSetInvLe64<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 4c 65 36 34 00 00 00 00 00 00 00 00 00 00  nvLe64..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 9a 01 01  ................
	0x0040 12 78 00 00 9a 01 00 00 00 00 00 00 00 00 12 79  .x.............y
	0x0050 00 00 9a 01 00 00 00 00 00 00 00 00 11 7e 72 30  .............~r0
	0x0060 00 01 9a 01 00 00 00 00 00 0d 62 00 9e 01 00 00  ..........b.....
	0x0070 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 39+8 t=R_ADDR command-line-arguments.TestSetInvLe64<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.TestSetInvLe64<1>+7
	rel 70+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+51
	rel 100+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 110+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 114+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvGt64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvGt64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvGt64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvGt64<1>+0
aux for command-line-arguments.TestSetInvGt64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 9f 01  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvGt64<1>+0
aux for command-line-arguments.TestSetInvGt64<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 47 74 36 34 00 00 00 00 00 00 00 00 00 00  nvGt64..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 a1 01 01  ................
	0x0040 12 78 00 00 a1 01 00 00 00 00 00 00 00 00 12 79  .x.............y
	0x0050 00 00 a1 01 00 00 00 00 00 00 00 00 11 7e 72 30  .............~r0
	0x0060 00 01 a1 01 00 00 00 00 00 0d 62 00 a5 01 00 00  ..........b.....
	0x0070 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 39+8 t=R_ADDR command-line-arguments.TestSetInvGt64<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.TestSetInvGt64<1>+7
	rel 70+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+51
	rel 100+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 110+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 114+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvGe64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvGe64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvGe64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvGe64<1>+0
aux for command-line-arguments.TestSetInvGe64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 a6 01  ................
	0x0010 14 06 2d 06 2e 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvGe64<1>+0
aux for command-line-arguments.TestSetInvGe64<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 47 65 36 34 00 00 00 00 00 00 00 00 00 00  nvGe64..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 a8 01 01  ................
	0x0040 12 78 00 00 a8 01 00 00 00 00 00 00 00 00 12 79  .x.............y
	0x0050 00 00 a8 01 00 00 00 00 00 00 00 00 11 7e 72 30  .............~r0
	0x0060 00 01 a8 01 00 00 00 00 00 0d 62 00 ac 01 00 00  ..........b.....
	0x0070 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 39+8 t=R_ADDR command-line-arguments.TestSetInvGe64<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.TestSetInvGe64<1>+7
	rel 70+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+51
	rel 100+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 110+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 114+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvEqFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0c 00 00 00 00 00 00 00 0d 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvEqFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvEqFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvEqFp64<1>+0
aux for command-line-arguments.TestSetInvEqFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ae 01  ................
	0x0010 14 06 37 06 60 02 01 00 01 01                    ..7.`.....
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvEqFp64<1>+0
aux for command-line-arguments.TestSetInvEqFp64<0> SDWARFFCN size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 45 71 46 70 36 34 00 00 00 00 00 00 00 00  nvEqFp64........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 b0  ................
	0x0040 01 01 12 78 00 00 b0 01 00 00 00 00 00 00 00 00  ...x............
	0x0050 12 79 00 00 b0 01 00 00 00 00 00 00 00 00 11 7e  .y.............~
	0x0060 72 30 00 01 b0 01 00 00 00 00 00 0d 62 00 b4 01  r0..........b...
	0x0070 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.TestSetInvEqFp64<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.TestSetInvEqFp64<1>+13
	rel 72+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 86+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 90+4 t=R_DWARFSECREF <0>+51
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 112+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 116+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvNeqFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0c 00 00 00 00 00 00 00 0d 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvNeqFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvNeqFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvNeqFp64<1>+0
aux for command-line-arguments.TestSetInvNeqFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 b5 01  ................
	0x0010 14 06 37 06 60 02 01 00 01 01                    ..7.`.....
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvNeqFp64<1>+0
aux for command-line-arguments.TestSetInvNeqFp64<0> SDWARFFCN size=122
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 4e 65 71 46 70 36 34 00 00 00 00 00 00 00  nvNeqFp64.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 b7 01 01 12 78 00 00 b7 01 00 00 00 00 00 00 00  ....x...........
	0x0050 00 12 79 00 00 b7 01 00 00 00 00 00 00 00 00 11  ..y.............
	0x0060 7e 72 30 00 01 b7 01 00 00 00 00 00 0d 62 00 bb  ~r0..........b..
	0x0070 01 00 00 00 00 00 00 00 00 00                    ..........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 42+8 t=R_ADDR command-line-arguments.TestSetInvNeqFp64<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.TestSetInvNeqFp64<1>+13
	rel 73+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 77+4 t=R_DWARFSECREF <0>+0
	rel 87+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 91+4 t=R_DWARFSECREF <0>+51
	rel 103+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 113+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 117+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvLtFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0b 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0a 00 00 00 00 00 00 00 0b 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvLtFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvLtFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvLtFp64<1>+0
aux for command-line-arguments.TestSetInvLtFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 bc 01  ................
	0x0010 14 06 37 06 4c 02 01 00 01 01                    ..7.L.....
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvLtFp64<1>+0
aux for command-line-arguments.TestSetInvLtFp64<0> SDWARFFCN size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 4c 74 46 70 36 34 00 00 00 00 00 00 00 00  nvLtFp64........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 be  ................
	0x0040 01 01 12 78 00 00 be 01 00 00 00 00 00 00 00 00  ...x............
	0x0050 12 79 00 00 be 01 00 00 00 00 00 00 00 00 11 7e  .y.............~
	0x0060 72 30 00 01 be 01 00 00 00 00 00 0d 62 00 c2 01  r0..........b...
	0x0070 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.TestSetInvLtFp64<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.TestSetInvLtFp64<1>+11
	rel 72+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 86+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 90+4 t=R_DWARFSECREF <0>+51
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 112+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 116+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvLeFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0b 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0a 00 00 00 00 00 00 00 0b 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvLeFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvLeFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvLeFp64<1>+0
aux for command-line-arguments.TestSetInvLeFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c3 01  ................
	0x0010 14 06 37 06 4c 02 01 00 01 01                    ..7.L.....
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvLeFp64<1>+0
aux for command-line-arguments.TestSetInvLeFp64<0> SDWARFFCN size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 4c 65 46 70 36 34 00 00 00 00 00 00 00 00  nvLeFp64........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 c5  ................
	0x0040 01 01 12 78 00 00 c5 01 00 00 00 00 00 00 00 00  ...x............
	0x0050 12 79 00 00 c5 01 00 00 00 00 00 00 00 00 11 7e  .y.............~
	0x0060 72 30 00 01 c5 01 00 00 00 00 00 0d 62 00 c9 01  r0..........b...
	0x0070 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.TestSetInvLeFp64<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.TestSetInvLeFp64<1>+11
	rel 72+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 86+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 90+4 t=R_DWARFSECREF <0>+51
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 112+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 116+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvGtFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0b 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0a 00 00 00 00 00 00 00 0b 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvGtFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvGtFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvGtFp64<1>+0
aux for command-line-arguments.TestSetInvGtFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ca 01  ................
	0x0010 14 06 37 06 4c 02 01 00 01 01                    ..7.L.....
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvGtFp64<1>+0
aux for command-line-arguments.TestSetInvGtFp64<0> SDWARFFCN size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 47 74 46 70 36 34 00 00 00 00 00 00 00 00  nvGtFp64........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 cc  ................
	0x0040 01 01 12 78 00 00 cc 01 00 00 00 00 00 00 00 00  ...x............
	0x0050 12 79 00 00 cc 01 00 00 00 00 00 00 00 00 11 7e  .y.............~
	0x0060 72 30 00 01 cc 01 00 00 00 00 00 0d 62 00 d0 01  r0..........b...
	0x0070 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.TestSetInvGtFp64<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.TestSetInvGtFp64<1>+11
	rel 72+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 86+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 90+4 t=R_DWARFSECREF <0>+51
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 112+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 116+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestSetInvGeFp64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0b 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0a 00 00 00 00 00 00 00 0b 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.TestSetInvGeFp64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestSetInvGeFp64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.TestSetInvGeFp64<1>+0
aux for command-line-arguments.TestSetInvGeFp64<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d1 01  ................
	0x0010 14 06 37 06 4c 02 01 00 01 01                    ..7.L.....
	rel 3+8 t=R_ADDR command-line-arguments.TestSetInvGeFp64<1>+0
aux for command-line-arguments.TestSetInvGeFp64<0> SDWARFFCN size=121
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 53 65 74 49  guments.TestSetI
	0x0020 6e 76 47 65 46 70 36 34 00 00 00 00 00 00 00 00  nvGeFp64........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 d3  ................
	0x0040 01 01 12 78 00 00 d3 01 00 00 00 00 00 00 00 00  ...x............
	0x0050 12 79 00 00 d3 01 00 00 00 00 00 00 00 00 11 7e  .y.............~
	0x0060 72 30 00 01 d3 01 00 00 00 00 00 0d 62 00 d7 01  r0..........b...
	0x0070 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.TestSetInvGeFp64<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.TestSetInvGeFp64<1>+11
	rel 72+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 86+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 90+4 t=R_DWARFSECREF <0>+51
	rel 102+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 112+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 116+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.TestLogicalCompareZero<0> SDWARFLOC size=375
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 d5 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 06 00 00 00 00 00 00 00 12 00 00 00 00  ................
	0x0050 00 00 00 01 00 52 16 00 00 00 00 00 00 00 23 00  .....R........#.
	0x0060 00 00 00 00 00 00 01 00 52 2a 00 00 00 00 00 00  ........R*......
	0x0070 00 37 00 00 00 00 00 00 00 01 00 52 40 00 00 00  .7.........R@...
	0x0080 00 00 00 00 4d 00 00 00 00 00 00 00 01 00 52 51  ....M.........RQ
	0x0090 00 00 00 00 00 00 00 5e 00 00 00 00 00 00 00 01  .......^........
	0x00a0 00 52 65 00 00 00 00 00 00 00 72 00 00 00 00 00  .Re.......r.....
	0x00b0 00 00 01 00 52 76 00 00 00 00 00 00 00 83 00 00  ....Rv..........
	0x00c0 00 00 00 00 00 01 00 52 87 00 00 00 00 00 00 00  .......R........
	0x00d0 94 00 00 00 00 00 00 00 01 00 52 97 00 00 00 00  ..........R.....
	0x00e0 00 00 00 a4 00 00 00 00 00 00 00 01 00 52 ba 00  .............R..
	0x00f0 00 00 00 00 00 00 c7 00 00 00 00 00 00 00 01 00  ................
	0x0100 52 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  R...............
	0x0110 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x0120 00 cb 00 00 00 00 00 00 00 d5 00 00 00 00 00 00  ................
	0x0130 00 01 00 52 00 00 00 00 00 00 00 00 00 00 00 00  ...R............
	0x0140 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x0150 00 00 00 00 a4 00 00 00 00 00 00 00 af 00 00 00  ................
	0x0160 00 00 00 00 01 00 52 00 00 00 00 00 00 00 00 00  ......R.........
	0x0170 00 00 00 00 00 00 00                             .......
	rel 8+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+0
	rel 281+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+0
	rel 332+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+0
aux for command-line-arguments.TestLogicalCompareZero<0> SDWARFLINES size=132
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d6 01  ................
	0x0010 14 06 2d 06 2e 06 2d 06 24 30 06 37 06 38 06 2d  ..-...-.$0.7.8.-
	0x0020 06 24 3a 06 37 06 56 06 2d 06 24 3a 06 37 06 6a  .$:.7.V.-.$:.7.j
	0x0030 06 2d 06 24 3a 06 37 06 38 06 2d 06 24 3a 06 37  .-.$:.7.8.-.$:.7
	0x0040 06 56 06 2d 06 24 3a 06 37 06 38 06 2d 06 24 3a  .V.-.$:.7.8.-.$:
	0x0050 06 37 06 38 06 2d 06 24 3a 06 37 06 2e 06 2d 06  .7.8.-.$:.7...-.
	0x0060 24 3a 04 03 03 a0 7e 33 06 37 04 02 06 03 e0 01  $:....~3.7......
	0x0070 c8 06 2d 06 24 3b 06 37 06 38 06 2d 06 24 3a 02  ..-.$;.7.8.-.$:.
	0x0080 01 00 01 01                                      ....
	rel 3+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+0
aux for command-line-arguments.TestLogicalCompareZero<0> SDWARFFCN size=150
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 54 65 73 74 4c 6f 67 69  guments.TestLogi
	0x0020 63 61 6c 43 6f 6d 70 61 72 65 5a 65 72 6f 00 00  calCompareZero..
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0040 9c 02 00 00 00 da 01 01 12 78 00 00 da 01 00 00  .........x......
	0x0050 00 00 00 00 00 00 0d 62 00 dc 01 00 00 00 00 00  .......b........
	0x0060 00 00 00 0d 63 00 8f 02 00 00 00 00 00 00 00 00  ....c...........
	0x0070 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 02 00 00 00 89 02 15 00 00 00 00  ................
	0x0090 00 00 00 00 00 00                                ......
	rel 47+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+0
	rel 55+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+213
	rel 78+4 t=R_DWARFSECREF go:info.*[64]uint64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+0
	rel 91+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 95+4 t=R_DWARFSECREF <0>+51
	rel 104+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 108+4 t=R_DWARFSECREF <0>+273
	rel 113+4 t=R_DWARFSECREF go:info.math/bits.LeadingZeros64$abstract<0>+0
	rel 117+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+164
	rel 125+8 t=R_ADDR command-line-arguments.TestLogicalCompareZero<1>+186
	rel 140+4 t=R_DWARFSECREF go:info.math/bits.LeadingZeros64$abstract<0>+29
	rel 144+4 t=R_DWARFSECREF <0>+324
