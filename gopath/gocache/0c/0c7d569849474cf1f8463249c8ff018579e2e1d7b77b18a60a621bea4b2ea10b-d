# command-line-arguments
command-line-arguments.CallFunc<1> STEXT size=44 args=0x8 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	TEXT	command-line-arguments.CallFunc(SB), ABIInternal, $8-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	JLS	23
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	FUNCDATA	$5, command-line-arguments.CallFunc.arginfo1(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	FUNCDATA	$6, command-line-arguments.CallFunc.argliveinfo(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PCDATA	$3, $1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:9)	MOVQ	(AX), CX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:9)	MOVQ	AX, DX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:9)	PCDATA	$1, $1
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:9)	CALL	runtime.retpolineCX(SB)
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:10)	POPQ	BP
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:10)	RET
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:10)	NOP
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PCDATA	$1, $-1
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PCDATA	$0, $-2
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	MOVQ	AX, 8(SP)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	CALL	runtime.morestack_noctxt(SB)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	PCDATA	$0, $-1
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	MOVQ	8(SP), AX
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:7)	JMP	0
	0x0000 49 3b 66 10 76 11 55 48 89 e5 48 8b 08 48 89 c2  I;f.v.UH..H..H..
	0x0010 e8 00 00 00 00 5d c3 48 89 44 24 08 0f 1f 40 00  .....].H.D$...@.
	0x0020 e8 00 00 00 00 48 8b 44 24 08 eb d4              .....H.D$...
	rel 17+4 t=R_CALL runtime.retpolineCX<0>+0
	rel 33+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.CallInterface<1> STEXT size=70 args=0x10 locals=0x10 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	TEXT	command-line-arguments.CallInterface(SB), ABIInternal, $16-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	JLS	43
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	SUBQ	$8, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	AX, command-line-arguments.x+24(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	BX, command-line-arguments.x+32(FP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	FUNCDATA	$5, command-line-arguments.CallInterface.arginfo1(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	FUNCDATA	$6, command-line-arguments.CallInterface.argliveinfo(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PCDATA	$3, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:14)	MOVQ	24(AX), CX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:14)	MOVQ	BX, AX
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:14)	PCDATA	$1, $1
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:14)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:14)	CALL	runtime.retpolineCX(SB)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:15)	ADDQ	$8, SP
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:15)	POPQ	BP
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:15)	RET
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:15)	NOP
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PCDATA	$1, $-1
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PCDATA	$0, $-2
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	AX, 8(SP)
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	BX, 16(SP)
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	CALL	runtime.morestack_noctxt(SB)
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	PCDATA	$0, $-1
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	8(SP), AX
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	MOVQ	16(SP), BX
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:12)	JMP	0
	0x0000 49 3b 66 10 76 25 55 48 89 e5 48 83 ec 08 48 89  I;f.v%UH..H...H.
	0x0010 44 24 18 48 89 5c 24 20 48 8b 48 18 48 89 d8 90  D$.H.\$ H.H.H...
	0x0020 e8 00 00 00 00 48 83 c4 08 5d c3 48 89 44 24 08  .....H...].H.D$.
	0x0030 48 89 5c 24 10 e8 00 00 00 00 48 8b 44 24 08 48  H.\$......H.D$.H
	0x0040 8b 5c 24 10 eb ba                                .\$...
	rel 2+0 t=R_USEIFACEMETHOD type:interface { M() }<0>+80
	rel 33+4 t=R_CALL runtime.retpolineCX<0>+0
	rel 54+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.noJumpTables<1> STEXT nosplit size=132 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:19)	TEXT	command-line-arguments.noJumpTables(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:19)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:19)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:19)	FUNCDATA	$5, command-line-arguments.noJumpTables.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:19)	FUNCDATA	$6, command-line-arguments.noJumpTables.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:19)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:20)	CMPQ	AX, $4
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:29)	JGT	64
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:20)	CMPQ	AX, $1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:23)	JGT	33
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:21)	TESTQ	AX, AX
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:21)	JEQ	29
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:20)	CMPQ	AX, $1
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:23)	JNE	108
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:24)	MOVL	$1, AX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:24)	RET
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:22)	XORL	AX, AX
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:22)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:22)	RET
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:25)	CMPQ	AX, $2
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:25)	JEQ	57
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:27)	CMPQ	AX, $3
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:27)	JNE	51
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:28)	MOVL	$3, AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:28)	RET
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:30)	MOVL	$4, AX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:30)	RET
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:26)	MOVL	$2, AX
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:26)	RET
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:26)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:20)	CMPQ	AX, $6
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:33)	JGT	88
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:31)	CMPQ	AX, $5
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:31)	JNE	82
	0x004c 00076 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:32)	MOVL	$5, AX
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:32)	RET
	0x0052 00082 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:34)	MOVL	$6, AX
	0x0057 00087 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:34)	RET
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:35)	CMPQ	AX, $7
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:35)	JEQ	126
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:35)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:37)	CMPQ	AX, $8
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:37)	JEQ	120
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:39)	CMPQ	AX, $9
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:39)	JEQ	114
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:42)	MOVL	$10, AX
	0x0071 00113 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:42)	RET
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:40)	MOVL	$9, AX
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:40)	RET
	0x0078 00120 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:38)	MOVL	$8, AX
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:38)	RET
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:36)	MOVL	$7, AX
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/retpoline.go:36)	RET
	0x0000 48 83 f8 04 7f 3a 48 83 f8 01 7f 15 48 85 c0 74  H....:H.....H..t
	0x0010 0c 48 83 f8 01 75 55 b8 01 00 00 00 c3 31 c0 90  .H...uU......1..
	0x0020 c3 48 83 f8 02 74 12 48 83 f8 03 75 06 b8 03 00  .H...t.H...u....
	0x0030 00 00 c3 b8 04 00 00 00 c3 b8 02 00 00 00 c3 90  ................
	0x0040 48 83 f8 06 7f 12 48 83 f8 05 75 06 b8 05 00 00  H.....H...u.....
	0x0050 00 c3 b8 06 00 00 00 c3 48 83 f8 07 74 20 66 90  ........H...t f.
	0x0060 48 83 f8 08 74 12 48 83 f8 09 74 06 b8 0a 00 00  H...t.H...t.....
	0x0070 00 c3 b8 09 00 00 00 c3 b8 08 00 00 00 c3 b8 07  ................
	0x0080 00 00 00 c3                                      ....
go:interface { M() }.M<1> STEXT dupok size=98 args=0x10 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	go:interface { M() }.M(SB), DUPOK|WRAPPER|ABIInternal, $16-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	51
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	81
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, go:~p0+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, go:~p0+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, go:interface { M() }.M.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, go:interface { M() }.M.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0025 00037 (<autogenerated>:1)	MOVQ	BX, AX
	0x0028 00040 (<autogenerated>:1)	PCDATA	$1, $1
	0x0028 00040 (<autogenerated>:1)	CALL	runtime.retpolineCX(SB)
	0x002d 00045 (<autogenerated>:1)	ADDQ	$8, SP
	0x0031 00049 (<autogenerated>:1)	POPQ	BP
	0x0032 00050 (<autogenerated>:1)	RET
	0x0033 00051 (<autogenerated>:1)	NOP
	0x0033 00051 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0033 00051 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0033 00051 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0038 00056 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x003d 00061 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x004f 00079 (<autogenerated>:1)	JMP	0
	0x0051 00081 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0056 00086 (<autogenerated>:1)	CMPQ	(R12), R13
	0x005a 00090 (<autogenerated>:1)	JNE	23
	0x005c 00092 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x0060 00096 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 2d 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v-UH..H...M.
	0x0010 66 20 4d 85 e4 75 3a 48 89 44 24 18 48 89 5c 24  f M..u:H.D$.H.\$
	0x0020 20 48 8b 48 18 48 89 d8 e8 00 00 00 00 48 83 c4   H.H.H.......H..
	0x0030 08 5d c3 48 89 44 24 08 48 89 5c 24 10 0f 1f 00  .].H.D$.H.\$....
	0x0040 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 eb  .....H.D$.H.\$..
	0x0050 af 4c 8d 6c 24 18 4d 39 2c 24 75 bb 49 89 24 24  .L.l$.M9,$u.I.$$
	0x0060 eb b5                                            ..
	rel 2+0 t=R_USEIFACEMETHOD type:interface { M() }<0>+80
	rel 41+4 t=R_CALL runtime.retpolineCX<0>+0
	rel 65+4 t=R_CALL runtime.morestack_noctxt<0>+0
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 2d 73 70 65 63 74 72 65 3d 72 65 74 20 72 65 67  -spectre=ret reg
	0x0010 61 62 69                                         abi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
runtime.interequal·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.interequal<1>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*interface { M() }-<0> SRODATA dupok size=20
	0x0000 00 12 2a 69 6e 74 65 72 66 61 63 65 20 7b 20 4d  ..*interface { M
	0x0010 28 29 20 7d                                      () }
type:*interface { M() }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c8 f8 40 1b 08 08 08 36 00 00 00 00 00 00 00 00  ..@....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*interface { M() }-<0>+0
	rel 48+8 t=R_ADDR type:interface { M() }<0>+0
runtime.gcbits.0200000000000000<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
type:.namedata.*func()-<0> SRODATA dupok size=9
	0x0000 00 07 2a 66 75 6e 63 28 29                       ..*func()
type:*func()<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 75 ac 29 27 08 08 08 36 00 00 00 00 00 00 00 00  u.)'...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func()-<0>+0
	rel 48+8 t=R_ADDR type:func()<0>+0
type:func()<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fe fa b9 80 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00                                      ....
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func()-<0>+0
	rel 44+4 t=RelocType(-32763) type:*func()<0>+0
type:.namedata.M.<0> SRODATA dupok size=3
	0x0000 01 01 4d                                         ..M
type:interface { M() }<0> SRODATA dupok size=88
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 85 fe 20 3d 02 08 08 14 00 00 00 00 00 00 00 00  .. =............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.interequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*interface { M() }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*interface { M() }<0>+0
	rel 56+8 t=R_ADDR type:interface { M() }<0>+80
	rel 80+4 t=R_ADDROFF type:.namedata.M.<0>+0
	rel 84+4 t=R_ADDROFF type:func()<0>+0
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.CallFunc.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.CallFunc.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·IuErl7MOXaHVn7EZYWzfFA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 02 00                    ..........
command-line-arguments.CallInterface.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.CallInterface.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
command-line-arguments.noJumpTables.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.noJumpTables.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
go:interface { M() }.M.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
go:interface { M() }.M.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.CallFunc<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 15 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.CallFunc<1>+0
aux for command-line-arguments.CallFunc<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 01 14  ................
	0x0010 0a 55 2f 06 2d 06 60 20 06 41 06 37 02 0c 00 01  .U/.-.` .A.7....
	0x0020 01                                               .
	rel 3+8 t=R_ADDR command-line-arguments.CallFunc<1>+0
aux for command-line-arguments.CallFunc<0> SDWARFFCN size=71
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 43 61 6c 6c 46 75 6e 63  guments.CallFunc
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 07 01 12 66 00 00 07 00 00  ..........f.....
	0x0040 00 00 00 00 00 00 00                             .......
	rel 33+8 t=R_ADDR command-line-arguments.CallFunc<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.CallFunc<1>+44
	rel 62+4 t=R_DWARFSECREF go:info.func()<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.CallInterface<0> SDWARFLOC size=79
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00  ................
	0x0020 06 00 50 93 08 53 93 08 1f 00 00 00 00 00 00 00  ..P..S..........
	0x0030 25 00 00 00 00 00 00 00 05 00 93 08 53 93 08 00  %...........S...
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR command-line-arguments.CallInterface<1>+0
aux for command-line-arguments.CallInterface<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 06 14  ................
	0x0010 0a 73 06 37 06 75 06 37 06 6a 48 02 1b 00 01 01  .s.7.u.7.jH.....
	rel 3+8 t=R_ADDR command-line-arguments.CallInterface<1>+0
aux for command-line-arguments.CallInterface<0> SDWARFFCN size=76
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 43 61 6c 6c 49 6e 74 65  guments.CallInte
	0x0020 72 66 61 63 65 00 00 00 00 00 00 00 00 00 00 00  rface...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 0c 01 12 78  ...............x
	0x0040 00 00 0c 00 00 00 00 00 00 00 00 00              ............
	rel 38+8 t=R_ADDR command-line-arguments.CallInterface<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.CallInterface<1>+70
	rel 67+4 t=R_DWARFSECREF go:info.interface { M() }<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.noJumpTables<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1c 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.noJumpTables<1>+0
aux for command-line-arguments.noJumpTables<0> SDWARFLINES size=109
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 0e 14  ................
	0x0010 03 04 3c 06 03 7b 1f 06 3a 21 06 2d 22 06 3a 24  ..<..{..:!.-".:$
	0x0020 06 41 06 17 06 23 06 26 06 37 06 25 06 37 06 24  .A...#.&.7.%.7.$
	0x0030 06 41 06 1b 06 41 06 15 06 41 03 7e 1f 06 03 08  .A...A...A.~....
	0x0040 3c 21 06 37 06 24 06 41 06 1b 06 41 06 1a 06 37  <!.7.$.A...A...7
	0x0050 06 39 06 37 06 25 06 37 06 26 06 41 06 17 06 41  .9.7.%.7.&.A...A
	0x0060 06 17 06 41 06 17 06 41 02 01 00 01 01           ...A...A.....
	rel 3+8 t=R_ADDR command-line-arguments.noJumpTables<1>+0
aux for command-line-arguments.noJumpTables<0> SDWARFFCN size=87
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6e 6f 4a 75 6d 70 54 61  guments.noJumpTa
	0x0020 62 6c 65 73 00 00 00 00 00 00 00 00 00 00 00 00  bles............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 13 01 12 78 00  ..............x.
	0x0040 00 13 00 00 00 00 00 00 00 00 11 7e 72 30 00 01  ...........~r0..
	0x0050 13 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.noJumpTables<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.noJumpTables<1>+132
	rel 66+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int<0>+0
aux for go:interface { M() }.M<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 91 06  ............s...
	0x0010 73 06 37 06 5f 06 af 06 2d 02 22 00 01 01        s.7._...-."...
	rel 3+8 t=R_ADDR go:interface { M() }.M<1>+0
aux for go:interface { M() }.M<0> SDWARFFCN size=56
	0x0000 04 67 6f 3a 69 6e 74 65 72 66 61 63 65 20 7b 20  .go:interface { 
	0x0010 4d 28 29 20 7d 2e 4d 00 00 00 00 00 00 00 00 00  M() }.M.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 01 11 7e 70 30 00  ............~p0.
	0x0030 00 01 00 00 00 00 00 00                          ........
	rel 0+0 t=R_USETYPE type:interface { M() }<0>+0
	rel 24+8 t=R_ADDR go:interface { M() }.M<1>+0
	rel 32+8 t=R_ADDR go:interface { M() }.M<1>+98
	rel 50+4 t=R_DWARFSECREF go:info.interface { M() }<0>+0
