# command-line-arguments
command-line-arguments.StackStore<1> STEXT nosplit size=3 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:23)	TEXT	command-line-arguments.StackStore(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:23)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:23)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:25)	XORL	AX, AX
	0x0002 00002 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:25)	RET
	0x0000 31 c0 c3                                         1..
command-line-arguments.ZeroLargeStruct<1> STEXT nosplit size=20 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:42)	TEXT	command-line-arguments.ZeroLargeStruct(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:42)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:42)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:42)	FUNCDATA	$5, command-line-arguments.ZeroLargeStruct.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:42)	FUNCDATA	$6, command-line-arguments.ZeroLargeStruct.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:42)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:44)	MOVUPS	X15, (AX)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:44)	MOVUPS	X15, 8(AX)
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:44)	MOVUPS	X15, 24(AX)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:44)	MOVUPS	X15, 40(AX)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:45)	RET
	0x0000 44 0f 11 38 44 0f 11 78 08 44 0f 11 78 18 44 0f  D..8D..x.D..x.D.
	0x0010 11 78 28 c3                                      .x(.
command-line-arguments.KeepWanted<1> STEXT nosplit size=50 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:57)	TEXT	command-line-arguments.KeepWanted(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:57)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:57)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:57)	FUNCDATA	$5, command-line-arguments.KeepWanted.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:57)	FUNCDATA	$6, command-line-arguments.KeepWanted.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:57)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	(AX), CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	8(AX), DX
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	16(AX), BX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	24(AX), SI
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVUPS	X15, (AX)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVUPS	X15, 8(AX)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVUPS	X15, 24(AX)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVUPS	X15, 40(AX)
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	CX, (AX)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	DX, 8(AX)
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	BX, 16(AX)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:58)	MOVQ	SI, 24(AX)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:59)	RET
	0x0000 48 8b 08 48 8b 50 08 48 8b 58 10 48 8b 70 18 44  H..H.P.H.X.H.p.D
	0x0010 0f 11 38 44 0f 11 78 08 44 0f 11 78 18 44 0f 11  ..8D..x.D..x.D..
	0x0020 78 28 48 89 08 48 89 50 08 48 89 58 10 48 89 70  x(H..H.P.H.X.H.p
	0x0030 18 c3                                            ..
command-line-arguments.ArrayAdd64<1> STEXT nosplit size=85 args=0x60 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:70)	TEXT	command-line-arguments.ArrayAdd64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-96
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:70)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:70)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:70)	FUNCDATA	$5, command-line-arguments.ArrayAdd64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:70)	MOVUPS	X15, command-line-arguments.~r0+72(SP)
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:70)	MOVUPS	X15, command-line-arguments.~r0+88(SP)
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	command-line-arguments.b+40(SP), X0
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	ADDSD	command-line-arguments.a+8(SP), X0
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	X0, command-line-arguments.~r0+72(SP)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	command-line-arguments.b+48(SP), X0
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	ADDSD	command-line-arguments.a+16(SP), X0
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	X0, command-line-arguments.~r0+80(SP)
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	command-line-arguments.b+56(SP), X0
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	ADDSD	command-line-arguments.a+24(SP), X0
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	X0, command-line-arguments.~r0+88(SP)
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	command-line-arguments.b+64(SP), X0
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	ADDSD	command-line-arguments.a+32(SP), X0
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	MOVSD	X0, command-line-arguments.~r0+96(SP)
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:71)	RET
	0x0000 44 0f 11 7c 24 48 44 0f 11 7c 24 58 f2 0f 10 44  D..|$HD..|$X...D
	0x0010 24 28 f2 0f 58 44 24 08 f2 0f 11 44 24 48 f2 0f  $(..XD$....D$H..
	0x0020 10 44 24 30 f2 0f 58 44 24 10 f2 0f 11 44 24 50  .D$0..XD$....D$P
	0x0030 f2 0f 10 44 24 38 f2 0f 58 44 24 18 f2 0f 11 44  ...D$8..XD$....D
	0x0040 24 58 f2 0f 10 44 24 40 f2 0f 58 44 24 20 f2 0f  $X...D$@..XD$ ..
	0x0050 11 44 24 60 c3                                   .D$`.
command-line-arguments.ArrayInit<1> STEXT nosplit size=23 args=0x30 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	TEXT	command-line-arguments.ArrayInit(SB), NOSPLIT|NOFRAME|ABIInternal, $0-48
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	FUNCDATA	$5, command-line-arguments.ArrayInit.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	FUNCDATA	$6, command-line-arguments.ArrayInit.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	MOVUPS	X15, command-line-arguments.~r0+8(SP)
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:83)	MOVUPS	X15, command-line-arguments.~r0+24(SP)
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:84)	MOVQ	AX, command-line-arguments.~r0+8(SP)
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:84)	MOVQ	BX, command-line-arguments.~r0+24(SP)
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:84)	RET
	0x0000 44 0f 11 7c 24 08 44 0f 11 7c 24 18 48 89 44 24  D..|$.D..|$.H.D$
	0x0010 08 48 89 5c 24 18 c3                             .H.\$..
command-line-arguments.check_asmout<1> STEXT size=29 args=0x10 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	TEXT	command-line-arguments.check_asmout(SB), ABIInternal, $8-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	JLS	22
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	FUNCDATA	$5, command-line-arguments.check_asmout.arginfo1(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:91)	PCDATA	$1, $0
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:91)	CALL	runtime.GC(SB)
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:94)	MOVQ	command-line-arguments.b+24(SP), AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:94)	POPQ	BP
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:94)	RET
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:94)	NOP
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	PCDATA	$1, $-1
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	PCDATA	$0, $-2
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	CALL	runtime.morestack_noctxt(SB)
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	PCDATA	$0, $-1
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:90)	JMP	0
	0x0000 49 3b 66 10 76 10 55 48 89 e5 e8 00 00 00 00 48  I;f.v.UH.......H
	0x0010 8b 44 24 18 5d c3 e8 00 00 00 00 eb e3           .D$.]........
	rel 11+4 t=R_CALL runtime.GC<1>+0
	rel 23+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MightPanic<1> STEXT nosplit size=125 args=0x38 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	TEXT	command-line-arguments.MightPanic(SB), NOSPLIT|ABIInternal, $24-56
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	MOVQ	AX, command-line-arguments.a+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	FUNCDATA	$5, command-line-arguments.MightPanic.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	FUNCDATA	$6, command-line-arguments.MightPanic.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:100)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:101)	CMPQ	BX, DI
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:101)	JLS	113
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	CMPQ	CX, SI
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	JCS	102
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	CMPQ	SI, DI
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	JCS	91
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	CMPQ	CX, R8
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	JCS	80
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	CMPQ	R8, SI
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	JCS	69
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:104)	TESTQ	R9, R9
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:104)	JLT	64
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:105)	TESTQ	SI, SI
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:105)	JEQ	58
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:106)	ADDQ	$16, SP
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:106)	POPQ	BP
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:106)	RET
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:105)	PCDATA	$1, $1
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:105)	CALL	runtime.panicdivide(SB)
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:105)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:104)	CALL	runtime.panicshift(SB)
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	MOVQ	SI, CX
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	MOVQ	R8, DX
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	CALL	runtime.panicSlice3B(SB)
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	MOVQ	R8, DX
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	MOVQ	CX, BX
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:103)	CALL	runtime.panicSlice3Acap(SB)
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	MOVQ	DI, AX
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	MOVQ	SI, CX
	0x0061 00097 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	CALL	runtime.panicSliceB(SB)
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	MOVQ	CX, DX
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	MOVQ	SI, CX
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:102)	CALL	runtime.panicSliceAcap(SB)
	0x0071 00113 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:101)	MOVQ	DI, AX
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:101)	MOVQ	BX, CX
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:101)	CALL	runtime.panicIndex(SB)
	0x007c 00124 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:101)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 39 fb  UH..H...H.D$ H9.
	0x0010 76 5f 48 39 f1 72 4f 48 39 fe 72 3f 0f 1f 40 00  v_H9.rOH9.r?..@.
	0x0020 4c 39 c1 72 2b 49 39 f0 72 1b 4d 85 c9 7c 11 48  L9.r+I9.r.M..|.H
	0x0030 85 f6 74 06 48 83 c4 10 5d c3 e8 00 00 00 00 90  ..t.H...].......
	0x0040 e8 00 00 00 00 48 89 f1 4c 89 c2 e8 00 00 00 00  .....H..L.......
	0x0050 4c 89 c2 48 89 cb e8 00 00 00 00 48 89 f8 48 89  L..H.......H..H.
	0x0060 f1 e8 00 00 00 00 48 89 ca 48 89 f1 e8 00 00 00  ......H..H......
	0x0070 00 48 89 f8 48 89 d9 e8 00 00 00 00 90           .H..H........
	rel 59+4 t=R_CALL runtime.panicdivide<1>+0
	rel 65+4 t=R_CALL runtime.panicshift<1>+0
	rel 76+4 t=R_CALL runtime.panicSlice3B<1>+0
	rel 87+4 t=R_CALL runtime.panicSlice3Acap<1>+0
	rel 98+4 t=R_CALL runtime.panicSliceB<1>+0
	rel 109+4 t=R_CALL runtime.panicSliceAcap<1>+0
	rel 120+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.Defer<1> STEXT size=138 args=0x0 locals=0x48 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	TEXT	command-line-arguments.Defer(SB), ABIInternal, $72-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	JLS	127
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	SUBQ	$64, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	XORL	AX, AX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	JMP	32
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	MOVQ	command-line-arguments.i+8(SP), AX
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	INCQ	AX
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	CMPQ	AX, $2
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	JGE	75
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:110)	MOVQ	AX, command-line-arguments.i+8(SP)
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	LEAQ	command-line-arguments.Defer.func1·f(SB), AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	PCDATA	$1, $0
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	CALL	runtime.deferproc(SB)
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	TESTL	AX, AX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	JNE	64
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	JMP	18
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	CALL	runtime.deferreturn(SB)
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	ADDQ	$64, SP
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	POPQ	BP
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	RET
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	LEAQ	command-line-arguments.Defer.func2·f(SB), CX
	0x0052 00082 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	MOVQ	CX, command-line-arguments..autotmp_1+40(SP)
	0x0057 00087 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	LEAQ	command-line-arguments..autotmp_1+16(SP), AX
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	CALL	runtime.deferprocStack(SB)
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	TESTL	AX, AX
	0x0067 00103 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	JNE	116
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:115)	CALL	runtime.deferreturn(SB)
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:115)	ADDQ	$64, SP
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:115)	POPQ	BP
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:115)	RET
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	CALL	runtime.deferreturn(SB)
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	ADDQ	$64, SP
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	POPQ	BP
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	RET
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	NOP
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	PCDATA	$1, $-1
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	PCDATA	$0, $-2
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	NOP
	0x0080 00128 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	CALL	runtime.morestack_noctxt(SB)
	0x0085 00133 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	PCDATA	$0, $-1
	0x0085 00133 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:109)	JMP	0
	0x0000 49 3b 66 10 76 79 55 48 89 e5 48 83 ec 40 31 c0  I;f.vyUH..H..@1.
	0x0010 eb 0e 48 8b 44 24 08 48 ff c0 66 0f 1f 44 00 00  ..H.D$.H..f..D..
	0x0020 48 83 f8 02 7d 25 48 89 44 24 08 48 8d 05 00 00  H...}%H.D$.H....
	0x0030 00 00 e8 00 00 00 00 85 c0 75 05 eb d5 0f 1f 00  .........u......
	0x0040 e8 00 00 00 00 48 83 c4 40 5d c3 48 8d 0d 00 00  .....H..@].H....
	0x0050 00 00 48 89 4c 24 28 48 8d 44 24 10 0f 1f 40 00  ..H.L$(H.D$...@.
	0x0060 e8 00 00 00 00 85 c0 75 0b e8 00 00 00 00 48 83  .......u......H.
	0x0070 c4 40 5d c3 e8 00 00 00 00 48 83 c4 40 5d c3 90  .@]......H..@]..
	0x0080 e8 00 00 00 00 e9 76 ff ff ff                    ......v...
	rel 46+4 t=R_PCREL command-line-arguments.Defer.func1·f<0>+0
	rel 51+4 t=R_CALL runtime.deferproc<1>+0
	rel 65+4 t=R_CALL runtime.deferreturn<1>+0
	rel 78+4 t=R_PCREL command-line-arguments.Defer.func2·f<0>+0
	rel 97+4 t=R_CALL runtime.deferprocStack<1>+0
	rel 106+4 t=R_CALL runtime.deferreturn<1>+0
	rel 117+4 t=R_CALL runtime.deferreturn<1>+0
	rel 129+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.Defer.func1<1> STEXT nosplit size=1 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	TEXT	command-line-arguments.Defer.func1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:111)	RET
	0x0000 c3                                               .
command-line-arguments.Defer.func2<1> STEXT nosplit size=1 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	TEXT	command-line-arguments.Defer.func2(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/stack.go:114)	RET
	0x0000 c3                                               .
type:.eq.[4]float64<1> STEXT dupok nosplit size=63 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[4]float64(SB), DUPOK|NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[4]float64.arginfo1(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[4]float64.argliveinfo(SB)
	0x0000 00000 (<autogenerated>:1)	PCDATA	$3, $1
	0x0000 00000 (<autogenerated>:1)	XORL	CX, CX
	0x0002 00002 (<autogenerated>:1)	JMP	8
	0x0004 00004 (<autogenerated>:1)	ADDQ	$2, CX
	0x0008 00008 (<autogenerated>:1)	CMPQ	CX, $4
	0x000c 00012 (<autogenerated>:1)	JGE	57
	0x000e 00014 (<autogenerated>:1)	MOVSD	(AX)(CX*8), X0
	0x0013 00019 (<autogenerated>:1)	MOVSD	(BX)(CX*8), X1
	0x0018 00024 (<autogenerated>:1)	UCOMISD	X0, X1
	0x001c 00028 (<autogenerated>:1)	JNE	54
	0x001e 00030 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	JPS	54
	0x0022 00034 (<autogenerated>:1)	MOVSD	8(AX)(CX*8), X0
	0x0028 00040 (<autogenerated>:1)	MOVSD	8(BX)(CX*8), X1
	0x002e 00046 (<autogenerated>:1)	UCOMISD	X0, X1
	0x0032 00050 (<autogenerated>:1)	JNE	54
	0x0034 00052 (<autogenerated>:1)	JPC	4
	0x0036 00054 (<autogenerated>:1)	XORL	AX, AX
	0x0038 00056 (<autogenerated>:1)	RET
	0x0039 00057 (<autogenerated>:1)	MOVL	$1, AX
	0x003e 00062 (<autogenerated>:1)	RET
	0x0000 31 c9 eb 04 48 83 c1 02 48 83 f9 04 7d 2b f2 0f  1...H...H...}+..
	0x0010 10 04 c8 f2 0f 10 0c cb 66 0f 2e c8 75 18 66 90  ........f...u.f.
	0x0020 7a 14 f2 0f 10 44 c8 08 f2 0f 10 4c cb 08 66 0f  z....D.....L..f.
	0x0030 2e c8 75 02 7b ce 31 c0 c3 b8 01 00 00 00 c3     ..u.{.1........
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
command-line-arguments..inittask<0> SNOPTRDATA size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_INITORDER runtime..inittask<0>+0
type:.eqfunc56<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  ........8.......
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*codegen.T.<0> SRODATA dupok size=12
	0x0000 01 0a 2a 63 6f 64 65 67 65 6e 2e 54              ..*codegen.T
type:*command-line-arguments.T<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 59 41 78 e0 08 08 08 36 00 00 00 00 00 00 00 00  YAx....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.T.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.T<0>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:.importpath.command-line-arguments.<0> SRODATA dupok size=24
	0x0000 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61  ..command-line-a
	0x0010 72 67 75 6d 65 6e 74 73                          rguments
type:.namedata.A.<0> SRODATA dupok size=3
	0x0000 01 01 41                                         ..A
type:.namedata.B.<0> SRODATA dupok size=3
	0x0000 01 01 42                                         ..B
type:.namedata.C.<0> SRODATA dupok size=3
	0x0000 01 01 43                                         ..C
type:.namedata.D.<0> SRODATA dupok size=3
	0x0000 01 01 44                                         ..D
type:.namedata.x-<0> SRODATA dupok size=3
	0x0000 00 01 78                                         ..x
type:.namedata.y-<0> SRODATA dupok size=3
	0x0000 00 01 79                                         ..y
type:.namedata.z-<0> SRODATA dupok size=3
	0x0000 00 01 7a                                         ..z
type:command-line-arguments.T<0> SRODATA size=264
	0x0000 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  8...............
	0x0010 fa 01 63 9b 0f 08 08 19 00 00 00 00 00 00 00 00  ..c.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 07 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 b8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00e0 00 00 00 00 00 00 00 00 28 00 00 00 00 00 00 00  ........(.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 30 00 00 00 00 00 00 00                          0.......
	rel 24+8 t=R_ADDR type:.eqfunc56<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.T.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.T<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.T<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+8 t=R_ADDR type:.namedata.A.<0>+0
	rel 104+8 t=R_ADDR type:int<0>+0
	rel 120+8 t=R_ADDR type:.namedata.B.<0>+0
	rel 128+8 t=R_ADDR type:int<0>+0
	rel 144+8 t=R_ADDR type:.namedata.C.<0>+0
	rel 152+8 t=R_ADDR type:int<0>+0
	rel 168+8 t=R_ADDR type:.namedata.D.<0>+0
	rel 176+8 t=R_ADDR type:int<0>+0
	rel 192+8 t=R_ADDR type:.namedata.x-<0>+0
	rel 200+8 t=R_ADDR type:int<0>+0
	rel 216+8 t=R_ADDR type:.namedata.y-<0>+0
	rel 224+8 t=R_ADDR type:int<0>+0
	rel 240+8 t=R_ADDR type:.namedata.z-<0>+0
	rel 248+8 t=R_ADDR type:int<0>+0
runtime.memequal128·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal128<1>+0
type:.namedata.*[2]int-<0> SRODATA dupok size=9
	0x0000 00 07 2a 5b 32 5d 69 6e 74                       ..*[2]int
type:*[2]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4b 15 5d 5b 08 08 08 36 00 00 00 00 00 00 00 00  K.][...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]int-<0>+0
	rel 48+8 t=R_ADDR type:[2]int<0>+0
type:[2]int<0> SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 e3 a9 a8 82 0a 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal128·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[2]int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
	rel 56+8 t=R_ADDR type:[]int<0>+0
type:.eqfunc.[4]float64<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[4]float64<1>+0
type:.namedata.*[4]float64-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 34 5d 66 6c 6f 61 74 36 34           ..*[4]float64
type:*[4]float64<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 30 88 ac 53 08 08 08 36 00 00 00 00 00 00 00 00  0..S...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]float64-<0>+0
	rel 48+8 t=R_ADDR type:[4]float64<0>+0
type:[4]float64<0> SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 0d f2 9d 9a 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[4]float64<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]float64-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[4]float64<0>+0
	rel 48+8 t=R_ADDR type:float64<0>+0
	rel 56+8 t=R_ADDR type:[]float64<0>+0
type:.eqfunc32<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:.namedata.*[4]int-<0> SRODATA dupok size=9
	0x0000 00 07 2a 5b 34 5d 69 6e 74                       ..*[4]int
type:*[4]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b4 33 ce 65 08 08 08 36 00 00 00 00 00 00 00 00  .3.e...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]int-<0>+0
	rel 48+8 t=R_ADDR type:[4]int<0>+0
type:[4]int<0> SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 ba 90 9c 97 0a 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc32<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[4]int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
	rel 56+8 t=R_ADDR type:[]int<0>+0
command-line-arguments.Defer.func1·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.Defer.func1<1>+0
command-line-arguments.Defer.func2·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR command-line-arguments.Defer.func2<1>+0
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.ZeroLargeStruct.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.ZeroLargeStruct.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.KeepWanted.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.KeepWanted.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.ArrayAdd64.arginfo1<0> SRODATA static dupok size=21
	0x0000 fe 00 08 08 08 10 08 18 08 fd fe 20 08 28 08 30  ........... .(.0
	0x0010 08 38 08 fd ff                                   .8...
command-line-arguments.ArrayInit.arginfo1<0> SRODATA static dupok size=5
	0x0000 20 08 28 08 ff                                    .(..
command-line-arguments.ArrayInit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 20 00                                             .
command-line-arguments.check_asmout.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.MightPanic.arginfo1<0> SRODATA static dupok size=17
	0x0000 fe 00 08 08 08 10 08 fd 18 08 20 08 28 08 30 08  .......... .(.0.
	0x0010 ff                                               .
command-line-arguments.MightPanic.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·TjPuuCwdlCpTaRQGRKTrYw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
type:.eq.[4]float64.arginfo1<0> SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[4]float64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.StackStore<0> SDWARFLINES size=23
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 13 14  ................
	0x0010 06 23 02 01 00 01 01                             .#.....
	rel 3+8 t=R_ADDR command-line-arguments.StackStore<1>+0
aux for command-line-arguments.StackStore<0> SDWARFFCN size=72
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 53 74 61 63 6b 53 74 6f  guments.StackSto
	0x0020 72 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  re..............
	0x0030 00 00 00 01 9c 02 00 00 00 17 01 11 7e 72 30 00  ............~r0.
	0x0040 01 17 00 00 00 00 00 00                          ........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.StackStore<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.StackStore<1>+3
	rel 66+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.ZeroLargeStruct<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.ZeroLargeStruct<1>+0
aux for command-line-arguments.ZeroLargeStruct<0> SDWARFLINES size=25
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 26 14  ..............&.
	0x0010 06 37 06 a6 02 01 00 01 01                       .7.......
	rel 3+8 t=R_ADDR command-line-arguments.ZeroLargeStruct<1>+0
aux for command-line-arguments.ZeroLargeStruct<0> SDWARFFCN size=78
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 5a 65 72 6f 4c 61 72 67  guments.ZeroLarg
	0x0020 65 53 74 72 75 63 74 00 00 00 00 00 00 00 00 00  eStruct.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 2a 01  ..............*.
	0x0040 12 78 00 00 2a 00 00 00 00 00 00 00 00 00        .x..*.........
	rel 40+8 t=R_ADDR command-line-arguments.ZeroLargeStruct<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.ZeroLargeStruct<1>+20
	rel 69+4 t=R_DWARFSECREF go:info.*command-line-arguments.T<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.KeepWanted<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 32 00 00 00 00 00 00 00  ........2.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.KeepWanted<1>+0
aux for command-line-arguments.KeepWanted<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 34 14  ..............4.
	0x0010 06 2d 06 08 ec 02 01 00 01 01                    .-........
	rel 3+8 t=R_ADDR command-line-arguments.KeepWanted<1>+0
aux for command-line-arguments.KeepWanted<0> SDWARFFCN size=73
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4b 65 65 70 57 61 6e 74  guments.KeepWant
	0x0020 65 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ed..............
	0x0030 00 00 00 01 9c 02 00 00 00 39 01 12 74 00 00 39  .........9..t..9
	0x0040 00 00 00 00 00 00 00 00 00                       .........
	rel 35+8 t=R_ADDR command-line-arguments.KeepWanted<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.KeepWanted<1>+50
	rel 64+4 t=R_DWARFSECREF go:info.*command-line-arguments.T<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.ArrayAdd64<0> SDWARFLINES size=28
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c0 00  ................
	0x0010 14 06 4b 06 4c 06 4b 02 43 00 01 01              ..K.L.K.C...
	rel 3+8 t=R_ADDR command-line-arguments.ArrayAdd64<1>+0
aux for command-line-arguments.ArrayAdd64<0> SDWARFFCN size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 72 72 61 79 41 64 64  guments.ArrayAdd
	0x0020 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00  64..............
	0x0030 00 00 00 01 9c 02 00 00 00 46 01 11 61 00 00 46  .........F..a..F
	0x0040 00 00 00 00 01 9c 11 62 00 00 46 00 00 00 00 02  .......b..F.....
	0x0050 91 20 11 7e 72 30 00 01 46 00 00 00 00 00 00     . .~r0..F......
	rel 0+0 t=R_USETYPE type:[4]float64<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.ArrayAdd64<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.ArrayAdd64<1>+85
	rel 64+4 t=R_DWARFSECREF go:info.[4]float64<0>+0
	rel 75+4 t=R_DWARFSECREF go:info.[4]float64<0>+0
	rel 89+4 t=R_DWARFSECREF go:info.[4]float64<0>+0
aux for command-line-arguments.ArrayInit<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 17 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.ArrayInit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.ArrayInit<1>+0
aux for command-line-arguments.ArrayInit<0> SDWARFLINES size=28
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 cd 00  ................
	0x0010 14 06 4b 06 4c 06 41 02 06 00 01 01              ..K.L.A.....
	rel 3+8 t=R_ADDR command-line-arguments.ArrayInit<1>+0
aux for command-line-arguments.ArrayInit<0> SDWARFFCN size=97
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 72 72 61 79 49 6e 69  guments.ArrayIni
	0x0020 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0030 00 00 01 9c 02 00 00 00 53 01 12 69 00 00 53 00  ........S..i..S.
	0x0040 00 00 00 00 00 00 00 12 6a 00 00 53 00 00 00 00  ........j..S....
	0x0050 00 00 00 00 11 7e 72 30 00 01 53 00 00 00 00 00  .....~r0..S.....
	0x0060 00                                               .
	rel 0+0 t=R_USETYPE type:[4]int<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.ArrayInit<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.ArrayInit<1>+23
	rel 63+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 67+4 t=R_DWARFSECREF <0>+0
	rel 76+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 80+4 t=R_DWARFSECREF <0>+51
	rel 91+4 t=R_DWARFSECREF go:info.[4]int<0>+0
aux for command-line-arguments.check_asmout<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d4 00  ................
	0x0010 14 0a 55 2e 44 06 41 06 1f 02 07 00 01 01        ..U.D.A.......
	rel 3+8 t=R_ADDR command-line-arguments.check_asmout<1>+0
aux for command-line-arguments.check_asmout<0> SDWARFFCN size=85
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 68 65 63 6b 5f 61 73  guments.check_as
	0x0020 6d 6f 75 74 00 00 00 00 00 00 00 00 00 00 00 00  mout............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 5a 01 11 62 00  ...........Z..b.
	0x0040 00 5a 00 00 00 00 01 9c 11 7e 72 30 00 01 5a 00  .Z.......~r0..Z.
	0x0050 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.check_asmout<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.check_asmout<1>+29
	rel 66+4 t=R_DWARFSECREF go:info.[2]int<0>+0
	rel 79+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.MightPanic<0> SDWARFLOC size=443
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0020 09 00 50 93 08 53 93 08 52 93 08 48 00 00 00 00  ..P..S..R..H....
	0x0030 00 00 00 56 00 00 00 00 00 00 00 08 00 50 93 08  ...V.........P..
	0x0040 53 93 08 93 08 56 00 00 00 00 00 00 00 5e 00 00  S....V.......^..
	0x0050 00 00 00 00 00 08 00 50 93 08 93 08 52 93 08 5e  .......P....R..^
	0x0060 00 00 00 00 00 00 00 61 00 00 00 00 00 00 00 08  .......a........
	0x0070 00 93 08 53 93 08 52 93 08 61 00 00 00 00 00 00  ...S..R..a......
	0x0080 00 6c 00 00 00 00 00 00 00 07 00 93 08 53 93 08  .l...........S..
	0x0090 93 08 6c 00 00 00 00 00 00 00 74 00 00 00 00 00  ..l.......t.....
	0x00a0 00 00 08 00 50 93 08 53 93 08 93 08 74 00 00 00  ....P..S....t...
	0x00b0 00 00 00 00 77 00 00 00 00 00 00 00 08 00 93 08  ....w...........
	0x00c0 53 93 08 52 93 08 77 00 00 00 00 00 00 00 7d 00  S..R..w.......}.
	0x00d0 00 00 00 00 00 00 07 00 93 08 53 93 08 93 08 00  ..........S.....
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff  ................
	0x00f0 ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 01  .......@........
	0x0110 00 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .U..............
	0x0120 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 40 00 00 00 00 00  ..........@.....
	0x0140 00 00 01 00 54 00 00 00 00 00 00 00 00 00 00 00  ....T...........
	0x0150 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00  .............@..
	0x0170 00 00 00 00 00 01 00 58 00 00 00 00 00 00 00 00  .......X........
	0x0180 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 40 00 00 00 00 00 00 00 01 00 59 00 00 00 00 00  @.........Y.....
	0x01b0 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
	rel 247+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
	rel 298+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
	rel 349+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
	rel 400+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
aux for command-line-arguments.MightPanic<0> SDWARFLINES size=56
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 de 00  ................
	0x0010 14 0a 37 06 37 06 42 06 2d 06 24 06 2d 06 7e 06  ..7.7.B.-.$.-.~.
	0x0020 2d 06 56 06 2d 06 24 06 2d 06 24 06 4a 4a 40 ea  -.V.-.$.-.$.JJ@.
	0x0030 ea 06 7d 02 01 00 01 01                          ..}.....
	rel 3+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
aux for command-line-arguments.MightPanic<0> SDWARFFCN size=125
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 69 67 68 74 50 61 6e  guments.MightPan
	0x0020 69 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ic..............
	0x0030 00 00 00 01 9c 02 00 00 00 64 01 12 61 00 00 64  .........d..a..d
	0x0040 00 00 00 00 00 00 00 00 12 69 00 00 64 00 00 00  .........i..d...
	0x0050 00 00 00 00 00 12 6a 00 00 64 00 00 00 00 00 00  ......j..d......
	0x0060 00 00 12 6b 00 00 64 00 00 00 00 00 00 00 00 12  ...k..d.........
	0x0070 73 00 00 64 00 00 00 00 00 00 00 00 00           s..d.........
	rel 35+8 t=R_ADDR command-line-arguments.MightPanic<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.MightPanic<1>+125
	rel 64+4 t=R_DWARFSECREF go:info.[]int<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 77+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 81+4 t=R_DWARFSECREF <0>+239
	rel 90+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 94+4 t=R_DWARFSECREF <0>+290
	rel 103+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+341
	rel 116+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 120+4 t=R_DWARFSECREF <0>+392
aux for command-line-arguments.Defer<0> SDWARFLOC size=112
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 17 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0020 03 00 91 b8 7f 20 00 00 00 00 00 00 00 32 00 00  ..... .......2..
	0x0030 00 00 00 00 00 01 00 50 32 00 00 00 00 00 00 00  .......P2.......
	0x0040 4b 00 00 00 00 00 00 00 03 00 91 b8 7f 4b 00 00  K............K..
	0x0050 00 00 00 00 00 60 00 00 00 00 00 00 00 01 00 50  .....`.........P
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=R_ADDR command-line-arguments.Defer<1>+0
aux for command-line-arguments.Defer<0> SDWARFLINES size=60
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e7 00  ................
	0x0010 14 0a 73 06 37 24 06 23 06 41 06 69 06 37 06 56  ..s.7$.#.A.i.7.V
	0x0020 06 9b 06 87 4e 06 55 06 cd 06 23 06 24 06 7c 06  ....N.U...#.$.|.
	0x0030 41 06 03 7f 47 06 19 02 0a 00 01 01              A...G.......
	rel 3+8 t=R_ADDR command-line-arguments.Defer<1>+0
aux for command-line-arguments.Defer<0> SDWARFFCN size=85
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 44 65 66 65 72 00 00 00  guments.Defer...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 6d 01 17 00 00 00 00 00 00 00 00 00  ....m...........
	0x0040 00 00 00 00 00 00 00 0d 69 00 6e 00 00 00 00 00  ........i.n.....
	0x0050 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:runtime._defer<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.Defer<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.Defer<1>+138
	rel 55+8 t=R_ADDR command-line-arguments.Defer<1>+16
	rel 63+8 t=R_ADDR command-line-arguments.Defer<1>+75
	rel 75+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 79+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.Defer.func1<0> SDWARFLINES size=22
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e9 00  ................
	0x0010 14 02 01 00 01 01                                ......
	rel 3+8 t=R_ADDR command-line-arguments.Defer.func1<1>+0
aux for command-line-arguments.Defer.func1<0> SDWARFFCN size=61
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 44 65 66 65 72 2e 66 75  guments.Defer.fu
	0x0020 6e 63 31 00 00 00 00 00 00 00 00 00 00 00 00 00  nc1.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 6f 01 00           ..........o..
	rel 36+8 t=R_ADDR command-line-arguments.Defer.func1<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.Defer.func1<1>+1
aux for command-line-arguments.Defer.func2<0> SDWARFLINES size=22
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ec 00  ................
	0x0010 14 02 01 00 01 01                                ......
	rel 3+8 t=R_ADDR command-line-arguments.Defer.func2<1>+0
aux for command-line-arguments.Defer.func2<0> SDWARFFCN size=61
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 44 65 66 65 72 2e 66 75  guments.Defer.fu
	0x0020 6e 63 32 00 00 00 00 00 00 00 00 00 00 00 00 00  nc2.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 72 01 00           ..........r..
	rel 36+8 t=R_ADDR command-line-arguments.Defer.func2<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.Defer.func2<1>+1
aux for type:.eq.[4]float64<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  ........8.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 3f 00 00 00 00  ...........?....
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR type:.eq.[4]float64<1>+0
	rel 59+8 t=R_ADDR type:.eq.[4]float64<1>+0
aux for type:.eq.[4]float64<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 06 23 06 4b 06  ............#.K.
	0x0010 37 06 08 c3 06 23 06 19 06 41 02 01 00 01 01     7....#...A.....
	rel 3+8 t=R_ADDR type:.eq.[4]float64<1>+0
aux for type:.eq.[4]float64<0> SDWARFFCN size=82
	0x0000 03 74 79 70 65 3a 2e 65 71 2e 5b 34 5d 66 6c 6f  .type:.eq.[4]flo
	0x0010 61 74 36 34 00 00 00 00 00 00 00 00 00 00 00 00  at64............
	0x0020 00 00 00 00 00 01 9c 01 00 00 00 01 01 12 70 00  ..............p.
	0x0030 00 01 00 00 00 00 00 00 00 00 12 71 00 00 01 00  ...........q....
	0x0040 00 00 00 00 00 00 00 11 72 00 01 01 00 00 00 00  ........r.......
	0x0050 00 00                                            ..
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 21+8 t=R_ADDR type:.eq.[4]float64<1>+0
	rel 29+8 t=R_ADDR type:.eq.[4]float64<1>+63
	rel 50+4 t=R_DWARFSECREF go:info.*[4]float64<0>+0
	rel 54+4 t=R_DWARFSECREF <0>+0
	rel 63+4 t=R_DWARFSECREF go:info.*[4]float64<0>+0
	rel 67+4 t=R_DWARFSECREF <0>+51
	rel 76+4 t=R_DWARFSECREF go:info.bool<0>+0
