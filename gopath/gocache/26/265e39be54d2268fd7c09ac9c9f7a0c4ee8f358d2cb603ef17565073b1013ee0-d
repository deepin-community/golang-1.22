# command-line-arguments
command-line-arguments.movesmall4<1> STEXT nosplit size=41 args=0x0 locals=0x10 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:13)	TEXT	command-line-arguments.movesmall4(SB), NOSPLIT|ABIInternal, $16-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:13)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:13)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:13)	SUBQ	$8, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:13)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:13)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:14)	MOVL	$67305985, command-line-arguments.x+4(SP)
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:20)	MOVWLZX	command-line-arguments.x+4(SP), AX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:20)	MOVBLZX	command-line-arguments.x+6(SP), CX
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:20)	MOVW	AX, command-line-arguments.x+5(SP)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:20)	MOVB	CL, command-line-arguments.x+7(SP)
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:21)	ADDQ	$8, SP
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:21)	POPQ	BP
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:21)	RET
	0x0000 55 48 89 e5 48 83 ec 08 c7 44 24 04 01 02 03 04  UH..H....D$.....
	0x0010 0f b7 44 24 04 0f b6 4c 24 06 66 89 44 24 05 88  ..D$...L$.f.D$..
	0x0020 4c 24 07 48 83 c4 08 5d c3                       L$.H...].
command-line-arguments.movesmall7<1> STEXT nosplit size=48 args=0x0 locals=0x10 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:23)	TEXT	command-line-arguments.movesmall7(SB), NOSPLIT|ABIInternal, $16-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:23)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:23)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:23)	SUBQ	$8, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:23)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:23)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:24)	MOVL	$67305985, command-line-arguments.x+1(SP)
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:24)	MOVL	$117835012, command-line-arguments.x+4(SP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:29)	MOVL	command-line-arguments.x+1(SP), AX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:29)	MOVWLZX	command-line-arguments.x+5(SP), CX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:29)	MOVL	AX, command-line-arguments.x+2(SP)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:29)	MOVW	CX, command-line-arguments.x+6(SP)
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:30)	ADDQ	$8, SP
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:30)	POPQ	BP
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:30)	RET
	0x0000 55 48 89 e5 48 83 ec 08 c7 44 24 01 01 02 03 04  UH..H....D$.....
	0x0010 c7 44 24 04 04 05 06 07 8b 44 24 01 0f b7 4c 24  .D$......D$...L$
	0x0020 05 89 44 24 02 66 89 4c 24 06 48 83 c4 08 5d c3  ..D$.f.L$.H...].
command-line-arguments.movesmall16<1> STEXT nosplit size=62 args=0x0 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:32)	TEXT	command-line-arguments.movesmall16(SB), NOSPLIT|ABIInternal, $24-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:32)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:32)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:32)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:32)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:32)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:33)	MOVQ	$578437695752307201, AX
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:33)	MOVQ	AX, command-line-arguments.x(SP)
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:33)	MOVQ	$1157159078456920585, AX
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:33)	MOVQ	AX, command-line-arguments.x+8(SP)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:36)	MOVQ	command-line-arguments.x(SP), AX
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:36)	MOVQ	command-line-arguments.x+7(SP), CX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:36)	MOVQ	AX, command-line-arguments.x+1(SP)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:36)	MOVQ	CX, command-line-arguments.x+8(SP)
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:37)	ADDQ	$16, SP
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:37)	POPQ	BP
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:37)	RET
	0x0000 55 48 89 e5 48 83 ec 10 48 b8 01 02 03 04 05 06  UH..H...H.......
	0x0010 07 08 48 89 04 24 48 b8 09 0a 0b 0c 0d 0e 0f 10  ..H..$H.........
	0x0020 48 89 44 24 08 48 8b 04 24 48 8b 4c 24 07 48 89  H.D$.H..$H.L$.H.
	0x0030 44 24 01 48 89 4c 24 08 48 83 c4 10 5d c3        D$.H.L$.H...].
command-line-arguments.moveDisjointStack32<1> STEXT nosplit size=48 args=0x0 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:43)	TEXT	command-line-arguments.moveDisjointStack32(SB), NOSPLIT|ABIInternal, $40-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:43)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:43)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:43)	SUBQ	$32, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:43)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:43)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:44)	MOVUPS	X15, command-line-arguments.s(SP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:44)	MOVUPS	X15, command-line-arguments.s+16(SP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:48)	MOVUPS	command-line-arguments.x(SB), X0
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:48)	MOVUPS	X0, command-line-arguments.s(SP)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:48)	MOVUPS	command-line-arguments.x+16(SB), X0
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:48)	MOVUPS	X0, command-line-arguments.s+16(SP)
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:50)	ADDQ	$32, SP
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:50)	POPQ	BP
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:50)	RET
	0x0000 55 48 89 e5 48 83 ec 20 44 0f 11 3c 24 44 0f 11  UH..H.. D..<$D..
	0x0010 7c 24 10 0f 10 05 00 00 00 00 0f 11 04 24 0f 10  |$...........$..
	0x0020 05 00 00 00 00 0f 11 44 24 10 48 83 c4 20 5d c3  .......D$.H.. ].
	rel 0+0 t=R_USEIFACE type:*[32]uint8<0>+0
	rel 22+4 t=R_PCREL command-line-arguments.x<0>+0
	rel 33+4 t=R_PCREL command-line-arguments.x<0>+16
command-line-arguments.moveDisjointStack64<1> STEXT nosplit size=89 args=0x0 locals=0x68 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:52)	TEXT	command-line-arguments.moveDisjointStack64(SB), NOSPLIT|ABIInternal, $104-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:52)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:52)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:52)	SUBQ	$96, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:52)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:52)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:53)	LEAQ	command-line-arguments.s(SP), DI
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:53)	PCDATA	$0, $-2
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:53)	LEAQ	-32(DI), DI
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:53)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:53)	DUFFZERO	$331
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:57)	PCDATA	$0, $-1
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:57)	LEAQ	command-line-arguments.s(SP), DI
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:57)	LEAQ	command-line-arguments.x(SB), SI
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:57)	PCDATA	$0, $-2
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:57)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:57)	DUFFCOPY	$812
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:59)	PCDATA	$0, $-1
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:59)	ADDQ	$96, SP
	0x0057 00087 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:59)	POPQ	BP
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:59)	RET
	0x0000 55 48 89 e5 48 83 ec 60 48 8d 3c 24 48 8d 7f e0  UH..H..`H.<$H...
	0x0010 66 0f 1f 84 00 00 00 00 00 0f 1f 80 00 00 00 00  f...............
	0x0020 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0030 8b 6d 00 48 8d 3c 24 48 8d 35 00 00 00 00 66 90  .m.H.<$H.5....f.
	0x0040 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0050 8b 6d 00 48 83 c4 60 5d c3                       .m.H..`].
	rel 0+0 t=R_USEIFACE type:*[96]uint8<0>+0
	rel 43+4 t=R_CALL runtime.duffzero<1>+331
	rel 58+4 t=R_PCREL command-line-arguments.x<0>+0
	rel 75+4 t=R_CALL runtime.duffcopy<1>+812
command-line-arguments.moveDisjointStack<1> STEXT size=103 args=0x0 locals=0x108 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	TEXT	command-line-arguments.moveDisjointStack(SB), ABIInternal, $264-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	LEAQ	-136(SP), R12
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	CMPQ	R12, 16(R14)
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	PCDATA	$0, $-2
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	JLS	92
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	PCDATA	$0, $-1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	PUSHQ	BP
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	MOVQ	SP, BP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	SUBQ	$256, SP
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:62)	LEAQ	command-line-arguments.s(SP), DI
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:62)	PCDATA	$0, $-2
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:62)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:62)	DUFFZERO	$276
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:68)	PCDATA	$0, $-1
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:68)	LEAQ	command-line-arguments.s(SP), DI
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:68)	LEAQ	command-line-arguments.x(SB), SI
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:68)	PCDATA	$0, $-2
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:68)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:68)	DUFFCOPY	$672
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:70)	PCDATA	$0, $-1
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:70)	ADDQ	$256, SP
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:70)	POPQ	BP
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:70)	RET
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:70)	NOP
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	PCDATA	$1, $-1
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	PCDATA	$0, $-2
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	CALL	runtime.morestack_noctxt(SB)
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	PCDATA	$0, $-1
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:61)	JMP	0
	0x0000 4c 8d a4 24 78 ff ff ff 4d 3b 66 10 76 4e 55 48  L..$x...M;f.vNUH
	0x0010 89 e5 48 81 ec 00 01 00 00 48 8d 3c 24 0f 1f 00  ..H......H.<$...
	0x0020 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0030 8b 6d 00 48 8d 3c 24 48 8d 35 00 00 00 00 66 90  .m.H.<$H.5....f.
	0x0040 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0050 8b 6d 00 48 81 c4 00 01 00 00 5d c3 0f 1f 40 00  .m.H......]...@.
	0x0060 e8 00 00 00 00 eb 99                             .......
	rel 2+0 t=R_USEIFACE type:*[256]uint8<0>+0
	rel 43+4 t=R_CALL runtime.duffzero<1>+276
	rel 58+4 t=R_PCREL command-line-arguments.x<0>+0
	rel 75+4 t=R_CALL runtime.duffcopy<1>+672
	rel 97+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.moveDisjointArg<1> STEXT size=110 args=0x8 locals=0x108 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	TEXT	command-line-arguments.moveDisjointArg(SB), ABIInternal, $264-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	LEAQ	-136(SP), R12
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	CMPQ	R12, 16(R14)
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PCDATA	$0, $-2
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	JLS	93
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PCDATA	$0, $-1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PUSHQ	BP
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	MOVQ	SP, BP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	SUBQ	$256, SP
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	FUNCDATA	$5, command-line-arguments.moveDisjointArg.arginfo1(SB)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	FUNCDATA	$6, command-line-arguments.moveDisjointArg.argliveinfo(SB)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PCDATA	$3, $1
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:73)	LEAQ	command-line-arguments.s(SP), DI
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:73)	PCDATA	$0, $-2
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:73)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:73)	DUFFZERO	$276
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	PCDATA	$0, $-1
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	TESTB	AL, (AX)
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	LEAQ	command-line-arguments.s(SP), DI
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	CMPQ	AX, DI
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	JEQ	84
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	MOVQ	AX, SI
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	PCDATA	$0, $-2
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:79)	DUFFCOPY	$672
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:81)	PCDATA	$0, $-1
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:81)	ADDQ	$256, SP
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:81)	POPQ	BP
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:81)	RET
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:81)	NOP
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PCDATA	$1, $-1
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PCDATA	$0, $-2
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	MOVQ	AX, 8(SP)
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	CALL	runtime.morestack_noctxt(SB)
	0x0067 00103 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	PCDATA	$0, $-1
	0x0067 00103 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	MOVQ	8(SP), AX
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:72)	JMP	0
	0x0000 4c 8d a4 24 78 ff ff ff 4d 3b 66 10 76 4f 55 48  L..$x...M;f.vOUH
	0x0010 89 e5 48 81 ec 00 01 00 00 48 8d 3c 24 0f 1f 00  ..H......H.<$...
	0x0020 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0030 8b 6d 00 84 00 48 8d 3c 24 48 39 f8 74 16 48 89  .m...H.<$H9.t.H.
	0x0040 c6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x0050 48 8b 6d 00 48 81 c4 00 01 00 00 5d c3 48 89 44  H.m.H......].H.D
	0x0060 24 08 e8 00 00 00 00 48 8b 44 24 08 eb 92        $......H.D$...
	rel 2+0 t=R_USEIFACE type:*[256]uint8<0>+0
	rel 43+4 t=R_CALL runtime.duffzero<1>+276
	rel 76+4 t=R_CALL runtime.duffcopy<1>+672
	rel 99+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.moveDisjointNoOverlap<1> STEXT nosplit size=53 args=0x8 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	TEXT	command-line-arguments.moveDisjointNoOverlap(SB), NOSPLIT|ABIInternal, $8-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	FUNCDATA	$5, command-line-arguments.moveDisjointNoOverlap.arginfo1(SB)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	FUNCDATA	$6, command-line-arguments.moveDisjointNoOverlap.argliveinfo(SB)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:83)	PCDATA	$3, $1
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:89)	LEAQ	128(AX), SI
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:89)	MOVQ	AX, DI
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:89)	PCDATA	$0, $-2
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:89)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:89)	DUFFCOPY	$784
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:90)	PCDATA	$0, $-1
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:90)	POPQ	BP
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:90)	RET
	0x0000 55 48 89 e5 48 8d b0 80 00 00 00 48 89 c7 66 0f  UH..H......H..f.
	0x0010 1f 84 00 00 00 00 00 66 0f 1f 84 00 00 00 00 00  .......f........
	0x0020 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0030 8b 6d 00 5d c3                                   .m.].
	rel 43+4 t=R_CALL runtime.duffcopy<1>+784
command-line-arguments.moveArchLowering1<1> STEXT nosplit size=51 args=0x20 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	TEXT	command-line-arguments.moveArchLowering1(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	MOVQ	AX, command-line-arguments.b+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	FUNCDATA	$0, gclocals·cNGUyZq94N9QFR70tEjj5A==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	FUNCDATA	$5, command-line-arguments.moveArchLowering1.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	FUNCDATA	$6, command-line-arguments.moveArchLowering1.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:94)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	CMPQ	BX, $1
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	JLS	37
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:99)	TESTB	AL, (DI)
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:99)	CMPQ	AX, DI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:99)	JEQ	31
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:99)	MOVBLZX	(DI), CX
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:99)	MOVB	CL, (AX)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:100)	ADDQ	$16, SP
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:100)	POPQ	BP
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:100)	RET
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	MOVL	$1, AX
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	MOVQ	BX, CX
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	PCDATA	$1, $1
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	CALL	runtime.panicIndex(SB)
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:95)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 83 fb  UH..H...H.D$ H..
	0x0010 01 76 12 84 07 48 39 f8 74 05 0f b6 0f 88 08 48  .v...H9.t......H
	0x0020 83 c4 10 5d c3 b8 01 00 00 00 48 89 d9 e8 00 00  ...]......H.....
	0x0030 00 00 90                                         ...
	rel 46+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.moveArchLowering2<1> STEXT nosplit size=52 args=0x20 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	TEXT	command-line-arguments.moveArchLowering2(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	MOVQ	AX, command-line-arguments.b+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	FUNCDATA	$0, gclocals·cNGUyZq94N9QFR70tEjj5A==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	FUNCDATA	$5, command-line-arguments.moveArchLowering2.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	FUNCDATA	$6, command-line-arguments.moveArchLowering2.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:102)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	CMPQ	BX, $2
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	JLS	38
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:107)	TESTB	AL, (DI)
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:107)	CMPQ	AX, DI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:107)	JEQ	32
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:107)	MOVWLZX	(DI), CX
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:107)	MOVW	CX, (AX)
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:108)	ADDQ	$16, SP
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:108)	POPQ	BP
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:108)	RET
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	MOVL	$2, AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	MOVQ	BX, CX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	PCDATA	$1, $1
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	CALL	runtime.panicIndex(SB)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:103)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 83 fb  UH..H...H.D$ H..
	0x0010 02 76 13 84 07 48 39 f8 74 06 0f b7 0f 66 89 08  .v...H9.t....f..
	0x0020 48 83 c4 10 5d c3 b8 02 00 00 00 48 89 d9 e8 00  H...]......H....
	0x0030 00 00 00 90                                      ....
	rel 47+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.moveArchLowering4<1> STEXT nosplit size=50 args=0x20 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	TEXT	command-line-arguments.moveArchLowering4(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	MOVQ	AX, command-line-arguments.b+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	FUNCDATA	$0, gclocals·cNGUyZq94N9QFR70tEjj5A==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	FUNCDATA	$5, command-line-arguments.moveArchLowering4.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	FUNCDATA	$6, command-line-arguments.moveArchLowering4.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:110)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	CMPQ	BX, $4
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	JLS	36
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:115)	TESTB	AL, (DI)
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:115)	CMPQ	AX, DI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:115)	JEQ	30
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:115)	MOVL	(DI), CX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:115)	MOVL	CX, (AX)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:116)	ADDQ	$16, SP
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:116)	POPQ	BP
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:116)	RET
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	MOVL	$4, AX
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	MOVQ	BX, CX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	PCDATA	$1, $1
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	CALL	runtime.panicIndex(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:111)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 83 fb  UH..H...H.D$ H..
	0x0010 04 76 11 84 07 48 39 f8 74 04 8b 0f 89 08 48 83  .v...H9.t.....H.
	0x0020 c4 10 5d c3 b8 04 00 00 00 48 89 d9 e8 00 00 00  ..]......H......
	0x0030 00 90                                            ..
	rel 45+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.moveArchLowering8<1> STEXT nosplit size=52 args=0x20 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	TEXT	command-line-arguments.moveArchLowering8(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	MOVQ	AX, command-line-arguments.b+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	FUNCDATA	$0, gclocals·cNGUyZq94N9QFR70tEjj5A==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	FUNCDATA	$5, command-line-arguments.moveArchLowering8.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	FUNCDATA	$6, command-line-arguments.moveArchLowering8.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:118)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	CMPQ	BX, $8
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	JLS	38
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:123)	TESTB	AL, (DI)
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:123)	CMPQ	AX, DI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:123)	JEQ	32
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:123)	MOVQ	(DI), CX
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:123)	MOVQ	CX, (AX)
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:124)	ADDQ	$16, SP
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:124)	POPQ	BP
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:124)	RET
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	MOVL	$8, AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	MOVQ	BX, CX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	PCDATA	$1, $1
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	CALL	runtime.panicIndex(SB)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:119)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 83 fb  UH..H...H.D$ H..
	0x0010 08 76 13 84 07 48 39 f8 74 06 48 8b 0f 48 89 08  .v...H9.t.H..H..
	0x0020 48 83 c4 10 5d c3 b8 08 00 00 00 48 89 d9 e8 00  H...]......H....
	0x0030 00 00 00 90                                      ....
	rel 47+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.moveArchLowering16<1> STEXT nosplit size=52 args=0x20 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	TEXT	command-line-arguments.moveArchLowering16(SB), NOSPLIT|ABIInternal, $24-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	MOVQ	AX, command-line-arguments.b+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	FUNCDATA	$0, gclocals·cNGUyZq94N9QFR70tEjj5A==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	FUNCDATA	$5, command-line-arguments.moveArchLowering16.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	FUNCDATA	$6, command-line-arguments.moveArchLowering16.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:126)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	CMPQ	BX, $16
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	JLS	38
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:129)	TESTB	AL, (DI)
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:129)	CMPQ	AX, DI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:129)	JEQ	32
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:129)	MOVUPS	(DI), X0
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:129)	MOVUPS	X0, (AX)
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:130)	ADDQ	$16, SP
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:130)	POPQ	BP
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:130)	RET
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	MOVL	$16, AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	MOVQ	BX, CX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	PCDATA	$1, $1
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	CALL	runtime.panicIndex(SB)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:127)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 83 fb  UH..H...H.D$ H..
	0x0010 10 76 13 84 07 48 39 f8 74 06 0f 10 07 0f 11 00  .v...H9.t.......
	0x0020 48 83 c4 10 5d c3 b8 10 00 00 00 48 89 d9 e8 00  H...]......H....
	0x0030 00 00 00 90                                      ....
	rel 47+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.ptrEqual<1> STEXT nosplit size=1 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:134)	TEXT	command-line-arguments.ptrEqual(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:134)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:134)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:139)	RET
	0x0000 c3                                               .
command-line-arguments.ptrOneOffset<1> STEXT size=51 args=0x0 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	TEXT	command-line-arguments.ptrOneOffset(SB), ABIInternal, $32-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	JLS	44
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:145)	LEAQ	command-line-arguments.x+1(SB), AX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:145)	LEAQ	command-line-arguments.x(SB), BX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:145)	MOVL	$255, CX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:145)	PCDATA	$1, $0
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:145)	CALL	runtime.memmove(SB)
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:146)	ADDQ	$24, SP
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:146)	POPQ	BP
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:146)	RET
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:146)	NOP
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	PCDATA	$1, $-1
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	PCDATA	$0, $-2
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	CALL	runtime.morestack_noctxt(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	PCDATA	$0, $-1
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:141)	JMP	0
	0x0000 49 3b 66 10 76 26 55 48 89 e5 48 83 ec 18 48 8d  I;f.v&UH..H...H.
	0x0010 05 00 00 00 00 48 8d 1d 00 00 00 00 b9 ff 00 00  .....H..........
	0x0020 00 e8 00 00 00 00 48 83 c4 18 5d c3 e8 00 00 00  ......H...].....
	0x0030 00 eb cd                                         ...
	rel 17+4 t=R_PCREL command-line-arguments.x<0>+1
	rel 24+4 t=R_PCREL command-line-arguments.x<0>+0
	rel 34+4 t=R_CALL runtime.memmove<1>+0
	rel 45+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.ptrBothOffset<1> STEXT size=51 args=0x0 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	TEXT	command-line-arguments.ptrBothOffset(SB), ABIInternal, $32-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	JLS	44
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:152)	LEAQ	command-line-arguments.x+1(SB), AX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:152)	LEAQ	command-line-arguments.x+2(SB), BX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:152)	MOVL	$254, CX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:152)	PCDATA	$1, $0
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:152)	CALL	runtime.memmove(SB)
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:153)	ADDQ	$24, SP
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:153)	POPQ	BP
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:153)	RET
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:153)	NOP
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	PCDATA	$1, $-1
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	PCDATA	$0, $-2
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	CALL	runtime.morestack_noctxt(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	PCDATA	$0, $-1
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:148)	JMP	0
	0x0000 49 3b 66 10 76 26 55 48 89 e5 48 83 ec 18 48 8d  I;f.v&UH..H...H.
	0x0010 05 00 00 00 00 48 8d 1d 00 00 00 00 b9 fe 00 00  .....H..........
	0x0020 00 e8 00 00 00 00 48 83 c4 18 5d c3 e8 00 00 00  ......H...].....
	0x0030 00 eb cd                                         ...
	rel 17+4 t=R_PCREL command-line-arguments.x<0>+1
	rel 24+4 t=R_PCREL command-line-arguments.x<0>+2
	rel 34+4 t=R_CALL runtime.memmove<1>+0
	rel 45+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.noMaskOnCopy<1> STEXT nosplit size=59 args=0x30 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	TEXT	command-line-arguments.noMaskOnCopy(SB), NOSPLIT|ABIInternal, $24-48
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	MOVQ	AX, command-line-arguments.a+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	MOVQ	DI, command-line-arguments.s+56(FP)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	FUNCDATA	$0, gclocals·cNGUyZq94N9QFR70tEjj5A==(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	FUNCDATA	$5, command-line-arguments.noMaskOnCopy.arginfo1(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	FUNCDATA	$6, command-line-arguments.noMaskOnCopy.argliveinfo(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:156)	PCDATA	$3, $1
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	LEAQ	command-line-arguments..autotmp_4+16(SP), DX
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	CMPQ	DI, DX
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	JEQ	32
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	CMPQ	BX, R8
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	JLS	47
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	MOVQ	(AX)(R8*8), AX
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	ADDQ	$16, SP
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	POPQ	BP
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	RET
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	MOVQ	R8, AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	MOVQ	BX, CX
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	PCDATA	$1, $1
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	CALL	runtime.panicIndex(SB)
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/copy.go:158)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 89 7c  UH..H...H.D$ H.|
	0x0010 24 38 48 8d 54 24 10 48 39 d7 74 04 0f 1f 40 00  $8H.T$.H9.t...@.
	0x0020 4c 39 c3 76 0a 4a 8b 04 c0 48 83 c4 10 5d c3 4c  L9.v.J...H...].L
	0x0030 89 c0 48 89 d9 e8 00 00 00 00 90                 ..H........
	rel 54+4 t=R_CALL runtime.panicIndex<1>+0
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
command-line-arguments..inittask<0> SNOPTRDATA size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_INITORDER runtime..inittask<0>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*[256]uint8-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 32 35 36 5d 75 69 6e 74 38           ..*[256]uint8
type:.eqfunc256<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:[256]uint8<0> SRODATA dupok size=72
	0x0000 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 23 7b eb 3e 0a 01 01 11 00 00 00 00 00 00 00 00  #{.>............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 01 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc256<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[256]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[256]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:*[256]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bb d7 9b 15 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[256]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[256]uint8<0>+0
type:.namedata.*[32]uint8-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 33 32 5d 75 69 6e 74 38              ..*[32]uint8
type:.eqfunc32<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:[32]uint8<0> SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 aa ab 93 92 0a 01 01 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 20 00 00 00 00 00 00 00                           .......
	rel 24+8 t=R_ADDR type:.eqfunc32<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[32]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[32]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:*[32]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 26 0d b3 9e 08 08 08 36 00 00 00 00 00 00 00 00  &......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[32]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[32]uint8<0>+0
type:.namedata.*[96]uint8-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 39 36 5d 75 69 6e 74 38              ..*[96]uint8
type:.eqfunc96<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  ........`.......
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:[96]uint8<0> SRODATA dupok size=72
	0x0000 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0010 46 5b 9b 67 0a 01 01 11 00 00 00 00 00 00 00 00  F[.g............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 60 00 00 00 00 00 00 00                          `.......
	rel 24+8 t=R_ADDR type:.eqfunc96<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[96]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[96]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:*[96]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 17 bf 5d 4c 08 08 08 36 00 00 00 00 00 00 00 00  ..]L...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[96]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[96]uint8<0>+0
command-line-arguments.x<0> SNOPTRBSS size=256
<0> SDWARFVAR size=41
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 78 00 09 03 00 00 00 00  guments.x.......
	0x0020 00 00 00 00 00 00 00 00 01                       .........
	rel 28+8 t=R_ADDR command-line-arguments.x<0>+0
	rel 36+4 t=R_DWARFSECREF go:info.[256]uint8<0>+0
command-line-arguments..stmp_0<0> SRODATA static size=4
	0x0000 01 02 03 04                                      ....
runtime.memequal32·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal32<1>+0
type:.namedata.*[4]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 34 5d 75 69 6e 74 38                 ..*[4]uint8
type:*[4]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c4 80 4b 75 08 08 08 36 00 00 00 00 00 00 00 00  ..Ku...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[4]uint8<0>+0
type:[4]uint8<0> SRODATA dupok size=72
	0x0000 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 14 65 25 51 0a 01 01 11 00 00 00 00 00 00 00 00  .e%Q............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal32·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[4]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
command-line-arguments..stmp_1<0> SRODATA static size=7
	0x0000 01 02 03 04 05 06 07                             .......
type:.eqfunc7<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:.namedata.*[7]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 37 5d 75 69 6e 74 38                 ..*[7]uint8
type:*[7]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fe f1 76 00 08 08 08 36 00 00 00 00 00 00 00 00  ..v....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[7]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[7]uint8<0>+0
type:[7]uint8<0> SRODATA dupok size=72
	0x0000 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 fc 58 37 7f 0a 01 01 11 00 00 00 00 00 00 00 00  .X7.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 07 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc7<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[7]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[7]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
command-line-arguments..stmp_2<0> SRODATA static size=16
	0x0000 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10  ................
runtime.memequal128·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal128<1>+0
type:.namedata.*[16]uint8-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 31 36 5d 75 69 6e 74 38              ..*[16]uint8
type:*[16]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 27 a2 43 d0 08 08 08 36 00 00 00 00 00 00 00 00  '.C....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[16]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[16]uint8<0>+0
type:[16]uint8<0> SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 aa 14 2f b6 0a 01 01 11 00 00 00 00 00 00 00 00  ../.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 10 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal128·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[16]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[16]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:.namedata.*[1]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 31 5d 75 69 6e 74 38                 ..*[1]uint8
runtime.memequal8·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal8<1>+0
type:[1]uint8<0> SRODATA dupok size=72
	0x0000 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 f0 53 85 ff 0a 01 01 11 00 00 00 00 00 00 00 00  .S..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal8·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[1]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:*[1]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 29 73 59 9b 08 08 08 36 00 00 00 00 00 00 00 00  )sY....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[1]uint8<0>+0
type:.namedata.*[2]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 32 5d 75 69 6e 74 38                 ..*[2]uint8
runtime.memequal16·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal16<1>+0
type:[2]uint8<0> SRODATA dupok size=72
	0x0000 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 8a 84 23 0e 0a 01 01 11 00 00 00 00 00 00 00 00  ..#.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal16·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[2]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:*[2]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8c f4 3b dc 08 08 08 36 00 00 00 00 00 00 00 00  ..;....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[2]uint8<0>+0
type:.namedata.*[8]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 38 5d 75 69 6e 74 38                 ..*[8]uint8
type:[8]uint8<0> SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 89 18 9c b4 0a 01 01 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:*[8]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f8 9a 95 1a 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[8]uint8<0>+0
runtime.memequal0·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal0<1>+0
type:.namedata.*[0]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 30 5d 75 69 6e 74 38                 ..*[0]uint8
type:*[0]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2b 07 89 71 08 08 08 36 00 00 00 00 00 00 00 00  +..q...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[0]uint8<0>+0
type:[0]uint8<0> SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 9a fd 8c e1 0a 01 01 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal0·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[0]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.moveDisjointArg.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.moveDisjointArg.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.moveDisjointNoOverlap.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.moveDisjointNoOverlap.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·cNGUyZq94N9QFR70tEjj5A==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 04 00 00 00 09 00                    ..........
command-line-arguments.moveArchLowering1.arginfo1<0> SRODATA static dupok size=11
	0x0000 fe 00 08 08 08 10 08 fd 18 08 ff                 ...........
command-line-arguments.moveArchLowering1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.moveArchLowering2.arginfo1<0> SRODATA static dupok size=11
	0x0000 fe 00 08 08 08 10 08 fd 18 08 ff                 ...........
command-line-arguments.moveArchLowering2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.moveArchLowering4.arginfo1<0> SRODATA static dupok size=11
	0x0000 fe 00 08 08 08 10 08 fd 18 08 ff                 ...........
command-line-arguments.moveArchLowering4.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.moveArchLowering8.arginfo1<0> SRODATA static dupok size=11
	0x0000 fe 00 08 08 08 10 08 fd 18 08 ff                 ...........
command-line-arguments.moveArchLowering8.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.moveArchLowering16.arginfo1<0> SRODATA static dupok size=11
	0x0000 fe 00 08 08 08 10 08 fd 18 08 ff                 ...........
command-line-arguments.moveArchLowering16.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.noMaskOnCopy.arginfo1<0> SRODATA static dupok size=17
	0x0000 fe 00 08 08 08 10 08 fd fe 18 08 20 08 fd 28 08  ........... ..(.
	0x0010 ff                                               .
command-line-arguments.noMaskOnCopy.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.movesmall4<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 07 14  ................
	0x0010 0a 37 38 03 01 64 06 41 06 9c 02 06 00 01 01     .78..d.A.......
	rel 3+8 t=R_ADDR command-line-arguments.movesmall4<1>+0
aux for command-line-arguments.movesmall4<0> SDWARFFCN size=69
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 73 6d 61 6c  guments.movesmal
	0x0020 6c 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00  l4..............
	0x0030 00 00 00 01 9c 02 00 00 00 0d 01 0c 78 00 0e 00  ............x...
	0x0040 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:[4]uint8<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.movesmall4<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.movesmall4<1>+41
	rel 63+4 t=R_DWARFSECREF go:info.[4]uint8<0>+0
aux for command-line-arguments.movesmall7<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 11 14  ................
	0x0010 0a 37 38 06 5f 06 64 06 37 06 9c 02 06 00 01 01  .78._.d.7.......
	rel 3+8 t=R_ADDR command-line-arguments.movesmall7<1>+0
aux for command-line-arguments.movesmall7<0> SDWARFFCN size=69
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 73 6d 61 6c  guments.movesmal
	0x0020 6c 37 00 00 00 00 00 00 00 00 00 00 00 00 00 00  l7..............
	0x0030 00 00 00 01 9c 02 00 00 00 17 01 0c 78 00 18 00  ............x...
	0x0040 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:[7]uint8<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.movesmall7<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.movesmall7<1>+48
	rel 63+4 t=R_DWARFSECREF go:info.[7]uint8<0>+0
aux for command-line-arguments.movesmall16<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 1a 14  ................
	0x0010 0a 37 38 06 73 06 d0 06 37 06 a6 02 06 00 01 01  .78.s...7.......
	rel 3+8 t=R_ADDR command-line-arguments.movesmall16<1>+0
aux for command-line-arguments.movesmall16<0> SDWARFFCN size=70
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 73 6d 61 6c  guments.movesmal
	0x0020 6c 31 36 00 00 00 00 00 00 00 00 00 00 00 00 00  l16.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 20 01 0c 78 00 21  .......... ..x.!
	0x0040 00 00 00 00 00 00                                ......
	rel 0+0 t=R_USETYPE type:[16]uint8<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.movesmall16<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.movesmall16<1>+62
	rel 64+4 t=R_DWARFSECREF go:info.[16]uint8<0>+0
aux for command-line-arguments.moveDisjointStack32<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 25 14  ..............%.
	0x0010 0a 37 38 06 41 06 4f 06 55 06 b1 02 06 00 01 01  .78.A.O.U.......
	rel 3+8 t=R_ADDR command-line-arguments.moveDisjointStack32<1>+0
aux for command-line-arguments.moveDisjointStack32<0> SDWARFFCN size=78
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 44 69 73 6a  guments.moveDisj
	0x0020 6f 69 6e 74 53 74 61 63 6b 33 32 00 00 00 00 00  ointStack32.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 2b 01 0c 73 00 2c 00 00 00 00 00 00        ..+..s.,......
	rel 0+0 t=R_USETYPE type:[32]uint8<0>+0
	rel 44+8 t=R_ADDR command-line-arguments.moveDisjointStack32<1>+0
	rel 52+8 t=R_ADDR command-line-arguments.moveDisjointStack32<1>+48
	rel 72+4 t=R_DWARFSECREF go:info.[32]uint8<0>+0
aux for command-line-arguments.moveDisjointStack64<0> SDWARFLINES size=34
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 2e 14  ................
	0x0010 0a 37 38 06 37 06 08 a9 06 37 06 08 39 02 06 00  .78.7....7..9...
	0x0020 01 01                                            ..
	rel 3+8 t=R_ADDR command-line-arguments.moveDisjointStack64<1>+0
aux for command-line-arguments.moveDisjointStack64<0> SDWARFFCN size=78
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 44 69 73 6a  guments.moveDisj
	0x0020 6f 69 6e 74 53 74 61 63 6b 36 34 00 00 00 00 00  ointStack64.....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0040 00 00 34 01 0c 73 00 35 00 00 00 00 00 00        ..4..s.5......
	rel 0+0 t=R_USETYPE type:[96]uint8<0>+0
	rel 44+8 t=R_ADDR command-line-arguments.moveDisjointStack64<1>+0
	rel 52+8 t=R_ADDR command-line-arguments.moveDisjointStack64<1>+89
	rel 72+4 t=R_DWARFSECREF go:info.[96]uint8<0>+0
aux for command-line-arguments.moveDisjointStack<0> SDWARFLINES size=41
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 37 14  ..............7.
	0x0010 0a c3 56 06 37 06 03 01 f0 06 37 06 08 39 06 03  ..V.7.....7..9..
	0x0020 7b 65 06 37 02 07 00 01 01                       {e.7.....
	rel 3+8 t=R_ADDR command-line-arguments.moveDisjointStack<1>+0
aux for command-line-arguments.moveDisjointStack<0> SDWARFFCN size=76
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 44 69 73 6a  guments.moveDisj
	0x0020 6f 69 6e 74 53 74 61 63 6b 00 00 00 00 00 00 00  ointStack.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 3d 01 0c 73 00 3e 00 00 00 00 00 00              =..s.>......
	rel 0+0 t=R_USETYPE type:[256]uint8<0>+0
	rel 42+8 t=R_ADDR command-line-arguments.moveDisjointStack<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.moveDisjointStack<1>+103
	rel 70+4 t=R_DWARFSECREF go:info.[256]uint8<0>+0
aux for command-line-arguments.moveDisjointArg<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 6e 00 00 00 00 00 00 00  ........n.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.moveDisjointArg<1>+0
aux for command-line-arguments.moveDisjointArg<0> SDWARFLINES size=39
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c2 00  ................
	0x0010 14 0a c3 56 06 37 06 03 01 f0 06 23 06 08 57 03  ...V.7.....#..W.
	0x0020 7b 65 02 11 00 01 01                             {e.....
	rel 3+8 t=R_ADDR command-line-arguments.moveDisjointArg<1>+0
aux for command-line-arguments.moveDisjointArg<0> SDWARFFCN size=87
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 44 69 73 6a  guments.moveDisj
	0x0020 6f 69 6e 74 41 72 67 00 00 00 00 00 00 00 00 00  ointArg.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 48 01  ..............H.
	0x0040 12 62 00 00 48 00 00 00 00 00 00 00 00 0c 73 00  .b..H.........s.
	0x0050 49 00 00 00 00 00 00                             I......
	rel 0+0 t=R_USETYPE type:[256]uint8<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.moveDisjointArg<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.moveDisjointArg<1>+110
	rel 69+4 t=R_DWARFSECREF go:info.*[256]uint8<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.[256]uint8<0>+0
aux for command-line-arguments.moveDisjointNoOverlap<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 35 00 00 00 00 00 00 00  ........5.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.moveDisjointNoOverlap<1>+0
aux for command-line-arguments.moveDisjointNoOverlap<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 cd 00  ................
	0x0010 14 0a 19 03 01 32 06 55 06 08 b0 02 02 00 01 01  .....2.U........
	rel 3+8 t=R_ADDR command-line-arguments.moveDisjointNoOverlap<1>+0
aux for command-line-arguments.moveDisjointNoOverlap<0> SDWARFFCN size=84
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 44 69 73 6a  guments.moveDisj
	0x0020 6f 69 6e 74 4e 6f 4f 76 65 72 6c 61 70 00 00 00  ointNoOverlap...
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0040 02 00 00 00 53 01 12 61 00 00 53 00 00 00 00 00  ....S..a..S.....
	0x0050 00 00 00 00                                      ....
	rel 46+8 t=R_ADDR command-line-arguments.moveDisjointNoOverlap<1>+0
	rel 54+8 t=R_ADDR command-line-arguments.moveDisjointNoOverlap<1>+53
	rel 75+4 t=R_DWARFSECREF go:info.*[256]uint8<0>+0
	rel 79+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.moveArchLowering1<0> SDWARFLOC size=187
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x0020 09 00 50 93 08 53 93 08 52 93 08 1d 00 00 00 00  ..P..S..R.......
	0x0030 00 00 00 2a 00 00 00 00 00 00 00 08 00 50 93 08  ...*.........P..
	0x0040 53 93 08 93 08 2a 00 00 00 00 00 00 00 2d 00 00  S....*.......-..
	0x0050 00 00 00 00 00 08 00 93 08 53 93 08 52 93 08 2d  .........S..R..-
	0x0060 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00 07  .......3........
	0x0070 00 93 08 53 93 08 93 08 00 00 00 00 00 00 00 00  ...S............
	0x0080 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 33 00 00 00 00 00 00 00 01 00 55 00 00 00 00 00  3.........U.....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=R_ADDR command-line-arguments.moveArchLowering1<1>+0
	rel 144+8 t=R_ADDR command-line-arguments.moveArchLowering1<1>+0
aux for command-line-arguments.moveArchLowering1<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d8 00  ................
	0x0010 14 0a 37 06 37 06 42 06 37 06 27 06 23 06 74 06  ..7.7.B.7.'.#.t.
	0x0020 03 7f 47 06 91 02 01 00 01 01                    ..G.......
	rel 3+8 t=R_ADDR command-line-arguments.moveArchLowering1<1>+0
aux for command-line-arguments.moveArchLowering1<0> SDWARFFCN size=93
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 41 72 63 68  guments.moveArch
	0x0020 4c 6f 77 65 72 69 6e 67 31 00 00 00 00 00 00 00  Lowering1.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 5e 01 12 62 00 00 5e 00 00 00 00 00 00 00 00 12  ^..b..^.........
	0x0050 78 00 00 5e 00 00 00 00 00 00 00 00 00           x..^.........
	rel 42+8 t=R_ADDR command-line-arguments.moveArchLowering1<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.moveArchLowering1<1>+51
	rel 71+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.*[1]uint8<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+136
aux for command-line-arguments.moveArchLowering2<0> SDWARFLOC size=187
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x0020 09 00 50 93 08 53 93 08 52 93 08 1d 00 00 00 00  ..P..S..R.......
	0x0030 00 00 00 2b 00 00 00 00 00 00 00 08 00 50 93 08  ...+.........P..
	0x0040 53 93 08 93 08 2b 00 00 00 00 00 00 00 2e 00 00  S....+..........
	0x0050 00 00 00 00 00 08 00 93 08 53 93 08 52 93 08 2e  .........S..R...
	0x0060 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00 07  .......4........
	0x0070 00 93 08 53 93 08 93 08 00 00 00 00 00 00 00 00  ...S............
	0x0080 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 34 00 00 00 00 00 00 00 01 00 55 00 00 00 00 00  4.........U.....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=R_ADDR command-line-arguments.moveArchLowering2<1>+0
	rel 144+8 t=R_ADDR command-line-arguments.moveArchLowering2<1>+0
aux for command-line-arguments.moveArchLowering2<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e0 00  ................
	0x0010 14 0a 37 06 37 06 42 06 37 06 27 06 23 06 7e 06  ..7.7.B.7.'.#.~.
	0x0020 03 7f 47 06 91 02 01 00 01 01                    ..G.......
	rel 3+8 t=R_ADDR command-line-arguments.moveArchLowering2<1>+0
aux for command-line-arguments.moveArchLowering2<0> SDWARFFCN size=93
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 41 72 63 68  guments.moveArch
	0x0020 4c 6f 77 65 72 69 6e 67 32 00 00 00 00 00 00 00  Lowering2.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 66 01 12 62 00 00 66 00 00 00 00 00 00 00 00 12  f..b..f.........
	0x0050 78 00 00 66 00 00 00 00 00 00 00 00 00           x..f.........
	rel 42+8 t=R_ADDR command-line-arguments.moveArchLowering2<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.moveArchLowering2<1>+52
	rel 71+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.*[2]uint8<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+136
aux for command-line-arguments.moveArchLowering4<0> SDWARFLOC size=187
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1c 00 00 00 00 00 00 00  ................
	0x0020 09 00 50 93 08 53 93 08 52 93 08 1c 00 00 00 00  ..P..S..R.......
	0x0030 00 00 00 29 00 00 00 00 00 00 00 08 00 50 93 08  ...).........P..
	0x0040 53 93 08 93 08 29 00 00 00 00 00 00 00 2c 00 00  S....).......,..
	0x0050 00 00 00 00 00 08 00 93 08 53 93 08 52 93 08 2c  .........S..R..,
	0x0060 00 00 00 00 00 00 00 32 00 00 00 00 00 00 00 07  .......2........
	0x0070 00 93 08 53 93 08 93 08 00 00 00 00 00 00 00 00  ...S............
	0x0080 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 32 00 00 00 00 00 00 00 01 00 55 00 00 00 00 00  2.........U.....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=R_ADDR command-line-arguments.moveArchLowering4<1>+0
	rel 144+8 t=R_ADDR command-line-arguments.moveArchLowering4<1>+0
aux for command-line-arguments.moveArchLowering4<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e8 00  ................
	0x0010 14 0a 37 06 37 06 42 06 37 06 27 06 23 06 6a 06  ..7.7.B.7.'.#.j.
	0x0020 03 7f 47 06 91 02 01 00 01 01                    ..G.......
	rel 3+8 t=R_ADDR command-line-arguments.moveArchLowering4<1>+0
aux for command-line-arguments.moveArchLowering4<0> SDWARFFCN size=93
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 41 72 63 68  guments.moveArch
	0x0020 4c 6f 77 65 72 69 6e 67 34 00 00 00 00 00 00 00  Lowering4.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 6e 01 12 62 00 00 6e 00 00 00 00 00 00 00 00 12  n..b..n.........
	0x0050 78 00 00 6e 00 00 00 00 00 00 00 00 00           x..n.........
	rel 42+8 t=R_ADDR command-line-arguments.moveArchLowering4<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.moveArchLowering4<1>+50
	rel 71+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.*[4]uint8<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+136
aux for command-line-arguments.moveArchLowering8<0> SDWARFLOC size=187
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x0020 09 00 50 93 08 53 93 08 52 93 08 1d 00 00 00 00  ..P..S..R.......
	0x0030 00 00 00 2b 00 00 00 00 00 00 00 08 00 50 93 08  ...+.........P..
	0x0040 53 93 08 93 08 2b 00 00 00 00 00 00 00 2e 00 00  S....+..........
	0x0050 00 00 00 00 00 08 00 93 08 53 93 08 52 93 08 2e  .........S..R...
	0x0060 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00 07  .......4........
	0x0070 00 93 08 53 93 08 93 08 00 00 00 00 00 00 00 00  ...S............
	0x0080 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 34 00 00 00 00 00 00 00 01 00 55 00 00 00 00 00  4.........U.....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=R_ADDR command-line-arguments.moveArchLowering8<1>+0
	rel 144+8 t=R_ADDR command-line-arguments.moveArchLowering8<1>+0
aux for command-line-arguments.moveArchLowering8<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 f0 00  ................
	0x0010 14 0a 37 06 37 06 42 06 37 06 27 06 23 06 7e 06  ..7.7.B.7.'.#.~.
	0x0020 03 7f 47 06 91 02 01 00 01 01                    ..G.......
	rel 3+8 t=R_ADDR command-line-arguments.moveArchLowering8<1>+0
aux for command-line-arguments.moveArchLowering8<0> SDWARFFCN size=93
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 41 72 63 68  guments.moveArch
	0x0020 4c 6f 77 65 72 69 6e 67 38 00 00 00 00 00 00 00  Lowering8.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 76 01 12 62 00 00 76 00 00 00 00 00 00 00 00 12  v..b..v.........
	0x0050 78 00 00 76 00 00 00 00 00 00 00 00 00           x..v.........
	rel 42+8 t=R_ADDR command-line-arguments.moveArchLowering8<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.moveArchLowering8<1>+52
	rel 71+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 84+4 t=R_DWARFSECREF go:info.*[8]uint8<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+136
aux for command-line-arguments.moveArchLowering16<0> SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 2b 00 00 00 00 00 00 00  ........+.......
	0x0020 09 00 50 93 08 53 93 08 52 93 08 2b 00 00 00 00  ..P..S..R..+....
	0x0030 00 00 00 2e 00 00 00 00 00 00 00 08 00 93 08 53  ...............S
	0x0040 93 08 52 93 08 2e 00 00 00 00 00 00 00 34 00 00  ..R..........4..
	0x0050 00 00 00 00 00 07 00 93 08 53 93 08 93 08 00 00  .........S......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0070 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 34 00 00 00 00 00 00 00 01 00  ......4.........
	0x0090 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  U...............
	0x00a0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.moveArchLowering16<1>+0
	rel 118+8 t=R_ADDR command-line-arguments.moveArchLowering16<1>+0
aux for command-line-arguments.moveArchLowering16<0> SDWARFLINES size=40
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 f8 00  ................
	0x0010 14 0a 37 06 37 06 42 06 37 06 25 06 23 06 7e 06  ..7.7.B.7.%.#.~.
	0x0020 48 06 91 02 01 00 01 01                          H.......
	rel 3+8 t=R_ADDR command-line-arguments.moveArchLowering16<1>+0
aux for command-line-arguments.moveArchLowering16<0> SDWARFFCN size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 6f 76 65 41 72 63 68  guments.moveArch
	0x0020 4c 6f 77 65 72 69 6e 67 31 36 00 00 00 00 00 00  Lowering16......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00  ................
	0x0040 00 7e 01 12 62 00 00 7e 00 00 00 00 00 00 00 00  .~..b..~........
	0x0050 12 78 00 00 7e 00 00 00 00 00 00 00 00 00        .x..~.........
	rel 43+8 t=R_ADDR command-line-arguments.moveArchLowering16<1>+0
	rel 51+8 t=R_ADDR command-line-arguments.moveArchLowering16<1>+52
	rel 72+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.*[16]uint8<0>+0
	rel 89+4 t=R_DWARFSECREF <0>+110
aux for command-line-arguments.ptrEqual<0> SDWARFLINES size=22
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 85 01  ................
	0x0010 14 02 01 00 01 01                                ......
	rel 3+8 t=R_ADDR command-line-arguments.ptrEqual<1>+0
aux for command-line-arguments.ptrEqual<0> SDWARFFCN size=59
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 70 74 72 45 71 75 61 6c  guments.ptrEqual
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 86 01 01 00                 ...........
	rel 33+8 t=R_ADDR command-line-arguments.ptrEqual<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.ptrEqual<1>+1
aux for command-line-arguments.ptrOneOffset<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 87 01  ................
	0x0010 14 0a 73 3b 06 55 06 ba 03 7f 47 02 07 00 01 01  ..s;.U....G.....
	rel 3+8 t=R_ADDR command-line-arguments.ptrOneOffset<1>+0
aux for command-line-arguments.ptrOneOffset<0> SDWARFFCN size=63
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 70 74 72 4f 6e 65 4f 66  guments.ptrOneOf
	0x0020 66 73 65 74 00 00 00 00 00 00 00 00 00 00 00 00  fset............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 8d 01 01 00     ...............
	rel 37+8 t=R_ADDR command-line-arguments.ptrOneOffset<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.ptrOneOffset<1>+51
aux for command-line-arguments.ptrBothOffset<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 8e 01  ................
	0x0010 14 0a 73 3b 06 55 06 ba 03 7f 47 02 07 00 01 01  ..s;.U....G.....
	rel 3+8 t=R_ADDR command-line-arguments.ptrBothOffset<1>+0
aux for command-line-arguments.ptrBothOffset<0> SDWARFFCN size=64
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 70 74 72 42 6f 74 68 4f  guments.ptrBothO
	0x0020 66 66 73 65 74 00 00 00 00 00 00 00 00 00 00 00  ffset...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 94 01 01 00  ................
	rel 38+8 t=R_ADDR command-line-arguments.ptrBothOffset<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.ptrBothOffset<1>+51
aux for command-line-arguments.noMaskOnCopy<0> SDWARFLOC size=217
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 29 00 00 00 00 00 00 00  ........).......
	0x0020 09 00 50 93 08 53 93 08 52 93 08 29 00 00 00 00  ..P..S..R..)....
	0x0030 00 00 00 35 00 00 00 00 00 00 00 08 00 93 08 53  ...5...........S
	0x0040 93 08 52 93 08 35 00 00 00 00 00 00 00 3b 00 00  ..R..5.......;..
	0x0050 00 00 00 00 00 07 00 93 08 53 93 08 93 08 00 00  .........S......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0070 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 3b 00 00 00 00 00 00 00 06 00  ......;.........
	0x0090 55 93 08 54 93 08 00 00 00 00 00 00 00 00 00 00  U..T............
	0x00a0 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 3b 00  ..............;.
	0x00c0 00 00 00 00 00 00 01 00 58 00 00 00 00 00 00 00  ........X.......
	0x00d0 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.noMaskOnCopy<1>+0
	rel 118+8 t=R_ADDR command-line-arguments.noMaskOnCopy<1>+0
	rel 174+8 t=R_ADDR command-line-arguments.noMaskOnCopy<1>+0
aux for command-line-arguments.noMaskOnCopy<0> SDWARFLINES size=36
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 96 01  ................
	0x0010 14 0a 37 06 37 06 75 06 41 06 9b 06 37 06 b9 02  ..7.7.u.A...7...
	0x0020 01 00 01 01                                      ....
	rel 3+8 t=R_ADDR command-line-arguments.noMaskOnCopy<1>+0
aux for command-line-arguments.noMaskOnCopy<0> SDWARFFCN size=118
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6e 6f 4d 61 73 6b 4f 6e  guments.noMaskOn
	0x0020 43 6f 70 79 00 00 00 00 00 00 00 00 00 00 00 00  Copy............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 9c 01 01 12 61  ...............a
	0x0040 00 00 9c 01 00 00 00 00 00 00 00 00 12 73 00 00  .............s..
	0x0050 9c 01 00 00 00 00 00 00 00 00 12 78 00 00 9c 01  ...........x....
	0x0060 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 9c 01  .........~r0....
	0x0070 00 00 00 00 00 00                                ......
	rel 0+0 t=R_USETYPE type:[0]uint8<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.noMaskOnCopy<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.noMaskOnCopy<1>+59
	rel 68+4 t=R_DWARFSECREF go:info.[]int<0>+0
	rel 72+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 86+4 t=R_DWARFSECREF <0>+110
	rel 96+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 100+4 t=R_DWARFSECREF <0>+166
	rel 112+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.x<0> SDWARFVAR size=41
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 78 00 09 03 00 00 00 00  guments.x.......
	0x0020 00 00 00 00 00 00 00 00 01                       .........
	rel 28+8 t=R_ADDR command-line-arguments.x<0>+0
	rel 36+4 t=R_DWARFSECREF go:info.[256]uint8<0>+0
