# command-line-arguments
command-line-arguments.approx<1> STEXT size=371 args=0x8 locals=0x10 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	TEXT	command-line-arguments.approx(SB), ABIInternal, $16-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	JLS	349
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PCDATA	$0, $-1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PUSHQ	BP
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	MOVQ	SP, BP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	SUBQ	$8, SP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	FUNCDATA	$5, command-line-arguments.approx.arginfo1(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	FUNCDATA	$6, command-line-arguments.approx.argliveinfo(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PCDATA	$3, $1
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	MOVSD	X0, command-line-arguments.x+24(SP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	PCDATA	$3, $-1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	MOVBLZX	runtime.x86HasSSE41(SB), AX
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	TESTL	AX, AX
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	JEQ	44
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	ROUNDSD	$2, X0, X1
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	JMP	67
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	PCDATA	$1, $0
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	CALL	math.Ceil(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	MOVBLZX	runtime.x86HasSSE41(SB), AX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	TESTL	AX, AX
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	MOVUPS	X0, X1
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	MOVSD	command-line-arguments.x+24(SP), X0
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:20)	MOVSD	X1, command-line-arguments.sink64(SB)
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	JEQ	85
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	ROUNDSD	$1, X0, X1
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	JMP	106
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	CALL	math.Floor(SB)
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	MOVBLZX	runtime.x86HasSSE41(SB), AX
	0x0061 00097 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	MOVUPS	X0, X1
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVSD	command-line-arguments.x+24(SP), X0
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:28)	MOVSD	X1, command-line-arguments.sink64+8(SB)
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	X0, CX
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	CX, DX
	0x007a 00122 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	SHRQ	$52, DX
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ANDL	$2047, DX
	0x0084 00132 (<unknown line number>)	NOP
	0x0084 00132 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	XCHGL	AX, AX
	0x0085 00133 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	CMPQ	DX, $1023
	0x008c 00140 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	JCC	192
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	$-9223372036854775808, BX
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ANDQ	CX, BX
	0x009b 00155 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	$4607182418800017408, CX
	0x00a5 00165 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ORQ	BX, CX
	0x00a8 00168 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	CMPQ	DX, $1022
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	CMOVQEQ	CX, BX
	0x00b3 00179 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	TESTL	AX, AX
	0x00b5 00181 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	BX, CX
	0x00b8 00184 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	JMP	269
	0x00ba 00186 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	NOP
	0x00c0 00192 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	CMPQ	DX, $1075
	0x00c7 00199 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	JCC	267
	0x00c9 00201 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ADDQ	$-1023, DX
	0x00d0 00208 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	CX, BX
	0x00d3 00211 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	DX, CX
	0x00d6 00214 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	$2251799813685248, SI
	0x00e0 00224 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	SHRQ	CX, SI
	0x00e3 00227 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	$4503599627370495, DI
	0x00ed 00237 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	SHRQ	CX, DI
	0x00f0 00240 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	CMPQ	CX, $64
	0x00f4 00244 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	SBBQ	CX, CX
	0x00f7 00247 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ANDQ	CX, SI
	0x00fa 00250 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	LEAQ	(BX)(SI*1), DX
	0x00fe 00254 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ANDQ	DI, CX
	0x0101 00257 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	NOTQ	CX
	0x0104 00260 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	ANDQ	DX, CX
	0x0107 00263 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	TESTL	AX, AX
	0x0109 00265 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	JMP	269
	0x010b 00267 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	TESTL	AX, AX
	0x010d 00269 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:33)	MOVQ	CX, command-line-arguments.sink64+16(SB)
	0x0114 00276 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	JEQ	288
	0x0116 00278 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	ROUNDSD	$3, X0, X1
	0x011c 00284 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	JMP	311
	0x011e 00286 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	NOP
	0x0120 00288 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	CALL	math.Trunc(SB)
	0x0125 00293 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	MOVBLZX	runtime.x86HasSSE41(SB), AX
	0x012c 00300 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	TESTL	AX, AX
	0x012e 00302 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	MOVUPS	X0, X1
	0x0131 00305 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:48)	MOVSD	command-line-arguments.x+24(SP), X0
	0x0137 00311 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	MOVSD	X1, command-line-arguments.sink64+24(SB)
	0x013f 00319 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:41)	NOP
	0x0140 00320 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:48)	JEQ	330
	0x0142 00322 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:48)	ROUNDSD	$0, X0, X0
	0x0148 00328 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:48)	JMP	335
	0x014a 00330 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:48)	CALL	math.RoundToEven(SB)
	0x014f 00335 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:48)	MOVSD	X0, command-line-arguments.sink64+32(SB)
	0x0157 00343 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:49)	ADDQ	$8, SP
	0x015b 00347 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:49)	POPQ	BP
	0x015c 00348 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:49)	RET
	0x015d 00349 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:49)	NOP
	0x015d 00349 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PCDATA	$1, $-1
	0x015d 00349 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PCDATA	$0, $-2
	0x015d 00349 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	MOVSD	X0, 8(SP)
	0x0163 00355 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	CALL	runtime.morestack_noctxt(SB)
	0x0168 00360 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	PCDATA	$0, $-1
	0x0168 00360 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	MOVSD	8(SP), X0
	0x016e 00366 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:13)	JMP	0
	0x0000 49 3b 66 10 0f 86 53 01 00 00 55 48 89 e5 48 83  I;f...S...UH..H.
	0x0010 ec 08 f2 0f 11 44 24 18 0f b6 05 00 00 00 00 90  .....D$.........
	0x0020 85 c0 74 08 66 0f 3a 0b c8 02 eb 17 e8 00 00 00  ..t.f.:.........
	0x0030 00 0f b6 05 00 00 00 00 85 c0 0f 10 c8 f2 0f 10  ................
	0x0040 44 24 18 f2 0f 11 0d 00 00 00 00 74 08 66 0f 3a  D$.........t.f.:
	0x0050 0b c8 01 eb 15 e8 00 00 00 00 0f b6 05 00 00 00  ................
	0x0060 00 0f 10 c8 f2 0f 10 44 24 18 f2 0f 11 0d 00 00  .......D$.......
	0x0070 00 00 66 48 0f 7e c1 48 89 ca 48 c1 ea 34 81 e2  ..fH.~.H..H..4..
	0x0080 ff 07 00 00 90 48 81 fa ff 03 00 00 73 32 48 bb  .....H......s2H.
	0x0090 00 00 00 00 00 00 00 80 48 21 cb 48 b9 00 00 00  ........H!.H....
	0x00a0 00 00 00 f0 3f 48 09 d9 48 81 fa fe 03 00 00 48  ....?H..H......H
	0x00b0 0f 44 d9 85 c0 48 89 d9 eb 53 66 0f 1f 44 00 00  .D...H...Sf..D..
	0x00c0 48 81 fa 33 04 00 00 73 42 48 81 c2 01 fc ff ff  H..3...sBH......
	0x00d0 48 89 cb 48 89 d1 48 be 00 00 00 00 00 00 08 00  H..H..H.........
	0x00e0 48 d3 ee 48 bf ff ff ff ff ff ff 0f 00 48 d3 ef  H..H.........H..
	0x00f0 48 83 f9 40 48 19 c9 48 21 ce 48 8d 14 33 48 21  H..@H..H!.H..3H!
	0x0100 f9 48 f7 d1 48 21 d1 85 c0 eb 02 85 c0 48 89 0d  .H..H!.......H..
	0x0110 00 00 00 00 74 0a 66 0f 3a 0b c8 03 eb 19 66 90  ....t.f.:.....f.
	0x0120 e8 00 00 00 00 0f b6 05 00 00 00 00 85 c0 0f 10  ................
	0x0130 c8 f2 0f 10 44 24 18 f2 0f 11 0d 00 00 00 00 90  ....D$..........
	0x0140 74 08 66 0f 3a 0b c0 00 eb 05 e8 00 00 00 00 f2  t.f.:...........
	0x0150 0f 11 05 00 00 00 00 48 83 c4 08 5d c3 f2 0f 11  .......H...]....
	0x0160 44 24 08 e8 00 00 00 00 f2 0f 10 44 24 08 e9 8d  D$.........D$...
	0x0170 fe ff ff                                         ...
	rel 27+4 t=R_PCREL runtime.x86HasSSE41<0>+0
	rel 45+4 t=R_CALL math.Ceil<1>+0
	rel 52+4 t=R_PCREL runtime.x86HasSSE41<0>+0
	rel 71+4 t=R_PCREL command-line-arguments.sink64<0>+0
	rel 86+4 t=R_CALL math.Floor<1>+0
	rel 93+4 t=R_PCREL runtime.x86HasSSE41<0>+0
	rel 110+4 t=R_PCREL command-line-arguments.sink64<0>+8
	rel 272+4 t=R_PCREL command-line-arguments.sink64<0>+16
	rel 289+4 t=R_CALL math.Trunc<1>+0
	rel 296+4 t=R_PCREL runtime.x86HasSSE41<0>+0
	rel 315+4 t=R_PCREL command-line-arguments.sink64<0>+24
	rel 331+4 t=R_CALL math.RoundToEven<1>+0
	rel 339+4 t=R_PCREL command-line-arguments.sink64<0>+32
	rel 356+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.sqrt<1> STEXT nosplit size=6 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	TEXT	command-line-arguments.sqrt(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	FUNCDATA	$5, command-line-arguments.sqrt.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	FUNCDATA	$6, command-line-arguments.sqrt.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:51)	XCHGL	AX, AX
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:61)	SQRTSD	X0, X0
	0x0005 00005 (<unknown line number>)	NOP
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:61)	RET
	0x0000 90 f2 0f 51 c0 c3                                ...Q..
command-line-arguments.sqrt32<1> STEXT nosplit size=5 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:64)	TEXT	command-line-arguments.sqrt32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:64)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:64)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:64)	FUNCDATA	$5, command-line-arguments.sqrt32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:64)	FUNCDATA	$6, command-line-arguments.sqrt32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:64)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:74)	SQRTSS	X0, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:74)	RET
	0x0000 f3 0f 51 c0 c3                                   ..Q..
command-line-arguments.abs<1> STEXT nosplit size=54 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	TEXT	command-line-arguments.abs(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	FUNCDATA	$5, command-line-arguments.abs.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	FUNCDATA	$6, command-line-arguments.abs.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:78)	XCHGL	AX, AX
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:88)	MOVQ	X0, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:88)	BTRQ	$63, AX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:93)	MOVQ	X1, CX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:93)	BTRQ	$63, CX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:93)	MOVQ	CX, X0
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:93)	MOVSD	$f64.8000000000000000(SB), X1
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:93)	PXOR	X1, X0
	0x0026 00038 (<unknown line number>)	NOP
	0x0026 00038 (<unknown line number>)	NOP
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:88)	MOVQ	AX, command-line-arguments.sink64(SB)
	0x002d 00045 (<unknown line number>)	NOP
	0x002d 00045 (<unknown line number>)	NOP
	0x002d 00045 (<unknown line number>)	NOP
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:93)	MOVSD	X0, command-line-arguments.sink64+8(SB)
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:94)	RET
	0x0000 90 66 48 0f 7e c0 48 0f ba f0 3f 66 48 0f 7e c9  .fH.~.H...?fH.~.
	0x0010 48 0f ba f1 3f 66 48 0f 6e c1 f2 0f 10 0d 00 00  H...?fH.n.......
	0x0020 00 00 66 0f ef c1 48 89 05 00 00 00 00 f2 0f 11  ..f...H.........
	0x0030 05 00 00 00 00 c3                                ......
	rel 30+4 t=R_PCREL $f64.8000000000000000<0>+0
	rel 41+4 t=R_PCREL command-line-arguments.sink64<0>+0
	rel 49+4 t=R_PCREL command-line-arguments.sink64<0>+8
command-line-arguments.abs32<1> STEXT nosplit size=24 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:97)	TEXT	command-line-arguments.abs32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:97)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:97)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:97)	FUNCDATA	$5, command-line-arguments.abs32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:97)	FUNCDATA	$6, command-line-arguments.abs32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:97)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:99)	CVTSS2SD	X0, X1
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:99)	MOVQ	X1, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:99)	BTRQ	$63, AX
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:99)	MOVQ	AX, X1
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:99)	CVTSD2SS	X1, X0
	0x0017 00023 (<unknown line number>)	NOP
	0x0017 00023 (<unknown line number>)	NOP
	0x0017 00023 (<unknown line number>)	NOP
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:99)	RET
	0x0000 f3 0f 5a c8 66 48 0f 7e c8 48 0f ba f0 3f 66 48  ..Z.fH.~.H...?fH
	0x0010 0f 6e c8 f2 0f 5a c1 c3                          .n...Z..
command-line-arguments.copysign<1> STEXT nosplit size=98 args=0x18 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	TEXT	command-line-arguments.copysign(SB), NOSPLIT|NOFRAME|ABIInternal, $0-24
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	FUNCDATA	$5, command-line-arguments.copysign.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	FUNCDATA	$6, command-line-arguments.copysign.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:103)	XCHGL	AX, AX
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	MOVQ	X0, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:121)	MOVQ	AX, CX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:121)	BTSQ	$63, AX
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	BTRQ	$63, CX
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	MOVQ	X1, DX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	MOVQ	$-9223372036854775808, BX
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	ANDQ	BX, DX
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	ORQ	DX, CX
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:116)	MOVQ	X2, DX
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:116)	MOVQ	DX, SI
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:116)	BTSQ	$63, DX
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:127)	ANDQ	SI, BX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:127)	MOVQ	$4607182418800017408, SI
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:127)	ORQ	BX, SI
	0x0045 00069 (<unknown line number>)	NOP
	0x0045 00069 (<unknown line number>)	NOP
	0x0045 00069 (<unknown line number>)	NOP
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:109)	MOVQ	CX, command-line-arguments.sink64(SB)
	0x004c 00076 (<unknown line number>)	NOP
	0x004c 00076 (<unknown line number>)	NOP
	0x004c 00076 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:116)	MOVQ	DX, command-line-arguments.sink64+8(SB)
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:121)	MOVQ	AX, command-line-arguments.sink64+16(SB)
	0x005a 00090 (<unknown line number>)	NOP
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:127)	MOVQ	SI, command-line-arguments.sink64+24(SB)
	0x0061 00097 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:128)	RET
	0x0000 90 66 48 0f 7e c0 48 89 c1 48 0f ba e8 3f 48 0f  .fH.~.H..H...?H.
	0x0010 ba f1 3f 66 48 0f 7e ca 48 bb 00 00 00 00 00 00  ..?fH.~.H.......
	0x0020 00 80 48 21 da 48 09 d1 66 48 0f 7e d2 48 89 d6  ..H!.H..fH.~.H..
	0x0030 48 0f ba ea 3f 48 21 f3 48 be 00 00 00 00 00 00  H...?H!.H.......
	0x0040 f0 3f 48 09 de 48 89 0d 00 00 00 00 48 89 15 00  .?H..H......H...
	0x0050 00 00 00 48 89 05 00 00 00 00 48 89 35 00 00 00  ...H......H.5...
	0x0060 00 c3                                            ..
	rel 72+4 t=R_PCREL command-line-arguments.sink64<0>+0
	rel 79+4 t=R_PCREL command-line-arguments.sink64<0>+8
	rel 86+4 t=R_PCREL command-line-arguments.sink64<0>+16
	rel 93+4 t=R_PCREL command-line-arguments.sink64<0>+24
command-line-arguments.fma<1> STEXT size=94 args=0x18 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	TEXT	command-line-arguments.fma(SB), ABIInternal, $32-24
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	JLS	51
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	FUNCDATA	$5, command-line-arguments.fma.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	FUNCDATA	$6, command-line-arguments.fma.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	MOVBLZX	runtime.x86HasFMA(SB), AX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	TESTL	AX, AX
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	JEQ	34
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	VFMADD231SD	X1, X0, X2
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	JMP	42
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	PCDATA	$1, $0
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	CALL	math.FMA(SB)
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	MOVUPS	X0, X2
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	MOVUPS	X2, X0
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	ADDQ	$24, SP
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	POPQ	BP
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	RET
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:138)	NOP
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PCDATA	$1, $-1
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PCDATA	$0, $-2
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVSD	X0, 8(SP)
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVSD	X1, 16(SP)
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVSD	X2, 24(SP)
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	CALL	runtime.morestack_noctxt(SB)
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	PCDATA	$0, $-1
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVSD	8(SP), X0
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVSD	16(SP), X1
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	MOVSD	24(SP), X2
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:130)	JMP	0
	0x0000 49 3b 66 10 76 2d 55 48 89 e5 48 83 ec 18 0f b6  I;f.v-UH..H.....
	0x0010 05 00 00 00 00 85 c0 74 09 c4 e2 f9 b9 d1 66 90  .......t......f.
	0x0020 eb 08 e8 00 00 00 00 0f 10 d0 0f 10 c2 48 83 c4  .............H..
	0x0030 18 5d c3 f2 0f 11 44 24 08 f2 0f 11 4c 24 10 f2  .]....D$....L$..
	0x0040 0f 11 54 24 18 e8 00 00 00 00 f2 0f 10 44 24 08  ..T$.........D$.
	0x0050 f2 0f 10 4c 24 10 f2 0f 10 54 24 18 eb a2        ...L$....T$...
	rel 17+4 t=R_PCREL runtime.x86HasFMA<0>+0
	rel 35+4 t=R_CALL math.FMA<1>+0
	rel 70+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.fms<1> STEXT size=104 args=0x18 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	TEXT	command-line-arguments.fms(SB), ABIInternal, $32-24
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	JLS	61
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	FUNCDATA	$5, command-line-arguments.fms.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	FUNCDATA	$6, command-line-arguments.fms.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	MOVSD	$f64.8000000000000000(SB), X3
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	PXOR	X3, X2
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	MOVBLZX	runtime.x86HasFMA(SB), AX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	TESTL	AX, AX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	JEQ	44
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	VFMADD231SD	X1, X0, X2
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	JMP	52
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	PCDATA	$1, $0
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	CALL	math.FMA(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	MOVUPS	X0, X2
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	MOVUPS	X2, X0
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	ADDQ	$24, SP
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	POPQ	BP
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	RET
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:143)	NOP
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PCDATA	$1, $-1
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PCDATA	$0, $-2
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVSD	X0, 8(SP)
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVSD	X1, 16(SP)
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVSD	X2, 24(SP)
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	CALL	runtime.morestack_noctxt(SB)
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	PCDATA	$0, $-1
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVSD	8(SP), X0
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVSD	16(SP), X1
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	MOVSD	24(SP), X2
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:141)	JMP	0
	0x0000 49 3b 66 10 76 37 55 48 89 e5 48 83 ec 18 f2 0f  I;f.v7UH..H.....
	0x0010 10 1d 00 00 00 00 66 0f ef d3 0f b6 05 00 00 00  ......f.........
	0x0020 00 85 c0 74 07 c4 e2 f9 b9 d1 eb 08 e8 00 00 00  ...t............
	0x0030 00 0f 10 d0 0f 10 c2 48 83 c4 18 5d c3 f2 0f 11  .......H...]....
	0x0040 44 24 08 f2 0f 11 4c 24 10 f2 0f 11 54 24 18 e8  D$....L$....T$..
	0x0050 00 00 00 00 f2 0f 10 44 24 08 f2 0f 10 4c 24 10  .......D$....L$.
	0x0060 f2 0f 10 54 24 18 eb 98                          ...T$...
	rel 18+4 t=R_PCREL $f64.8000000000000000<0>+0
	rel 29+4 t=R_PCREL runtime.x86HasFMA<0>+0
	rel 45+4 t=R_CALL math.FMA<1>+0
	rel 80+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.fnms<1> STEXT size=104 args=0x18 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	TEXT	command-line-arguments.fnms(SB), ABIInternal, $32-24
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	JLS	61
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	FUNCDATA	$5, command-line-arguments.fnms.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	FUNCDATA	$6, command-line-arguments.fnms.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	MOVSD	$f64.8000000000000000(SB), X3
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	PXOR	X3, X0
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	MOVBLZX	runtime.x86HasFMA(SB), AX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	TESTL	AX, AX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	JEQ	44
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	VFMADD231SD	X1, X0, X2
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	JMP	52
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	PCDATA	$1, $0
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	CALL	math.FMA(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	MOVUPS	X0, X2
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	MOVUPS	X2, X0
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	ADDQ	$24, SP
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	POPQ	BP
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	RET
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:148)	NOP
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PCDATA	$1, $-1
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PCDATA	$0, $-2
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVSD	X0, 8(SP)
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVSD	X1, 16(SP)
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVSD	X2, 24(SP)
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	CALL	runtime.morestack_noctxt(SB)
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	PCDATA	$0, $-1
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVSD	8(SP), X0
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVSD	16(SP), X1
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	MOVSD	24(SP), X2
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:146)	JMP	0
	0x0000 49 3b 66 10 76 37 55 48 89 e5 48 83 ec 18 f2 0f  I;f.v7UH..H.....
	0x0010 10 1d 00 00 00 00 66 0f ef c3 0f b6 05 00 00 00  ......f.........
	0x0020 00 85 c0 74 07 c4 e2 f9 b9 d1 eb 08 e8 00 00 00  ...t............
	0x0030 00 0f 10 d0 0f 10 c2 48 83 c4 18 5d c3 f2 0f 11  .......H...]....
	0x0040 44 24 08 f2 0f 11 4c 24 10 f2 0f 11 54 24 18 e8  D$....L$....T$..
	0x0050 00 00 00 00 f2 0f 10 44 24 08 f2 0f 10 4c 24 10  .......D$....L$.
	0x0060 f2 0f 10 54 24 18 eb 98                          ...T$...
	rel 18+4 t=R_PCREL $f64.8000000000000000<0>+0
	rel 29+4 t=R_PCREL runtime.x86HasFMA<0>+0
	rel 45+4 t=R_CALL math.FMA<1>+0
	rel 80+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.fnma<1> STEXT size=108 args=0x18 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	TEXT	command-line-arguments.fnma(SB), ABIInternal, $32-24
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	JLS	65
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	FUNCDATA	$5, command-line-arguments.fnma.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	FUNCDATA	$6, command-line-arguments.fnma.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	MOVSD	$f64.8000000000000000(SB), X3
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	PXOR	X3, X1
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	PXOR	X3, X2
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	MOVBLZX	runtime.x86HasFMA(SB), AX
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	TESTL	AX, AX
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	JEQ	48
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	VFMADD231SD	X1, X0, X2
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	JMP	56
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	PCDATA	$1, $0
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	CALL	math.FMA(SB)
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	MOVUPS	X0, X2
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	MOVUPS	X2, X0
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	ADDQ	$24, SP
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	POPQ	BP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	RET
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:153)	NOP
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PCDATA	$1, $-1
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PCDATA	$0, $-2
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVSD	X0, 8(SP)
	0x0047 00071 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVSD	X1, 16(SP)
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVSD	X2, 24(SP)
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	CALL	runtime.morestack_noctxt(SB)
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	PCDATA	$0, $-1
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVSD	8(SP), X0
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVSD	16(SP), X1
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	MOVSD	24(SP), X2
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:151)	JMP	0
	0x0000 49 3b 66 10 76 3b 55 48 89 e5 48 83 ec 18 f2 0f  I;f.v;UH..H.....
	0x0010 10 1d 00 00 00 00 66 0f ef cb 66 0f ef d3 0f b6  ......f...f.....
	0x0020 05 00 00 00 00 85 c0 74 07 c4 e2 f9 b9 d1 eb 08  .......t........
	0x0030 e8 00 00 00 00 0f 10 d0 0f 10 c2 48 83 c4 18 5d  ...........H...]
	0x0040 c3 f2 0f 11 44 24 08 f2 0f 11 4c 24 10 f2 0f 11  ....D$....L$....
	0x0050 54 24 18 e8 00 00 00 00 f2 0f 10 44 24 08 f2 0f  T$.........D$...
	0x0060 10 4c 24 10 f2 0f 10 54 24 18 eb 94              .L$....T$...
	rel 18+4 t=R_PCREL $f64.8000000000000000<0>+0
	rel 33+4 t=R_PCREL runtime.x86HasFMA<0>+0
	rel 49+4 t=R_CALL math.FMA<1>+0
	rel 84+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.fromFloat64<1> STEXT nosplit size=21 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:156)	TEXT	command-line-arguments.fromFloat64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:156)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:156)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:156)	FUNCDATA	$5, command-line-arguments.fromFloat64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:156)	FUNCDATA	$6, command-line-arguments.fromFloat64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:156)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:161)	MOVSD	$f64.3ff0000000000000(SB), X1
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:161)	ADDSD	X1, X0
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:161)	MOVQ	X0, AX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:161)	INCQ	AX
	0x0014 00020 (<unknown line number>)	NOP
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:161)	RET
	0x0000 f2 0f 10 0d 00 00 00 00 f2 0f 58 c1 66 48 0f 7e  ..........X.fH.~
	0x0010 c0 48 ff c0 c3                                   .H...
	rel 4+4 t=R_PCREL $f64.3ff0000000000000<0>+0
command-line-arguments.fromFloat32<1> STEXT nosplit size=19 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:164)	TEXT	command-line-arguments.fromFloat32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:164)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:164)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:164)	FUNCDATA	$5, command-line-arguments.fromFloat32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:164)	FUNCDATA	$6, command-line-arguments.fromFloat32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:164)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:168)	MOVSS	$f32.3f800000(SB), X1
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:168)	ADDSS	X1, X0
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:168)	MOVL	X0, AX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:168)	INCL	AX
	0x0012 00018 (<unknown line number>)	NOP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:168)	RET
	0x0000 f3 0f 10 0d 00 00 00 00 f3 0f 58 c1 66 0f 7e c0  ..........X.f.~.
	0x0010 ff c0 c3                                         ...
	rel 4+4 t=R_PCREL $f32.3f800000<0>+0
command-line-arguments.toFloat64<1> STEXT nosplit size=21 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:171)	TEXT	command-line-arguments.toFloat64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:171)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:171)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:171)	FUNCDATA	$5, command-line-arguments.toFloat64.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:171)	FUNCDATA	$6, command-line-arguments.toFloat64.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:171)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:176)	INCQ	AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:176)	MOVQ	AX, X0
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:176)	MOVSD	$f64.3ff0000000000000(SB), X1
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:176)	ADDSD	X1, X0
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:176)	RET
	0x0000 48 ff c0 66 48 0f 6e c0 f2 0f 10 0d 00 00 00 00  H..fH.n.........
	0x0010 f2 0f 58 c1 c3                                   ..X..
	rel 12+4 t=R_PCREL $f64.3ff0000000000000<0>+0
command-line-arguments.toFloat32<1> STEXT nosplit size=19 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:179)	TEXT	command-line-arguments.toFloat32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:179)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:179)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:179)	FUNCDATA	$5, command-line-arguments.toFloat32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:179)	FUNCDATA	$6, command-line-arguments.toFloat32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:179)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:183)	INCL	AX
	0x0002 00002 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:183)	MOVL	AX, X0
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:183)	MOVSS	$f32.3f800000(SB), X1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:183)	ADDSS	X1, X0
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:183)	RET
	0x0000 ff c0 66 0f 6e c0 f3 0f 10 0d 00 00 00 00 f3 0f  ..f.n...........
	0x0010 58 c1 c3                                         X..
	rel 10+4 t=R_PCREL $f32.3f800000<0>+0
command-line-arguments.constantCheck64<1> STEXT nosplit size=3 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:189)	TEXT	command-line-arguments.constantCheck64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:189)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:189)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:192)	XORL	AX, AX
	0x0002 00002 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:192)	RET
	0x0000 31 c0 c3                                         1..
command-line-arguments.constantCheck32<1> STEXT nosplit size=6 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:195)	TEXT	command-line-arguments.constantCheck32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:195)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:195)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:198)	MOVL	$1, AX
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:198)	RET
	0x0000 b8 01 00 00 00 c3                                ......
command-line-arguments.constantConvert32<1> STEXT nosplit size=27 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:204)	TEXT	command-line-arguments.constantConvert32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:204)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:204)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:204)	FUNCDATA	$5, command-line-arguments.constantConvert32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:204)	FUNCDATA	$6, command-line-arguments.constantConvert32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:204)	PCDATA	$3, $1
	0x0000 00000 (<unknown line number>)	NOP
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:209)	MOVSS	$f32.3f800000(SB), X1
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:209)	UCOMISS	X1, X0
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:209)	JLS	26
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:210)	MOVSS	$f32.80000000(SB), X1
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:210)	PXOR	X1, X0
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:210)	RET
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:212)	RET
	0x0000 f3 0f 10 0d 00 00 00 00 0f 2e c1 76 0d f3 0f 10  ...........v....
	0x0010 0d 00 00 00 00 66 0f ef c1 c3 c3                 .....f.....
	rel 4+4 t=R_PCREL $f32.3f800000<0>+0
	rel 17+4 t=R_PCREL $f32.80000000<0>+0
command-line-arguments.constantConvertInt32<1> STEXT nosplit size=11 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:215)	TEXT	command-line-arguments.constantConvertInt32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:215)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:215)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:215)	FUNCDATA	$5, command-line-arguments.constantConvertInt32.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:215)	FUNCDATA	$6, command-line-arguments.constantConvertInt32.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:215)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:220)	CMPL	AX, $1065353216
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:220)	JLS	10
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:221)	NEGL	AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:221)	RET
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:223)	RET
	0x0000 3d 00 00 80 3f 76 03 f7 d8 c3 c3                 =...?v.....
command-line-arguments.nanGenerate64<1> STEXT nosplit size=44 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:226)	TEXT	command-line-arguments.nanGenerate64(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:226)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:226)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:235)	XORPS	X0, X0
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:235)	DIVSD	X0, X0
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:237)	XORPS	X1, X1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:237)	MOVSD	$f64.7ff0000000000000(SB), X2
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:237)	MULSD	X2, X1
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:240)	ADDSD	X1, X0
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:239)	MOVSD	$f64.bff0000000000000(SB), X1
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:239)	SQRTSD	X1, X1
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:240)	ADDSD	X1, X0
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:239)	XCHGL	AX, AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:240)	RET
	0x0000 0f 57 c0 f2 0f 5e c0 0f 57 c9 f2 0f 10 15 00 00  .W...^..W.......
	0x0010 00 00 f2 0f 59 ca f2 0f 58 c1 f2 0f 10 0d 00 00  ....Y...X.......
	0x0020 00 00 f2 0f 51 c9 f2 0f 58 c1 90 c3              ....Q...X...
	rel 14+4 t=R_PCREL $f64.7ff0000000000000<0>+0
	rel 30+4 t=R_PCREL $f64.bff0000000000000<0>+0
command-line-arguments.nanGenerate32<1> STEXT nosplit size=27 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:243)	TEXT	command-line-arguments.nanGenerate32(SB), NOSPLIT|NOFRAME|ABIInternal, $0-0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:243)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:243)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:249)	XORPS	X0, X0
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:249)	DIVSS	X0, X0
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:251)	XORPS	X1, X1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:251)	MOVSS	$f32.7f800000(SB), X2
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:251)	MULSS	X2, X1
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:252)	ADDSS	X1, X0
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/math.go:252)	RET
	0x0000 0f 57 c0 f3 0f 5e c0 0f 57 c9 f3 0f 10 15 00 00  .W...^..W.......
	0x0010 00 00 f3 0f 59 ca f3 0f 58 c1 c3                 ....Y...X..
	rel 14+4 t=R_PCREL $f32.7f800000<0>+0
type:.eq.[8]float64<1> STEXT dupok nosplit size=63 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[8]float64(SB), DUPOK|NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[8]float64.arginfo1(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[8]float64.argliveinfo(SB)
	0x0000 00000 (<autogenerated>:1)	PCDATA	$3, $1
	0x0000 00000 (<autogenerated>:1)	XORL	CX, CX
	0x0002 00002 (<autogenerated>:1)	JMP	8
	0x0004 00004 (<autogenerated>:1)	ADDQ	$2, CX
	0x0008 00008 (<autogenerated>:1)	CMPQ	CX, $8
	0x000c 00012 (<autogenerated>:1)	JGE	57
	0x000e 00014 (<autogenerated>:1)	MOVSD	(AX)(CX*8), X0
	0x0013 00019 (<autogenerated>:1)	MOVSD	(BX)(CX*8), X1
	0x0018 00024 (<autogenerated>:1)	UCOMISD	X0, X1
	0x001c 00028 (<autogenerated>:1)	JNE	54
	0x001e 00030 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	JPS	54
	0x0022 00034 (<autogenerated>:1)	MOVSD	8(AX)(CX*8), X0
	0x0028 00040 (<autogenerated>:1)	MOVSD	8(BX)(CX*8), X1
	0x002e 00046 (<autogenerated>:1)	UCOMISD	X0, X1
	0x0032 00050 (<autogenerated>:1)	JNE	54
	0x0034 00052 (<autogenerated>:1)	JPC	4
	0x0036 00054 (<autogenerated>:1)	XORL	AX, AX
	0x0038 00056 (<autogenerated>:1)	RET
	0x0039 00057 (<autogenerated>:1)	MOVL	$1, AX
	0x003e 00062 (<autogenerated>:1)	RET
	0x0000 31 c9 eb 04 48 83 c1 02 48 83 f9 08 7d 2b f2 0f  1...H...H...}+..
	0x0010 10 04 c8 f2 0f 10 0c cb 66 0f 2e c8 75 18 66 90  ........f...u.f.
	0x0020 7a 14 f2 0f 10 44 c8 08 f2 0f 10 4c cb 08 66 0f  z....D.....L..f.
	0x0030 2e c8 75 02 7b ce 31 c0 c3 b8 01 00 00 00 c3     ..u.{.1........
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
go:info.math.Round$abstract<0> SDWARFABSFCN dupok size=43
	0x0000 05 6d 61 74 68 2e 52 6f 75 6e 64 00 01 53 01 13  .math.Round..S..
	0x0010 78 00 00 00 00 00 00 0e 62 69 74 73 00 5d 00 00  x.......bits.]..
	0x0020 00 00 0e 65 00 5e 00 00 00 00 00                 ...e.^.....
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 0+0 t=R_USETYPE type:uint<0>+0
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 19+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 30+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 38+4 t=R_DWARFSECREF go:info.uint<0>+0
go:info.math.Float64bits$abstract<0> SDWARFABSFCN dupok size=30
	0x0000 05 6d 61 74 68 2e 46 6c 6f 61 74 36 34 62 69 74  .math.Float64bit
	0x0010 73 00 01 17 01 13 66 00 00 00 00 00 00 00        s.....f.......
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 25+4 t=R_DWARFSECREF go:info.float64<0>+0
go:info.math.Float64frombits$abstract<0> SDWARFABSFCN dupok size=34
	0x0000 05 6d 61 74 68 2e 46 6c 6f 61 74 36 34 66 72 6f  .math.Float64fro
	0x0010 6d 62 69 74 73 00 01 1d 01 13 62 00 00 00 00 00  mbits.....b.....
	0x0020 00 00                                            ..
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 29+4 t=R_DWARFSECREF go:info.uint64<0>+0
go:info.math.Sqrt$abstract<0> SDWARFABSFCN dupok size=23
	0x0000 05 6d 61 74 68 2e 53 71 72 74 00 01 5d 01 13 78  .math.Sqrt..]..x
	0x0010 00 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 18+4 t=R_DWARFSECREF go:info.float64<0>+0
go:info.math.Abs$abstract<0> SDWARFABSFCN dupok size=22
	0x0000 05 6d 61 74 68 2e 41 62 73 00 01 0d 01 13 78 00  .math.Abs.....x.
	0x0010 00 00 00 00 00 00                                ......
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 17+4 t=R_DWARFSECREF go:info.float64<0>+0
go:info.math.Copysign$abstract<0> SDWARFABSFCN dupok size=38
	0x0000 05 6d 61 74 68 2e 43 6f 70 79 73 69 67 6e 00 01  .math.Copysign..
	0x0010 09 01 13 66 00 00 00 00 00 00 13 73 69 67 6e 00  ...f.......sign.
	0x0020 00 00 00 00 00 00                                ......
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 22+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 33+4 t=R_DWARFSECREF go:info.float64<0>+0
go:info.math.Float32bits$abstract<0> SDWARFABSFCN dupok size=30
	0x0000 05 6d 61 74 68 2e 46 6c 6f 61 74 33 32 62 69 74  .math.Float32bit
	0x0010 73 00 01 0c 01 13 66 00 00 00 00 00 00 00        s.....f.......
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 0+0 t=R_USETYPE type:uint32<0>+0
	rel 25+4 t=R_DWARFSECREF go:info.float32<0>+0
go:info.math.Float32frombits$abstract<0> SDWARFABSFCN dupok size=34
	0x0000 05 6d 61 74 68 2e 46 6c 6f 61 74 33 32 66 72 6f  .math.Float32fro
	0x0010 6d 62 69 74 73 00 01 12 01 13 62 00 00 00 00 00  mbits.....b.....
	0x0020 00 00                                            ..
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 0+0 t=R_USETYPE type:uint32<0>+0
	rel 29+4 t=R_DWARFSECREF go:info.uint32<0>+0
command-line-arguments..inittask<0> SNOPTRDATA size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_INITORDER math..inittask<0>+0
command-line-arguments.sink64<0> SNOPTRBSS size=64
<0> SDWARFVAR size=46
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 69 6e 6b 36 34 00 09  guments.sink64..
	0x0020 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 33+8 t=R_ADDR command-line-arguments.sink64<0>+0
	rel 41+4 t=R_DWARFSECREF go:info.[8]float64<0>+0
type:.eqfunc.[8]float64<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[8]float64<1>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*[8]float64-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 38 5d 66 6c 6f 61 74 36 34           ..*[8]float64
type:*[8]float64<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 de 38 15 8e 08 08 08 36 00 00 00 00 00 00 00 00  .8.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]float64-<0>+0
	rel 48+8 t=R_ADDR type:[8]float64<0>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:[8]float64<0> SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 94 ec e4 ae 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[8]float64<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]float64-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]float64<0>+0
	rel 48+8 t=R_ADDR type:float64<0>+0
	rel 56+8 t=R_ADDR type:[]float64<0>+0
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
command-line-arguments.approx.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.approx.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.sqrt.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.sqrt.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.sqrt32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.sqrt32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.abs.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.abs.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.abs32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.abs32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.copysign.arginfo1<0> SRODATA static dupok size=7
	0x0000 00 08 08 08 10 08 ff                             .......
command-line-arguments.copysign.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.fma.arginfo1<0> SRODATA static dupok size=7
	0x0000 00 08 08 08 10 08 ff                             .......
command-line-arguments.fma.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.fms.arginfo1<0> SRODATA static dupok size=7
	0x0000 00 08 08 08 10 08 ff                             .......
command-line-arguments.fms.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.fnms.arginfo1<0> SRODATA static dupok size=7
	0x0000 00 08 08 08 10 08 ff                             .......
command-line-arguments.fnms.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.fnma.arginfo1<0> SRODATA static dupok size=7
	0x0000 00 08 08 08 10 08 ff                             .......
command-line-arguments.fnma.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.fromFloat64.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.fromFloat64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.fromFloat32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.fromFloat32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.toFloat64.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.toFloat64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.toFloat32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.toFloat32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.constantConvert32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.constantConvert32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.constantConvertInt32.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 04 ff                                         ...
command-line-arguments.constantConvertInt32.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·TjPuuCwdlCpTaRQGRKTrYw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
type:.eq.[8]float64.arginfo1<0> SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[8]float64.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
$f32.3f800000<0> SRODATA size=4
	0x0000 00 00 80 3f                                      ...?
$f32.7f800000<0> SRODATA size=4
	0x0000 00 00 80 7f                                      ....
$f32.80000000<0> SRODATA size=4
	0x0000 00 00 00 80                                      ....
$f64.3ff0000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 f0 3f                          .......?
$f64.7ff0000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 f0 7f                          ........
$f64.8000000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 00 80                          ........
$f64.bff0000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 f0 bf                          ........
aux for command-line-arguments.approx<0> SDWARFRANGE size=144
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 64 00 00 00 00 00 00 00 6a 00 00 00 00 00 00 00  d.......j.......
	0x0020 72 00 00 00 00 00 00 00 0d 01 00 00 00 00 00 00  r...............
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0050 64 00 00 00 00 00 00 00 6a 00 00 00 00 00 00 00  d.......j.......
	0x0060 72 00 00 00 00 00 00 00 77 00 00 00 00 00 00 00  r.......w.......
	0x0070 d0 00 00 00 00 00 00 00 d3 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=R_ADDR command-line-arguments.approx<1>+0
	rel 72+8 t=R_ADDR command-line-arguments.approx<1>+0
aux for command-line-arguments.approx<0> SDWARFLOC size=337
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 31 00 00 00 00 00 00 00  ........1.......
	0x0020 01 00 61 31 00 00 00 00 00 00 00 73 01 00 00 00  ..a1.......s....
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 00  ..............1.
	0x0060 00 00 00 00 00 00 01 00 61 31 00 00 00 00 00 00  ........a1......
	0x0070 00 73 01 00 00 00 00 00 00 01 00 9c 00 00 00 00  .s..............
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x0090 ff ff ff ff 00 00 00 00 00 00 00 00 77 00 00 00  ............w...
	0x00a0 00 00 00 00 a5 00 00 00 00 00 00 00 01 00 52 a5  ..............R.
	0x00b0 00 00 00 00 00 00 00 c0 00 00 00 00 00 00 00 01  ................
	0x00c0 00 53 c0 00 00 00 00 00 00 00 d6 00 00 00 00 00  .S..............
	0x00d0 00 00 01 00 52 fe 00 00 00 00 00 00 00 0b 01 00  ....R...........
	0x00e0 00 00 00 00 00 01 00 51 0b 01 00 00 00 00 00 00  .......Q........
	0x00f0 0d 01 00 00 00 00 00 00 01 00 52 0d 01 00 00 00  ..........R.....
	0x0100 00 00 00 25 01 00 00 00 00 00 00 01 00 52 00 00  ...%.........R..
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0120 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 84 00  ................
	0x0130 00 00 00 00 00 00 fe 00 00 00 00 00 00 00 01 00  ................
	0x0140 51 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  Q...............
	0x0150 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.approx<1>+0
	rel 78+8 t=R_ADDR command-line-arguments.approx<1>+0
	rel 148+8 t=R_ADDR command-line-arguments.approx<1>+0
	rel 294+8 t=R_ADDR command-line-arguments.approx<1>+0
aux for command-line-arguments.approx<0> SDWARFLINES size=151
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 07 14  ................
	0x0010 0a 9b 03 02 3c 06 4b 08 03 03 96 03 7c 47 06 03  ....<.K.....|G..
	0x0020 03 64 06 23 04 04 03 7f f1 04 02 50 04 04 06 03  .d.#.......P....
	0x0030 7f 5b 04 08 03 c2 00 46 06 2d 06 72 1b 06 55 06  .[.....F.-.r..U.
	0x0040 25 06 73 06 2f 06 73 06 2c 06 03 08 5a 03 77 65  %.s./.s.,...Z.we
	0x0050 06 62 06 55 06 03 01 28 04 04 06 03 b0 7f 51 04  .b.U...(......Q.
	0x0060 08 06 03 d0 00 32 06 2d 06 92 06 73 06 2c 06 37  .....2.-...s.,.7
	0x0070 06 74 06 2d 04 02 06 03 b8 7f 83 03 03 5a 06 23  .t.-.........Z.#
	0x0080 08 03 02 32 03 7d 47 06 03 02 6e 06 23 06 e2 03  ...2.}G...n.#...
	0x0090 60 47 02 16 00 01 01                             `G.....
	rel 3+8 t=R_ADDR command-line-arguments.approx<1>+0
aux for command-line-arguments.approx<0> SDWARFFCN size=126
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 61 70 70 72 6f 78 00 00  guments.approx..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 02 00 00 00 0d 01 12 78 00 00 0d 00 00 00 00  ........x.......
	0x0040 00 00 00 00 09 00 00 00 00 00 00 00 00 02 00 00  ................
	0x0050 00 21 15 00 00 00 00 00 00 00 00 10 00 00 00 00  .!..............
	0x0060 00 00 00 00 10 00 00 00 00 00 00 00 00 09 00 00  ................
	0x0070 00 00 00 00 00 00 08 00 00 00 5d 00 00 00        ..........]...
	rel 31+8 t=R_ADDR command-line-arguments.approx<1>+0
	rel 39+8 t=R_ADDR command-line-arguments.approx<1>+371
	rel 60+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 64+4 t=R_DWARFSECREF <0>+0
	rel 69+4 t=R_DWARFSECREF go:info.math.Round$abstract<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 83+4 t=R_DWARFSECREF go:info.math.Round$abstract<0>+15
	rel 87+4 t=R_DWARFSECREF <0>+70
	rel 92+4 t=R_DWARFSECREF go:info.math.Round$abstract<0>+23
	rel 96+4 t=R_DWARFSECREF <0>+140
	rel 101+4 t=R_DWARFSECREF go:info.math.Round$abstract<0>+34
	rel 105+4 t=R_DWARFSECREF <0>+286
	rel 110+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 114+4 t=R_DWARFSECREF <0>+64
aux for command-line-arguments.sqrt<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00 00  ................
	0x0050 00 00 00 01 00 61 00 00 00 00 00 00 00 00 00 00  .....a..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.sqrt<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.sqrt<1>+0
aux for command-line-arguments.sqrt<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 2d 14  ..............-.
	0x0010 04 03 03 26 1e 04 02 03 63 33 02 01 00 01 01     ...&....c3.....
	rel 3+8 t=R_ADDR command-line-arguments.sqrt<1>+0
aux for command-line-arguments.sqrt<0> SDWARFFCN size=115
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 71 72 74 00 00 00 00  guments.sqrt....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0030 00 00 00 33 01 12 78 00 00 33 00 00 00 00 00 00  ...3..x..3......
	0x0040 00 00 11 7e 72 30 00 01 33 00 00 00 00 00 08 00  ...~r0..3.......
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 02 00 00 00 3d 15 00 00 00 00 00 00 00  .......=........
	0x0070 00 00 00                                         ...
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 29+8 t=R_ADDR command-line-arguments.sqrt<1>+0
	rel 37+8 t=R_ADDR command-line-arguments.sqrt<1>+6
	rel 58+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 62+4 t=R_DWARFSECREF <0>+0
	rel 73+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 79+4 t=R_DWARFSECREF go:info.math.Sqrt$abstract<0>+0
	rel 83+8 t=R_ADDR command-line-arguments.sqrt<1>+1
	rel 91+8 t=R_ADDR command-line-arguments.sqrt<1>+5
	rel 105+4 t=R_DWARFSECREF go:info.math.Sqrt$abstract<0>+14
	rel 109+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.sqrt32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.sqrt32<1>+0
aux for command-line-arguments.sqrt32<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c4 00  ................
	0x0010 14 06 37 02 01 00 01 01                          ..7.....
	rel 3+8 t=R_ADDR command-line-arguments.sqrt32<1>+0
aux for command-line-arguments.sqrt32<0> SDWARFFCN size=81
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 71 72 74 33 32 00 00  guments.sqrt32..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 02 00 00 00 40 01 12 78 00 00 40 00 00 00 00  .....@..x..@....
	0x0040 00 00 00 00 11 7e 72 30 00 01 40 00 00 00 00 00  .....~r0..@.....
	0x0050 00                                               .
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 31+8 t=R_ADDR command-line-arguments.sqrt32<1>+0
	rel 39+8 t=R_ADDR command-line-arguments.sqrt32<1>+5
	rel 60+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 64+4 t=R_DWARFSECREF <0>+0
	rel 75+4 t=R_DWARFSECREF go:info.float32<0>+0
aux for command-line-arguments.abs<0> SDWARFLOC size=204
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 22 00 00 00 00  ..........."....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1a 00  ................
	0x0080 00 00 00 00 00 00 01 00 61 00 00 00 00 00 00 00  ........a.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 22 00 00 00 00 00 00 00 01 00 62 00 00 00 00  .".........b....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00              ............
	rel 8+8 t=R_ADDR command-line-arguments.abs<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.abs<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.abs<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.abs<1>+0
aux for command-line-arguments.abs<0> SDWARFLINES size=62
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c8 00  ................
	0x0010 14 04 04 03 4d 15 04 07 03 7b 3d 04 04 03 04 46  ....M....{=....F
	0x0020 04 07 03 7b 3d 04 04 03 0a 46 04 02 03 3b 46 06  ...{=....F...;F.
	0x0030 5f 06 03 7f 33 06 5a 06 60 02 01 00 01 01        _...3.Z.`.....
	rel 3+8 t=R_ADDR command-line-arguments.abs<1>+0
aux for command-line-arguments.abs<0> SDWARFFCN size=232
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 61 62 73 00 00 00 00 00  guments.abs.....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0030 00 00 4e 01 12 78 00 00 4e 00 00 00 00 00 00 00  ..N..x..N.......
	0x0040 00 12 79 00 00 4e 00 00 00 00 00 00 00 00 08 00  ..y..N..........
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 02 00 00 00 58 15 00 00 00 00 00 00 00  .......X........
	0x0070 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 07 00 00 00 0e 00 00 08 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 02 00 00 00 5d 15 00 00 00 00 00 00 00 00  ......].........
	0x00b0 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 07 00 00 00 0e 00 08 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 07 00 00 00 0e 00 00 00                          ........
	rel 28+8 t=R_ADDR command-line-arguments.abs<1>+0
	rel 36+8 t=R_ADDR command-line-arguments.abs<1>+54
	rel 57+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 61+4 t=R_DWARFSECREF <0>+0
	rel 70+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+51
	rel 79+4 t=R_DWARFSECREF go:info.math.Abs$abstract<0>+0
	rel 83+8 t=R_ADDR command-line-arguments.abs<1>+1
	rel 91+8 t=R_ADDR command-line-arguments.abs<1>+11
	rel 105+4 t=R_DWARFSECREF go:info.math.Abs$abstract<0>+13
	rel 109+4 t=R_DWARFSECREF <0>+102
	rel 114+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 118+8 t=R_ADDR command-line-arguments.abs<1>+1
	rel 126+8 t=R_ADDR command-line-arguments.abs<1>+6
	rel 142+4 t=R_DWARFSECREF go:info.math.Abs$abstract<0>+0
	rel 146+8 t=R_ADDR command-line-arguments.abs<1>+11
	rel 154+8 t=R_ADDR command-line-arguments.abs<1>+26
	rel 168+4 t=R_DWARFSECREF go:info.math.Abs$abstract<0>+13
	rel 172+4 t=R_DWARFSECREF <0>+153
	rel 177+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 181+8 t=R_ADDR command-line-arguments.abs<1>+11
	rel 189+8 t=R_ADDR command-line-arguments.abs<1>+16
	rel 204+4 t=R_DWARFSECREF go:info.math.Float64frombits$abstract<0>+0
	rel 208+8 t=R_ADDR command-line-arguments.abs<1>+21
	rel 216+8 t=R_ADDR command-line-arguments.abs<1>+26
aux for command-line-arguments.abs32<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 04 00 00 00 00 00 00 00 13 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.abs32<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.abs32<1>+0
aux for command-line-arguments.abs32<0> SDWARFLINES size=46
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 dd 00  ................
	0x0010 14 04 04 03 b8 7f 33 04 07 03 7b 3d 04 04 03 0a  ......3...{=....
	0x0020 46 04 02 03 c1 00 46 06 37 02 01 00 01 01        F.....F.7.....
	rel 3+8 t=R_ADDR command-line-arguments.abs32<1>+0
aux for command-line-arguments.abs32<0> SDWARFFCN size=170
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 61 62 73 33 32 00 00 00  guments.abs32...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 61 01 12 78 00 00 61 00 00 00 00 00  ....a..x..a.....
	0x0040 00 00 00 11 7e 72 30 00 01 61 00 00 00 00 00 08  ....~r0..a......
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 02 00 00 00 63 15 00 00 00 00 00 00  ........c.......
	0x0070 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 07 00 00 00 0e 00 08 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 07 00 00 00 0e 00 00 00                    ..........
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.abs32<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.abs32<1>+24
	rel 59+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
	rel 74+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 80+4 t=R_DWARFSECREF go:info.math.Abs$abstract<0>+0
	rel 84+8 t=R_ADDR command-line-arguments.abs32<1>+4
	rel 92+8 t=R_ADDR command-line-arguments.abs32<1>+19
	rel 106+4 t=R_DWARFSECREF go:info.math.Abs$abstract<0>+13
	rel 110+4 t=R_DWARFSECREF <0>+51
	rel 115+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 119+8 t=R_ADDR command-line-arguments.abs32<1>+4
	rel 127+8 t=R_ADDR command-line-arguments.abs32<1>+9
	rel 142+4 t=R_DWARFSECREF go:info.math.Float64frombits$abstract<0>+0
	rel 146+8 t=R_ADDR command-line-arguments.abs32<1>+14
	rel 154+8 t=R_ADDR command-line-arguments.abs32<1>+19
aux for command-line-arguments.copysign<0> SDWARFRANGE size=64
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 01 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 0e 00 00 00 00 00 00 00 28 00 00 00 00 00 00 00  ........(.......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=R_ADDR command-line-arguments.copysign<1>+0
aux for command-line-arguments.copysign<0> SDWARFLOC size=357
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 62 00 00 00 00 00 00 00  ........b.......
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 62 00 00 00 00  ...........b....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 62 00  ..............b.
	0x0080 00 00 00 00 00 00 01 00 63 00 00 00 00 00 00 00  ........c.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 62 00 00 00 00 00 00 00 01 00 61 00 00 00 00  .b.........a....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x00d0 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 62 00 00 00 00 00 00 00 01 00 62 00  ....b.........b.
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff  ................
	0x0100 ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 62 00 00 00 00 00 00 00 01  .......b........
	0x0120 00 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .c..............
	0x0130 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 62 00 00 00 00 00  ..........b.....
	0x0150 00 00 01 00 63 00 00 00 00 00 00 00 00 00 00 00  ....c...........
	0x0160 00 00 00 00 00                                   .....
	rel 8+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 212+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 263+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 314+8 t=R_ADDR command-line-arguments.copysign<1>+0
aux for command-line-arguments.copysign<0> SDWARFLINES size=83
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e1 00  ................
	0x0010 14 04 04 03 b4 7f 15 04 02 03 dd 00 46 06 2d 04  ............F.-.
	0x0020 06 06 03 96 7f 3d 04 04 03 07 46 04 06 03 78 3d  .....=....F...x=
	0x0030 06 73 04 04 06 03 07 50 04 06 03 78 3d 06 2d 04  .s.....P...x=.-.
	0x0040 02 06 03 dd 00 e6 03 02 5a 5a 03 01 5a 56 02 01  ........ZZ..ZV..
	0x0050 00 01 01                                         ...
	rel 3+8 t=R_ADDR command-line-arguments.copysign<1>+0
aux for command-line-arguments.copysign<0> SDWARFFCN size=283
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 70 79 73 69 67 6e  guments.copysign
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 67 01 12 61 00 00 67 00 00  .......g..a..g..
	0x0040 00 00 00 00 00 00 12 62 00 00 67 00 00 00 00 00  .......b..g.....
	0x0050 00 00 00 12 63 00 00 67 00 00 00 00 00 00 00 00  ....c..g........
	0x0060 09 00 00 00 00 00 00 00 00 02 00 00 00 6d 15 00  .............m..
	0x0070 00 00 00 00 00 00 00 15 00 00 00 00 00 00 00 00  ................
	0x0080 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 06 00 00 00 0b 00 08 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 06 00 00 00 0b 00 00 08 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  ................
	0x00d0 74 15 00 00 00 00 00 00 00 00 08 00 00 00 00 00  t...............
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06  ................
	0x00f0 00 00 00 0b 00 00 08 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 7f  ................
	0x0110 15 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 33+8 t=R_ADDR command-line-arguments.copysign<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.copysign<1>+98
	rel 62+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+0
	rel 75+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 79+4 t=R_DWARFSECREF <0>+51
	rel 88+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 92+4 t=R_DWARFSECREF <0>+102
	rel 97+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+0
	rel 101+4 t=R_DWARFSECREF <0>+0
	rel 111+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+18
	rel 115+4 t=R_DWARFSECREF <0>+153
	rel 120+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+26
	rel 124+4 t=R_DWARFSECREF <0>+204
	rel 129+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 133+8 t=R_ADDR command-line-arguments.copysign<1>+1
	rel 141+8 t=R_ADDR command-line-arguments.copysign<1>+6
	rel 156+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 160+8 t=R_ADDR command-line-arguments.copysign<1>+19
	rel 168+8 t=R_ADDR command-line-arguments.copysign<1>+24
	rel 184+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+0
	rel 188+8 t=R_ADDR command-line-arguments.copysign<1>+40
	rel 196+8 t=R_ADDR command-line-arguments.copysign<1>+53
	rel 210+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+18
	rel 214+4 t=R_DWARFSECREF <0>+255
	rel 219+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 223+8 t=R_ADDR command-line-arguments.copysign<1>+40
	rel 231+8 t=R_ADDR command-line-arguments.copysign<1>+45
	rel 247+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+0
	rel 251+8 t=R_ADDR command-line-arguments.copysign<1>+53
	rel 259+8 t=R_ADDR command-line-arguments.copysign<1>+69
	rel 273+4 t=R_DWARFSECREF go:info.math.Copysign$abstract<0>+26
	rel 277+4 t=R_DWARFSECREF <0>+306
aux for command-line-arguments.fma<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 27 00 00 00 00 00 00 00  ........'.......
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 27 00 00 00 00  ...........'....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00  .............. .
	0x0080 00 00 00 00 00 00 01 00 63 00 00 00 00 00 00 00  ........c.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.fma<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.fma<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.fma<1>+0
aux for command-line-arguments.fma<0> SDWARFLINES size=37
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 fc 00  ................
	0x0010 14 0a 73 03 03 3c 06 55 06 e1 06 2d 06 03 7c 47  ..s..<.U...-..|G
	0x0020 02 2b 00 01 01                                   .+...
	rel 3+8 t=R_ADDR command-line-arguments.fma<1>+0
aux for command-line-arguments.fma<0> SDWARFFCN size=109
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 6d 61 00 00 00 00 00  guments.fma.....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0030 00 00 82 01 01 12 78 00 00 82 01 00 00 00 00 00  ......x.........
	0x0040 00 00 00 12 79 00 00 82 01 00 00 00 00 00 00 00  ....y...........
	0x0050 00 12 7a 00 00 82 01 00 00 00 00 00 00 00 00 11  ..z.............
	0x0060 7e 72 30 00 01 82 01 00 00 00 00 00 00           ~r0..........
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 28+8 t=R_ADDR command-line-arguments.fma<1>+0
	rel 36+8 t=R_ADDR command-line-arguments.fma<1>+94
	rel 59+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
	rel 73+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 77+4 t=R_DWARFSECREF <0>+51
	rel 87+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 91+4 t=R_DWARFSECREF <0>+102
	rel 103+4 t=R_DWARFSECREF go:info.float64<0>+0
aux for command-line-arguments.fms<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 31 00 00 00 00 00 00 00  ........1.......
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 31 00 00 00 00  ...........1....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1a 00  ................
	0x0080 00 00 00 00 00 00 01 00 63 00 00 00 00 00 00 00  ........c.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.fms<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.fms<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.fms<1>+0
aux for command-line-arguments.fms<0> SDWARFLINES size=34
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 87 01  ................
	0x0010 14 0a 73 39 06 5f 06 08 4b 06 2d 06 49 02 2b 00  ..s9._..K.-.I.+.
	0x0020 01 01                                            ..
	rel 3+8 t=R_ADDR command-line-arguments.fms<1>+0
aux for command-line-arguments.fms<0> SDWARFFCN size=109
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 6d 73 00 00 00 00 00  guments.fms.....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0030 00 00 8d 01 01 12 78 00 00 8d 01 00 00 00 00 00  ......x.........
	0x0040 00 00 00 12 79 00 00 8d 01 00 00 00 00 00 00 00  ....y...........
	0x0050 00 12 7a 00 00 8d 01 00 00 00 00 00 00 00 00 11  ..z.............
	0x0060 7e 72 30 00 01 8d 01 00 00 00 00 00 00           ~r0..........
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 28+8 t=R_ADDR command-line-arguments.fms<1>+0
	rel 36+8 t=R_ADDR command-line-arguments.fms<1>+104
	rel 59+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
	rel 73+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 77+4 t=R_DWARFSECREF <0>+51
	rel 87+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 91+4 t=R_DWARFSECREF <0>+102
	rel 103+4 t=R_DWARFSECREF go:info.float64<0>+0
aux for command-line-arguments.fnms<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 31 00 00 00 00  ...........1....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2a 00  ..............*.
	0x0080 00 00 00 00 00 00 01 00 63 00 00 00 00 00 00 00  ........c.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.fnms<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.fnms<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.fnms<1>+0
aux for command-line-arguments.fnms<0> SDWARFLINES size=34
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 8c 01  ................
	0x0010 14 0a 73 39 06 5f 06 08 4b 06 2d 06 49 02 2b 00  ..s9._..K.-.I.+.
	0x0020 01 01                                            ..
	rel 3+8 t=R_ADDR command-line-arguments.fnms<1>+0
aux for command-line-arguments.fnms<0> SDWARFFCN size=110
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 6e 6d 73 00 00 00 00  guments.fnms....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0030 00 00 00 92 01 01 12 78 00 00 92 01 00 00 00 00  .......x........
	0x0040 00 00 00 00 12 79 00 00 92 01 00 00 00 00 00 00  .....y..........
	0x0050 00 00 12 7a 00 00 92 01 00 00 00 00 00 00 00 00  ...z............
	0x0060 11 7e 72 30 00 01 92 01 00 00 00 00 00 00        .~r0..........
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 29+8 t=R_ADDR command-line-arguments.fnms<1>+0
	rel 37+8 t=R_ADDR command-line-arguments.fnms<1>+104
	rel 60+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 64+4 t=R_DWARFSECREF <0>+0
	rel 74+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 78+4 t=R_DWARFSECREF <0>+51
	rel 88+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 92+4 t=R_DWARFSECREF <0>+102
	rel 104+4 t=R_DWARFSECREF go:info.float64<0>+0
aux for command-line-arguments.fnma<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 35 00 00 00 00 00 00 00  ........5.......
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1a 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1e 00  ................
	0x0080 00 00 00 00 00 00 01 00 63 00 00 00 00 00 00 00  ........c.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.fnma<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.fnma<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.fnma<1>+0
aux for command-line-arguments.fnma<0> SDWARFLINES size=34
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 91 01  ................
	0x0010 14 0a 73 39 06 5f 06 08 73 06 2d 06 49 02 2b 00  ..s9._..s.-.I.+.
	0x0020 01 01                                            ..
	rel 3+8 t=R_ADDR command-line-arguments.fnma<1>+0
aux for command-line-arguments.fnma<0> SDWARFFCN size=110
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 6e 6d 61 00 00 00 00  guments.fnma....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0030 00 00 00 97 01 01 12 78 00 00 97 01 00 00 00 00  .......x........
	0x0040 00 00 00 00 12 79 00 00 97 01 00 00 00 00 00 00  .....y..........
	0x0050 00 00 12 7a 00 00 97 01 00 00 00 00 00 00 00 00  ...z............
	0x0060 11 7e 72 30 00 01 97 01 00 00 00 00 00 00        .~r0..........
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 29+8 t=R_ADDR command-line-arguments.fnma<1>+0
	rel 37+8 t=R_ADDR command-line-arguments.fnma<1>+108
	rel 60+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 64+4 t=R_DWARFSECREF <0>+0
	rel 74+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 78+4 t=R_DWARFSECREF <0>+51
	rel 88+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 92+4 t=R_DWARFSECREF <0>+102
	rel 104+4 t=R_DWARFSECREF go:info.float64<0>+0
aux for command-line-arguments.fromFloat64<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.fromFloat64<1>+0
aux for command-line-arguments.fromFloat64<0> SDWARFLINES size=39
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 9b 01  ................
	0x0010 14 06 5f 04 04 06 03 fa 7e 33 04 02 03 85 01 46  .._.....~3.....F
	0x0020 06 2d 02 01 00 01 01                             .-.....
	rel 3+8 t=R_ADDR command-line-arguments.fromFloat64<1>+0
aux for command-line-arguments.fromFloat64<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 72 6f 6d 46 6c 6f 61  guments.fromFloa
	0x0020 74 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  t64.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 9c 01 01 12 66 36  ..............f6
	0x0040 34 00 00 9c 01 00 00 00 00 00 00 00 00 11 7e 72  4.............~r
	0x0050 30 00 01 9c 01 00 00 00 00 00 08 00 00 00 00 00  0...............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02  ................
	0x0070 00 00 00 a1 01 00 00                             .......
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.fromFloat64<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.fromFloat64<1>+21
	rel 69+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 91+4 t=R_DWARFSECREF go:info.math.Float64bits$abstract<0>+0
	rel 95+8 t=R_ADDR command-line-arguments.fromFloat64<1>+12
	rel 103+8 t=R_ADDR command-line-arguments.fromFloat64<1>+17
aux for command-line-arguments.fromFloat32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.fromFloat32<1>+0
aux for command-line-arguments.fromFloat32<0> SDWARFLINES size=39
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 a2 01  ................
	0x0010 14 06 5f 04 04 06 03 e8 7e 33 04 02 03 97 01 3c  .._.....~3.....<
	0x0020 06 23 02 01 00 01 01                             .#.....
	rel 3+8 t=R_ADDR command-line-arguments.fromFloat32<1>+0
aux for command-line-arguments.fromFloat32<0> SDWARFFCN size=119
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 72 6f 6d 46 6c 6f 61  guments.fromFloa
	0x0020 74 33 32 00 00 00 00 00 00 00 00 00 00 00 00 00  t32.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 a4 01 01 12 66 33  ..............f3
	0x0040 32 00 00 a4 01 00 00 00 00 00 00 00 00 11 7e 72  2.............~r
	0x0050 30 00 01 a4 01 00 00 00 00 00 08 00 00 00 00 00  0...............
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02  ................
	0x0070 00 00 00 a8 01 00 00                             .......
	rel 0+0 t=R_USETYPE type:uint32<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.fromFloat32<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.fromFloat32<1>+19
	rel 69+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 91+4 t=R_DWARFSECREF go:info.math.Float32bits$abstract<0>+0
	rel 95+8 t=R_ADDR command-line-arguments.fromFloat32<1>+12
	rel 103+8 t=R_ADDR command-line-arguments.fromFloat32<1>+16
aux for command-line-arguments.toFloat64<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.toFloat64<1>+0
aux for command-line-arguments.toFloat64<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 aa 01  ................
	0x0010 14 06 2d 02 12 00 01 01                          ..-.....
	rel 3+8 t=R_ADDR command-line-arguments.toFloat64<1>+0
aux for command-line-arguments.toFloat64<0> SDWARFFCN size=89
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 74 6f 46 6c 6f 61 74 36  guments.toFloat6
	0x0020 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  4...............
	0x0030 00 00 01 9c 02 00 00 00 ab 01 01 12 75 36 34 00  ............u64.
	0x0040 00 ab 01 00 00 00 00 00 00 00 00 11 7e 72 30 00  ............~r0.
	0x0050 01 ab 01 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.toFloat64<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.toFloat64<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 83+4 t=R_DWARFSECREF go:info.float64<0>+0
aux for command-line-arguments.toFloat32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.toFloat32<1>+0
aux for command-line-arguments.toFloat32<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 b1 01  ................
	0x0010 14 06 23 02 11 00 01 01                          ..#.....
	rel 3+8 t=R_ADDR command-line-arguments.toFloat32<1>+0
aux for command-line-arguments.toFloat32<0> SDWARFFCN size=89
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 74 6f 46 6c 6f 61 74 33  guments.toFloat3
	0x0020 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  2...............
	0x0030 00 00 01 9c 02 00 00 00 b3 01 01 12 75 33 32 00  ............u32.
	0x0040 00 b3 01 00 00 00 00 00 00 00 00 11 7e 72 30 00  ............~r0.
	0x0050 01 b3 01 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.toFloat32<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.toFloat32<1>+19
	rel 67+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 83+4 t=R_DWARFSECREF go:info.float32<0>+0
aux for command-line-arguments.constantCheck64<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ba 01  ................
	0x0010 14 06 23 02 01 00 01 01                          ..#.....
	rel 3+8 t=R_ADDR command-line-arguments.constantCheck64<1>+0
aux for command-line-arguments.constantCheck64<0> SDWARFFCN size=79
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 73 74 61 6e 74  guments.constant
	0x0020 43 68 65 63 6b 36 34 00 00 00 00 00 00 00 00 00  Check64.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 bd 01  ................
	0x0040 01 11 7e 72 30 00 01 bd 01 00 00 00 00 00 00     ..~r0..........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.constantCheck64<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.constantCheck64<1>+3
	rel 73+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.constantCheck32<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c0 01  ................
	0x0010 14 06 41 02 01 00 01 01                          ..A.....
	rel 3+8 t=R_ADDR command-line-arguments.constantCheck32<1>+0
aux for command-line-arguments.constantCheck32<0> SDWARFFCN size=79
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 73 74 61 6e 74  guments.constant
	0x0020 43 68 65 63 6b 33 32 00 00 00 00 00 00 00 00 00  Check32.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 c3 01  ................
	0x0040 01 11 7e 72 30 00 01 c3 01 00 00 00 00 00 00     ..~r0..........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.constantCheck32<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.constantCheck32<1>+6
	rel 73+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.constantConvert32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.constantConvert32<1>+0
aux for command-line-arguments.constantConvert32<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 cb 01  ................
	0x0010 14 06 5f 06 42 06 5f 06 43 02 01 00 01 01        .._.B._.C.....
	rel 3+8 t=R_ADDR command-line-arguments.constantConvert32<1>+0
aux for command-line-arguments.constantConvert32<0> SDWARFFCN size=95
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 73 74 61 6e 74  guments.constant
	0x0020 43 6f 6e 76 65 72 74 33 32 00 00 00 00 00 00 00  Convert32.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 cc 01 01 12 78 00 00 cc 01 00 00 00 00 00 00 00  ....x...........
	0x0050 00 11 7e 72 30 00 01 cc 01 00 00 00 00 00 00     ..~r0..........
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 42+8 t=R_ADDR command-line-arguments.constantConvert32<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.constantConvert32<1>+27
	rel 73+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 77+4 t=R_DWARFSECREF <0>+0
	rel 89+4 t=R_DWARFSECREF go:info.float32<0>+0
aux for command-line-arguments.constantConvertInt32<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.constantConvertInt32<1>+0
aux for command-line-arguments.constantConvertInt32<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d6 01  ................
	0x0010 14 06 41 06 24 06 23 06 1b 02 01 00 01 01        ..A.$.#.......
	rel 3+8 t=R_ADDR command-line-arguments.constantConvertInt32<1>+0
aux for command-line-arguments.constantConvertInt32<0> SDWARFFCN size=98
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6e 73 74 61 6e 74  guments.constant
	0x0020 43 6f 6e 76 65 72 74 49 6e 74 33 32 00 00 00 00  ConvertInt32....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 d7 01 01 12 78 00 00 d7 01 00 00 00 00  .......x........
	0x0050 00 00 00 00 11 7e 72 30 00 01 d7 01 00 00 00 00  .....~r0........
	0x0060 00 00                                            ..
	rel 0+0 t=R_USETYPE type:uint32<0>+0
	rel 45+8 t=R_ADDR command-line-arguments.constantConvertInt32<1>+0
	rel 53+8 t=R_ADDR command-line-arguments.constantConvertInt32<1>+11
	rel 76+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 80+4 t=R_DWARFSECREF <0>+0
	rel 92+4 t=R_DWARFSECREF go:info.uint32<0>+0
aux for command-line-arguments.nanGenerate64<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 07 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 16 00 00 00 00 00 00 00 22 00 00 00 00  ..........."....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 26 00 00 00 00 00 00 00 2c 00  ......&.......,.
	0x0080 00 00 00 00 00 00 01 00 62 00 00 00 00 00 00 00  ........b.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+0
aux for command-line-arguments.nanGenerate64<0> SDWARFLINES size=48
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e5 01  ................
	0x0010 14 06 2d 06 39 06 2d 06 8a 04 03 03 f2 7e 33 06  ..-.9.-......~3.
	0x0020 5f 04 02 06 03 8d 01 3c 36 06 1a 02 01 00 01 01  _......<6.......
	rel 3+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+0
aux for command-line-arguments.nanGenerate64<0> SDWARFFCN size=193
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6e 61 6e 47 65 6e 65 72  guments.nanGener
	0x0020 61 74 65 36 34 00 00 00 00 00 00 00 00 00 00 00  ate64...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 e2 01 01 11  ................
	0x0040 7e 72 30 00 01 e2 01 00 00 00 00 00 0c 7a 65 72  ~r0..........zer
	0x0050 6f 00 e5 01 00 00 00 00 00 0c 69 6e 66 00 e7 01  o.........inf...
	0x0060 00 00 00 00 00 0c 6e 65 67 6f 6e 65 00 e8 01 00  ......negone....
	0x0070 00 00 00 00 0d 7a 30 00 eb 01 00 00 00 00 00 00  .....z0.........
	0x0080 00 00 0d 7a 31 00 ed 01 00 00 00 00 00 00 00 00  ...z1...........
	0x0090 0d 7a 32 00 ef 01 00 00 00 00 00 00 00 00 08 00  .z2.............
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 02 00 00 00 ef 01 14 00 00 00 00 00 00  ................
	0x00c0 00                                               .
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+44
	rel 71+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 84+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 96+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 111+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 122+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 126+4 t=R_DWARFSECREF <0>+0
	rel 136+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 140+4 t=R_DWARFSECREF <0>+51
	rel 150+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 154+4 t=R_DWARFSECREF <0>+102
	rel 159+4 t=R_DWARFSECREF go:info.math.Sqrt$abstract<0>+0
	rel 163+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+26
	rel 171+8 t=R_ADDR command-line-arguments.nanGenerate64<1>+38
	rel 186+4 t=R_DWARFSECREF go:info.math.Sqrt$abstract<0>+14
aux for command-line-arguments.nanGenerate32<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 07 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 16 00 00 00 00 00 00 00 1b 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.nanGenerate32<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.nanGenerate32<1>+0
aux for command-line-arguments.nanGenerate32<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 f3 01  ................
	0x0010 14 06 2d 06 39 06 2d 06 88 06 37 02 01 00 01 01  ..-.9.-...7.....
	rel 3+8 t=R_ADDR command-line-arguments.nanGenerate32<1>+0
aux for command-line-arguments.nanGenerate32<0> SDWARFFCN size=130
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6e 61 6e 47 65 6e 65 72  guments.nanGener
	0x0020 61 74 65 33 32 00 00 00 00 00 00 00 00 00 00 00  ate32...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 f3 01 01 11  ................
	0x0040 7e 72 30 00 01 f3 01 00 00 00 00 00 0c 7a 65 72  ~r0..........zer
	0x0050 6f 00 f4 01 00 00 00 00 00 0c 69 6e 66 00 f6 01  o.........inf...
	0x0060 00 00 00 00 00 0d 7a 30 00 f9 01 00 00 00 00 00  ......z0........
	0x0070 00 00 00 0d 7a 31 00 fb 01 00 00 00 00 00 00 00  ....z1..........
	0x0080 00 00                                            ..
	rel 0+0 t=R_USETYPE type:float32<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.nanGenerate32<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.nanGenerate32<1>+27
	rel 71+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 84+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 96+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 107+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 111+4 t=R_DWARFSECREF <0>+0
	rel 121+4 t=R_DWARFSECREF go:info.float32<0>+0
	rel 125+4 t=R_DWARFSECREF <0>+51
aux for type:.eq.[8]float64<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  ........8.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 3f 00 00 00 00  ...........?....
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR type:.eq.[8]float64<1>+0
	rel 59+8 t=R_ADDR type:.eq.[8]float64<1>+0
aux for type:.eq.[8]float64<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 06 23 06 4b 06  ............#.K.
	0x0010 37 06 08 c3 06 23 06 19 06 41 02 01 00 01 01     7....#...A.....
	rel 3+8 t=R_ADDR type:.eq.[8]float64<1>+0
aux for type:.eq.[8]float64<0> SDWARFFCN size=82
	0x0000 03 74 79 70 65 3a 2e 65 71 2e 5b 38 5d 66 6c 6f  .type:.eq.[8]flo
	0x0010 61 74 36 34 00 00 00 00 00 00 00 00 00 00 00 00  at64............
	0x0020 00 00 00 00 00 01 9c 01 00 00 00 01 01 12 70 00  ..............p.
	0x0030 00 01 00 00 00 00 00 00 00 00 12 71 00 00 01 00  ...........q....
	0x0040 00 00 00 00 00 00 00 11 72 00 01 01 00 00 00 00  ........r.......
	0x0050 00 00                                            ..
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 21+8 t=R_ADDR type:.eq.[8]float64<1>+0
	rel 29+8 t=R_ADDR type:.eq.[8]float64<1>+63
	rel 50+4 t=R_DWARFSECREF go:info.*[8]float64<0>+0
	rel 54+4 t=R_DWARFSECREF <0>+0
	rel 63+4 t=R_DWARFSECREF go:info.*[8]float64<0>+0
	rel 67+4 t=R_DWARFSECREF <0>+51
	rel 76+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for command-line-arguments.sink64<0> SDWARFVAR size=46
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 69 6e 6b 36 34 00 09  guments.sink64..
	0x0020 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 33+8 t=R_ADDR command-line-arguments.sink64<0>+0
	rel 41+4 t=R_DWARFSECREF go:info.[8]float64<0>+0
