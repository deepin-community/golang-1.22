# command-line-arguments
command-line-arguments.cmovint<1> STEXT nosplit size=17 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:9)	TEXT	command-line-arguments.cmovint(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:9)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:9)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:9)	FUNCDATA	$5, command-line-arguments.cmovint.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:9)	FUNCDATA	$6, command-line-arguments.cmovint.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:9)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:10)	ADDQ	$4, AX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:11)	TESTQ	AX, AX
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:18)	MOVL	$182, CX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:18)	CMOVQLT	CX, AX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:11)	RET
	0x0000 48 83 c0 04 48 85 c0 b9 b6 00 00 00 48 0f 4c c1  H...H.......H.L.
	0x0010 c3                                               .
command-line-arguments.cmovchan<1> STEXT nosplit size=8 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:21)	TEXT	command-line-arguments.cmovchan(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:21)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:21)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:21)	FUNCDATA	$5, command-line-arguments.cmovchan.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:21)	FUNCDATA	$6, command-line-arguments.cmovchan.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:21)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:22)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:29)	CMOVQNE	BX, AX
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:22)	RET
	0x0000 48 39 c3 48 0f 45 c3 c3                          H9.H.E..
command-line-arguments.cmovuintptr<1> STEXT nosplit size=14 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:32)	TEXT	command-line-arguments.cmovuintptr(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:32)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:32)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:32)	FUNCDATA	$5, command-line-arguments.cmovuintptr.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:32)	FUNCDATA	$6, command-line-arguments.cmovuintptr.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:32)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:34)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:34)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:33)	CMPQ	CX, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:40)	CMOVQHI	BX, AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:33)	RET
	0x0000 48 89 d9 48 f7 db 48 39 c1 48 0f 47 c3 c3        H..H..H9.H.G..
command-line-arguments.cmov32bit<1> STEXT nosplit size=10 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:43)	TEXT	command-line-arguments.cmov32bit(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:43)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:43)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:43)	FUNCDATA	$5, command-line-arguments.cmov32bit.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:43)	FUNCDATA	$6, command-line-arguments.cmov32bit.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:43)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:45)	MOVL	BX, CX
	0x0002 00002 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:45)	NEGL	BX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:44)	CMPL	CX, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:51)	CMOVLHI	BX, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:44)	RET
	0x0000 89 d9 f7 db 39 c1 0f 47 c3 c3                    ....9..G..
command-line-arguments.cmov16bit<1> STEXT nosplit size=12 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:54)	TEXT	command-line-arguments.cmov16bit(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:54)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:54)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:54)	FUNCDATA	$5, command-line-arguments.cmov16bit.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:54)	FUNCDATA	$6, command-line-arguments.cmov16bit.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:54)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:56)	MOVL	BX, CX
	0x0002 00002 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:56)	NEGL	BX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:55)	CMPW	CX, AX
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:62)	CMOVWHI	BX, AX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:55)	RET
	0x0000 89 d9 f7 db 66 39 c1 66 0f 47 c3 c3              ....f9.f.G..
command-line-arguments.cmovfloateq<1> STEXT nosplit size=26 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:67)	TEXT	command-line-arguments.cmovfloateq(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:67)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:67)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:67)	FUNCDATA	$5, command-line-arguments.cmovfloateq.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:67)	FUNCDATA	$6, command-line-arguments.cmovfloateq.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:67)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:69)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:76)	MOVL	$128, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:76)	MOVL	$256, CX
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:76)	MOVQ	CX, DX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:76)	CMOVQNE	AX, DX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:76)	CMOVQPC	DX, AX
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:69)	RET
	0x0000 66 0f 2e c1 b8 80 00 00 00 b9 00 01 00 00 48 89  f.............H.
	0x0010 ca 48 0f 45 d0 48 0f 4b c2 c3                    .H.E.H.K..
command-line-arguments.cmovfloatne<1> STEXT nosplit size=23 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:79)	TEXT	command-line-arguments.cmovfloatne(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:79)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:79)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:79)	FUNCDATA	$5, command-line-arguments.cmovfloatne.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:79)	FUNCDATA	$6, command-line-arguments.cmovfloatne.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:79)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:81)	UCOMISD	X1, X0
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:88)	MOVL	$128, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:88)	MOVL	$256, CX
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:88)	CMOVQNE	CX, AX
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:88)	CMOVQPS	CX, AX
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:81)	RET
	0x0000 66 0f 2e c1 b8 80 00 00 00 b9 00 01 00 00 48 0f  f.............H.
	0x0010 45 c1 48 0f 4a c1 c3                             E.H.J..
command-line-arguments.frexp<1> STEXT nosplit size=14 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:92)	TEXT	command-line-arguments.frexp(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:92)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:92)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:92)	FUNCDATA	$5, command-line-arguments.frexp.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:92)	FUNCDATA	$6, command-line-arguments.frexp.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:92)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:93)	MOVSD	$f64.3ff0000000000000(SB), X0
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:93)	MOVL	$4, AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:93)	RET
	0x0000 f2 0f 10 05 00 00 00 00 b8 04 00 00 00 c3        ..............
	rel 4+4 t=R_PCREL $f64.3ff0000000000000<0>+0
command-line-arguments.ldexp<1> STEXT nosplit size=9 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:97)	TEXT	command-line-arguments.ldexp(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:97)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:97)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:97)	FUNCDATA	$5, command-line-arguments.ldexp.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:97)	FUNCDATA	$6, command-line-arguments.ldexp.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:97)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:98)	MOVSD	$f64.3ff0000000000000(SB), X0
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:98)	RET
	0x0000 f2 0f 10 05 00 00 00 00 c3                       .........
	rel 4+4 t=R_PCREL $f64.3ff0000000000000<0>+0
command-line-arguments.cmovfloatint2<1> STEXT size=138 args=0x10 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	TEXT	command-line-arguments.cmovfloatint2(SB), ABIInternal, $32-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	JLS	104
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	FUNCDATA	$5, command-line-arguments.cmovfloatint2.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	FUNCDATA	$6, command-line-arguments.cmovfloatint2.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	MOVSD	X1, command-line-arguments.y+48(SP)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	PCDATA	$3, $2
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	JMP	91
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	MOVSD	X0, command-line-arguments.r+16(SP)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:107)	PCDATA	$1, $0
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:107)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:107)	CALL	command-line-arguments.frexp(SB)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:109)	LEAQ	-1(AX), CX
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:108)	MOVSD	$f64.4010000000000000(SB), X1
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:108)	UCOMISD	X0, X1
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:115)	CMOVQHI	CX, AX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:115)	ADDQ	$-5, AX
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:115)	MOVSD	command-line-arguments.y+48(SP), X0
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:115)	CALL	command-line-arguments.ldexp(SB)
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:115)	MOVSD	command-line-arguments.r+16(SP), X1
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:115)	SUBSD	X0, X1
	0x0052 00082 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	MOVUPS	X1, X0
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	MOVSD	command-line-arguments.y+48(SP), X1
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	UCOMISD	X1, X0
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:106)	JCC	22
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:117)	ADDQ	$24, SP
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:117)	POPQ	BP
	0x0067 00103 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:117)	RET
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:117)	NOP
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PCDATA	$1, $-1
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PCDATA	$0, $-2
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	MOVSD	X0, 8(SP)
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	MOVSD	X1, 16(SP)
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	CALL	runtime.morestack_noctxt(SB)
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	PCDATA	$0, $-1
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	MOVSD	8(SP), X0
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	MOVSD	16(SP), X1
	0x0085 00133 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:102)	JMP	0
	0x0000 49 3b 66 10 76 62 55 48 89 e5 48 83 ec 18 f2 0f  I;f.vbUH..H.....
	0x0010 11 4c 24 30 eb 45 f2 0f 11 44 24 10 0f 1f 40 00  .L$0.E...D$...@.
	0x0020 e8 00 00 00 00 48 8d 48 ff f2 0f 10 0d 00 00 00  .....H.H........
	0x0030 00 66 0f 2e c8 48 0f 47 c1 48 83 c0 fb f2 0f 10  .f...H.G.H......
	0x0040 44 24 30 e8 00 00 00 00 f2 0f 10 4c 24 10 f2 0f  D$0........L$...
	0x0050 5c c8 0f 10 c1 f2 0f 10 4c 24 30 66 0f 2e c1 90  \.......L$0f....
	0x0060 73 b4 48 83 c4 18 5d c3 f2 0f 11 44 24 08 f2 0f  s.H...]....D$...
	0x0070 11 4c 24 10 e8 00 00 00 00 f2 0f 10 44 24 08 f2  .L$.........D$..
	0x0080 0f 10 4c 24 10 e9 76 ff ff ff                    ..L$..v...
	rel 33+4 t=R_CALL command-line-arguments.frexp<1>+0
	rel 45+4 t=R_PCREL $f64.4010000000000000<0>+0
	rel 68+4 t=R_CALL command-line-arguments.ldexp<1>+0
	rel 117+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.cmovloaded<1> STEXT nosplit size=17 args=0x28 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:120)	TEXT	command-line-arguments.cmovloaded(SB), NOSPLIT|NOFRAME|ABIInternal, $0-40
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:120)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:120)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:120)	FUNCDATA	$5, command-line-arguments.cmovloaded.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:120)	FUNCDATA	$6, command-line-arguments.cmovloaded.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:120)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:121)	MOVQ	command-line-arguments.x+24(SP), CX
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:124)	SARQ	$2, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:121)	TESTQ	CX, CX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:130)	CMOVQNE	CX, AX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:121)	RET
	0x0000 48 8b 4c 24 18 48 c1 f8 02 48 85 c9 48 0f 45 c1  H.L$.H...H..H.E.
	0x0010 c3                                               .
command-line-arguments.cmovuintptr2<1> STEXT nosplit size=16 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:133)	TEXT	command-line-arguments.cmovuintptr2(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:133)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:133)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:133)	FUNCDATA	$5, command-line-arguments.cmovuintptr2.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:133)	FUNCDATA	$6, command-line-arguments.cmovuintptr2.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:133)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:134)	SHLQ	$1, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:135)	TESTQ	AX, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:142)	MOVL	$256, CX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:142)	CMOVQEQ	CX, AX
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:135)	RET
	0x0000 48 d1 e0 48 85 c0 b9 00 01 00 00 48 0f 44 c1 c3  H..H.......H.D..
command-line-arguments.cmovfloatmove<1> STEXT nosplit size=24 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:146)	TEXT	command-line-arguments.cmovfloatmove(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:146)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:146)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:146)	FUNCDATA	$5, command-line-arguments.cmovfloatmove.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:146)	FUNCDATA	$6, command-line-arguments.cmovfloatmove.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:146)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:148)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:148)	JLT	15
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:148)	MOVSD	$f64.4000000000000000(SB), X0
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:148)	JMP	23
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:148)	MOVSD	$f64.3ff0000000000000(SB), X0
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:155)	RET
	0x0000 48 39 c3 7c 0a f2 0f 10 05 00 00 00 00 eb 08 f2  H9.|............
	0x0010 0f 10 05 00 00 00 00 c3                          ........
	rel 9+4 t=R_PCREL $f64.4000000000000000<0>+0
	rel 19+4 t=R_PCREL $f64.3ff0000000000000<0>+0
command-line-arguments.cmovinvert1<1> STEXT nosplit size=21 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:163)	TEXT	command-line-arguments.cmovinvert1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:163)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:163)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:163)	FUNCDATA	$5, command-line-arguments.cmovinvert1.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:163)	FUNCDATA	$6, command-line-arguments.cmovinvert1.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:163)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:165)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:165)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:164)	CMPQ	command-line-arguments.gsink(SB), AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:168)	CMOVQGT	BX, CX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:168)	MOVQ	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:164)	RET
	0x0000 48 89 d9 48 f7 db 48 39 05 00 00 00 00 48 0f 4f  H..H..H9.....H.O
	0x0010 cb 48 89 c8 c3                                   .H...
	rel 9+4 t=R_PCREL command-line-arguments.gsink<0>+0
command-line-arguments.cmovinvert2<1> STEXT nosplit size=21 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:170)	TEXT	command-line-arguments.cmovinvert2(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:170)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:170)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:170)	FUNCDATA	$5, command-line-arguments.cmovinvert2.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:170)	FUNCDATA	$6, command-line-arguments.cmovinvert2.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:170)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:172)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:172)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:171)	CMPQ	command-line-arguments.gsink(SB), AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:175)	CMOVQGE	BX, CX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:175)	MOVQ	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:171)	RET
	0x0000 48 89 d9 48 f7 db 48 39 05 00 00 00 00 48 0f 4d  H..H..H9.....H.M
	0x0010 cb 48 89 c8 c3                                   .H...
	rel 9+4 t=R_PCREL command-line-arguments.gsink<0>+0
command-line-arguments.cmovinvert3<1> STEXT nosplit size=21 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:177)	TEXT	command-line-arguments.cmovinvert3(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:177)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:177)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:177)	FUNCDATA	$5, command-line-arguments.cmovinvert3.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:177)	FUNCDATA	$6, command-line-arguments.cmovinvert3.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:177)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:179)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:179)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:178)	CMPQ	command-line-arguments.gsink(SB), AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:182)	CMOVQEQ	BX, CX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:182)	MOVQ	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:178)	RET
	0x0000 48 89 d9 48 f7 db 48 39 05 00 00 00 00 48 0f 44  H..H..H9.....H.D
	0x0010 cb 48 89 c8 c3                                   .H...
	rel 9+4 t=R_PCREL command-line-arguments.gsink<0>+0
command-line-arguments.cmovinvert4<1> STEXT nosplit size=21 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:184)	TEXT	command-line-arguments.cmovinvert4(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:184)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:184)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:184)	FUNCDATA	$5, command-line-arguments.cmovinvert4.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:184)	FUNCDATA	$6, command-line-arguments.cmovinvert4.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:184)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:186)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:186)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:185)	CMPQ	command-line-arguments.gsink(SB), AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:189)	CMOVQNE	BX, CX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:189)	MOVQ	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:185)	RET
	0x0000 48 89 d9 48 f7 db 48 39 05 00 00 00 00 48 0f 45  H..H..H9.....H.E
	0x0010 cb 48 89 c8 c3                                   .H...
	rel 9+4 t=R_PCREL command-line-arguments.gsink<0>+0
command-line-arguments.cmovinvert5<1> STEXT nosplit size=21 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:191)	TEXT	command-line-arguments.cmovinvert5(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:191)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:191)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:191)	FUNCDATA	$5, command-line-arguments.cmovinvert5.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:191)	FUNCDATA	$6, command-line-arguments.cmovinvert5.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:191)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:193)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:193)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:192)	CMPQ	command-line-arguments.gusink(SB), AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:196)	CMOVQCS	BX, CX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:196)	MOVQ	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:192)	RET
	0x0000 48 89 d9 48 f7 db 48 39 05 00 00 00 00 48 0f 42  H..H..H9.....H.B
	0x0010 cb 48 89 c8 c3                                   .H...
	rel 9+4 t=R_PCREL command-line-arguments.gusink<0>+0
command-line-arguments.cmovinvert6<1> STEXT nosplit size=21 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:198)	TEXT	command-line-arguments.cmovinvert6(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:198)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:198)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:198)	FUNCDATA	$5, command-line-arguments.cmovinvert6.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:198)	FUNCDATA	$6, command-line-arguments.cmovinvert6.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:198)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:200)	MOVQ	BX, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:200)	NEGQ	BX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:199)	CMPQ	command-line-arguments.gusink(SB), AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:203)	CMOVQLS	BX, CX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:203)	MOVQ	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:199)	RET
	0x0000 48 89 d9 48 f7 db 48 39 05 00 00 00 00 48 0f 46  H..H..H9.....H.F
	0x0010 cb 48 89 c8 c3                                   .H...
	rel 9+4 t=R_PCREL command-line-arguments.gusink<0>+0
command-line-arguments.cmovload<1> STEXT nosplit size=48 args=0x28 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	TEXT	command-line-arguments.cmovload(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	MOVQ	AX, command-line-arguments.a+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	FUNCDATA	$5, command-line-arguments.cmovload.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	FUNCDATA	$6, command-line-arguments.cmovload.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:206)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:207)	TESTB	SIB, SIB
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:207)	JEQ	21
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:208)	INCQ	DI
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	CMPQ	BX, DI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	JLS	36
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	MOVQ	(AX)(DI*8), AX
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	ADDQ	$16, SP
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	POPQ	BP
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	RET
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	MOVQ	DI, AX
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	MOVQ	BX, CX
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	PCDATA	$1, $1
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	CALL	runtime.panicIndex(SB)
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:212)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 40 84 f6  UH..H...H.D$ @..
	0x0010 74 03 48 ff c7 48 39 fb 76 0a 48 8b 04 f8 48 83  t.H..H9.v.H...H.
	0x0020 c4 10 5d c3 48 89 f8 48 89 d9 e8 00 00 00 00 90  ..].H..H........
	rel 43+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.cmovstore<1> STEXT nosplit size=63 args=0x28 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	TEXT	command-line-arguments.cmovstore(SB), NOSPLIT|ABIInternal, $24-40
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	PUSHQ	BP
	0x0001 00001 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	MOVQ	SP, BP
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	SUBQ	$16, SP
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	MOVQ	AX, command-line-arguments.a+32(FP)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	FUNCDATA	$5, command-line-arguments.cmovstore.arginfo1(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	FUNCDATA	$6, command-line-arguments.cmovstore.argliveinfo(SB)
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:215)	PCDATA	$3, $1
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:217)	LEAQ	1(DI), DX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	MOVBLZX	SIB, SI
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	TESTQ	SI, SI
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	CMOVQNE	DX, DI
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	CMPQ	BX, DI
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:216)	JLS	51
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	MOVQ	$7, (AX)(DI*8)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:221)	ADDQ	$16, SP
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:221)	POPQ	BP
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:221)	RET
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	MOVQ	DI, AX
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	MOVQ	BX, CX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	PCDATA	$1, $1
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	CALL	runtime.panicIndex(SB)
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:220)	XCHGL	AX, AX
	0x0000 55 48 89 e5 48 83 ec 10 48 89 44 24 20 48 8d 57  UH..H...H.D$ H.W
	0x0010 01 40 0f b6 f6 48 85 f6 48 0f 45 fa 0f 1f 40 00  .@...H..H.E...@.
	0x0020 48 39 fb 76 0e 48 c7 04 f8 07 00 00 00 48 83 c4  H9.v.H.......H..
	0x0030 10 5d c3 48 89 f8 48 89 d9 e8 00 00 00 00 90     .].H..H........
	rel 58+4 t=R_CALL runtime.panicIndex<1>+0
command-line-arguments.cmovinc<1> STEXT nosplit size=50 args=0x20 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:225)	TEXT	command-line-arguments.cmovinc(SB), NOSPLIT|NOFRAME|ABIInternal, $0-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:225)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:225)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:225)	FUNCDATA	$5, command-line-arguments.cmovinc.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:225)	FUNCDATA	$6, command-line-arguments.cmovinc.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:225)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:231)	INCQ	CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:234)	MOVBLZX	AL, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:245)	LEAQ	1(DI), DX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:248)	TESTQ	AX, AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:234)	MOVQ	CX, AX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:234)	CMOVQNE	BX, CX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:234)	MOVQ	CX, command-line-arguments.r0(SB)
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:242)	CMOVQNE	AX, BX
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:242)	MOVQ	BX, command-line-arguments.r1(SB)
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:248)	CMOVQNE	DX, DI
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:248)	MOVQ	DI, command-line-arguments.r2(SB)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:228)	RET
	0x0000 48 ff c1 0f b6 c0 48 8d 57 01 48 85 c0 48 89 c8  H.....H.W.H..H..
	0x0010 48 0f 45 cb 48 89 0d 00 00 00 00 48 0f 45 d8 48  H.E.H......H.E.H
	0x0020 89 1d 00 00 00 00 48 0f 45 fa 48 89 3d 00 00 00  ......H.E.H.=...
	0x0030 00 c3                                            ..
	rel 23+4 t=R_PCREL command-line-arguments.r0<0>+0
	rel 34+4 t=R_PCREL command-line-arguments.r1<0>+0
	rel 45+4 t=R_PCREL command-line-arguments.r2<0>+0
command-line-arguments.cmovinv<1> STEXT nosplit size=35 args=0x18 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:251)	TEXT	command-line-arguments.cmovinv(SB), NOSPLIT|NOFRAME|ABIInternal, $0-24
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:251)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:251)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:251)	FUNCDATA	$5, command-line-arguments.cmovinv.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:251)	FUNCDATA	$6, command-line-arguments.cmovinv.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:251)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:257)	NOTQ	CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:268)	MOVBLZX	AL, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:268)	TESTQ	AX, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:260)	MOVQ	CX, AX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:260)	CMOVQNE	BX, CX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:260)	MOVQ	CX, command-line-arguments.r0(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:268)	CMOVQNE	AX, BX
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:268)	MOVQ	BX, command-line-arguments.r1(SB)
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:254)	RET
	0x0000 48 f7 d1 0f b6 c0 48 85 c0 48 89 c8 48 0f 45 cb  H.....H..H..H.E.
	0x0010 48 89 0d 00 00 00 00 48 0f 45 d8 48 89 1d 00 00  H......H.E.H....
	0x0020 00 00 c3                                         ...
	rel 19+4 t=R_PCREL command-line-arguments.r0<0>+0
	rel 30+4 t=R_PCREL command-line-arguments.r1<0>+0
command-line-arguments.cmovneg<1> STEXT nosplit size=35 args=0x20 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:271)	TEXT	command-line-arguments.cmovneg(SB), NOSPLIT|NOFRAME|ABIInternal, $0-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:271)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:271)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:271)	FUNCDATA	$5, command-line-arguments.cmovneg.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:271)	FUNCDATA	$6, command-line-arguments.cmovneg.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:271)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:277)	NEGQ	CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:288)	MOVBLZX	AL, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:288)	TESTQ	AX, AX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:280)	MOVQ	CX, AX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:280)	CMOVQNE	BX, CX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:280)	MOVQ	CX, command-line-arguments.r0(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:288)	CMOVQNE	AX, BX
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:288)	MOVQ	BX, command-line-arguments.r1(SB)
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:274)	RET
	0x0000 48 f7 d9 0f b6 c0 48 85 c0 48 89 c8 48 0f 45 cb  H.....H..H..H.E.
	0x0010 48 89 0d 00 00 00 00 48 0f 45 d8 48 89 1d 00 00  H......H.E.H....
	0x0020 00 00 c3                                         ...
	rel 19+4 t=R_PCREL command-line-arguments.r0<0>+0
	rel 30+4 t=R_PCREL command-line-arguments.r1<0>+0
command-line-arguments.cmovsetm<1> STEXT nosplit size=46 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:291)	TEXT	command-line-arguments.cmovsetm(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:291)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:291)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:291)	FUNCDATA	$5, command-line-arguments.cmovsetm.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:291)	FUNCDATA	$6, command-line-arguments.cmovsetm.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:291)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:300)	MOVBLZX	AL, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:308)	TESTQ	AX, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:300)	MOVL	$0, AX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:300)	MOVQ	$-1, CX
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:300)	CMOVQNE	CX, AX
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:300)	MOVQ	AX, command-line-arguments.r0(SB)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:308)	MOVL	$0, AX
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:308)	CMOVQNE	AX, CX
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:308)	MOVQ	CX, command-line-arguments.r1(SB)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:294)	RET
	0x0000 0f b6 c0 48 85 c0 b8 00 00 00 00 48 c7 c1 ff ff  ...H.......H....
	0x0010 ff ff 48 0f 45 c1 48 89 05 00 00 00 00 b8 00 00  ..H.E.H.........
	0x0020 00 00 48 0f 45 c8 48 89 0d 00 00 00 00 c3        ..H.E.H.......
	rel 25+4 t=R_PCREL command-line-arguments.r0<0>+0
	rel 41+4 t=R_PCREL command-line-arguments.r1<0>+0
command-line-arguments.cmovFcmp0<1> STEXT nosplit size=117 args=0x20 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:311)	TEXT	command-line-arguments.cmovFcmp0(SB), NOSPLIT|NOFRAME|ABIInternal, $0-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:311)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:311)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:311)	FUNCDATA	$5, command-line-arguments.cmovFcmp0.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:311)	FUNCDATA	$6, command-line-arguments.cmovFcmp0.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:311)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:317)	LEAQ	1(BX), CX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:325)	MOVQ	BX, DX
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:325)	NOTQ	BX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:333)	NEGQ	DX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:322)	UCOMISD	X0, X1
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:320)	MOVQ	CX, SI
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:320)	CMOVQHI	AX, CX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:320)	MOVQ	CX, command-line-arguments.r0(SB)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:328)	CMOVQCC	AX, BX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:328)	MOVQ	BX, command-line-arguments.r1(SB)
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:338)	UCOMISD	X1, X0
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:336)	CMOVQHI	AX, DX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:336)	MOVQ	DX, command-line-arguments.r2(SB)
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:344)	MOVL	$0, CX
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:344)	MOVQ	$-1, DX
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:344)	CMOVQCC	DX, CX
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:344)	MOVQ	CX, command-line-arguments.r3(SB)
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:352)	MOVQ	SI, CX
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:352)	MOVQ	AX, DX
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:352)	CMOVQNE	SI, DX
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:352)	CMOVQPC	DX, SI
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:352)	MOVQ	SI, command-line-arguments.r4(SB)
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:360)	CMOVQNE	AX, CX
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:360)	CMOVQPS	AX, CX
	0x006d 00109 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:360)	MOVQ	CX, command-line-arguments.r5(SB)
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:314)	RET
	0x0000 48 8d 4b 01 48 89 da 48 f7 d3 48 f7 da 66 0f 2e  H.K.H..H..H..f..
	0x0010 c8 48 89 ce 48 0f 47 c8 48 89 0d 00 00 00 00 48  .H..H.G.H......H
	0x0020 0f 43 d8 48 89 1d 00 00 00 00 66 0f 2e c1 48 0f  .C.H......f...H.
	0x0030 47 d0 48 89 15 00 00 00 00 b9 00 00 00 00 48 c7  G.H...........H.
	0x0040 c2 ff ff ff ff 48 0f 43 ca 48 89 0d 00 00 00 00  .....H.C.H......
	0x0050 48 89 f1 48 89 c2 48 0f 45 d6 48 0f 4b f2 48 89  H..H..H.E.H.K.H.
	0x0060 35 00 00 00 00 48 0f 45 c8 48 0f 4a c8 48 89 0d  5....H.E.H.J.H..
	0x0070 00 00 00 00 c3                                   .....
	rel 27+4 t=R_PCREL command-line-arguments.r0<0>+0
	rel 38+4 t=R_PCREL command-line-arguments.r1<0>+0
	rel 53+4 t=R_PCREL command-line-arguments.r2<0>+0
	rel 76+4 t=R_PCREL command-line-arguments.r3<0>+0
	rel 97+4 t=R_PCREL command-line-arguments.r4<0>+0
	rel 112+4 t=R_PCREL command-line-arguments.r5<0>+0
command-line-arguments.cmovFcmp1<1> STEXT nosplit size=123 args=0x20 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:363)	TEXT	command-line-arguments.cmovFcmp1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:363)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:363)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:363)	FUNCDATA	$5, command-line-arguments.cmovFcmp1.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:363)	FUNCDATA	$6, command-line-arguments.cmovFcmp1.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:363)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:367)	LEAQ	1(BX), CX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:375)	MOVQ	BX, DX
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:375)	NOTQ	BX
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:383)	NEGQ	DX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:374)	UCOMISD	X0, X1
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:372)	MOVQ	AX, SI
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:372)	CMOVQHI	CX, AX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:372)	MOVQ	AX, command-line-arguments.r0(SB)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:380)	MOVQ	SI, AX
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:380)	CMOVQCC	BX, SI
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:380)	MOVQ	SI, command-line-arguments.r1(SB)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:390)	UCOMISD	X1, X0
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:388)	MOVQ	AX, BX
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:388)	CMOVQHI	DX, AX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:388)	MOVQ	AX, command-line-arguments.r2(SB)
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:396)	MOVQ	$-1, AX
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:396)	MOVL	$0, DX
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:396)	CMOVQCC	DX, AX
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:396)	MOVQ	AX, command-line-arguments.r3(SB)
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:404)	MOVQ	BX, AX
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:404)	MOVQ	CX, DX
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:404)	CMOVQNE	BX, DX
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:404)	CMOVQPC	DX, BX
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:404)	MOVQ	BX, command-line-arguments.r4(SB)
	0x006b 00107 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:412)	CMOVQNE	CX, AX
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:412)	CMOVQPS	CX, AX
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:412)	MOVQ	AX, command-line-arguments.r5(SB)
	0x007a 00122 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:366)	RET
	0x0000 48 8d 4b 01 48 89 da 48 f7 d3 48 f7 da 66 0f 2e  H.K.H..H..H..f..
	0x0010 c8 48 89 c6 48 0f 47 c1 48 89 05 00 00 00 00 48  .H..H.G.H......H
	0x0020 89 f0 48 0f 43 f3 48 89 35 00 00 00 00 66 0f 2e  ..H.C.H.5....f..
	0x0030 c1 48 89 c3 48 0f 47 c2 48 89 05 00 00 00 00 48  .H..H.G.H......H
	0x0040 c7 c0 ff ff ff ff ba 00 00 00 00 48 0f 43 c2 48  ...........H.C.H
	0x0050 89 05 00 00 00 00 48 89 d8 48 89 ca 48 0f 45 d3  ......H..H..H.E.
	0x0060 48 0f 4b da 48 89 1d 00 00 00 00 48 0f 45 c1 48  H.K.H......H.E.H
	0x0070 0f 4a c1 48 89 05 00 00 00 00 c3                 .J.H.......
	rel 27+4 t=R_PCREL command-line-arguments.r0<0>+0
	rel 41+4 t=R_PCREL command-line-arguments.r1<0>+0
	rel 59+4 t=R_PCREL command-line-arguments.r2<0>+0
	rel 82+4 t=R_PCREL command-line-arguments.r3<0>+0
	rel 103+4 t=R_PCREL command-line-arguments.r4<0>+0
	rel 118+4 t=R_PCREL command-line-arguments.r5<0>+0
command-line-arguments.cmovzero1<1> STEXT nosplit size=21 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:415)	TEXT	command-line-arguments.cmovzero1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:415)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:415)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:415)	FUNCDATA	$5, command-line-arguments.cmovzero1.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:415)	FUNCDATA	$6, command-line-arguments.cmovzero1.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:415)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:421)	MOVBLZX	AL, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:421)	TESTQ	CX, CX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:421)	MOVL	$0, AX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:421)	MOVL	$182, CX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:421)	CMOVQNE	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:417)	RET
	0x0000 0f b6 c8 48 85 c9 b8 00 00 00 00 b9 b6 00 00 00  ...H............
	0x0010 48 0f 45 c1 c3                                   H.E..
command-line-arguments.cmovzero2<1> STEXT nosplit size=21 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:424)	TEXT	command-line-arguments.cmovzero2(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:424)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:424)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:424)	FUNCDATA	$5, command-line-arguments.cmovzero2.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:424)	FUNCDATA	$6, command-line-arguments.cmovzero2.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:424)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:430)	MOVBLZX	AL, CX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:430)	TESTQ	CX, CX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:430)	MOVL	$182, AX
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:430)	MOVL	$0, CX
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:430)	CMOVQNE	CX, AX
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:426)	RET
	0x0000 0f b6 c8 48 85 c9 b8 b6 00 00 00 b9 00 00 00 00  ...H............
	0x0010 48 0f 45 c1 c3                                   H.E..
command-line-arguments.cmovzeroreg0<1> STEXT nosplit size=16 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:437)	TEXT	command-line-arguments.cmovzeroreg0(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:437)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:437)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:437)	FUNCDATA	$5, command-line-arguments.cmovzeroreg0.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:437)	FUNCDATA	$6, command-line-arguments.cmovzeroreg0.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:437)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:439)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:443)	MOVL	$0, CX
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:443)	CMOVQEQ	AX, CX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:443)	MOVQ	CX, AX
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:439)	RET
	0x0000 48 39 c3 b9 00 00 00 00 48 0f 44 c8 48 89 c8 c3  H9......H.D.H...
command-line-arguments.cmovzeroreg1<1> STEXT nosplit size=13 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:446)	TEXT	command-line-arguments.cmovzeroreg1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:446)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:446)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:446)	FUNCDATA	$5, command-line-arguments.cmovzeroreg1.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:446)	FUNCDATA	$6, command-line-arguments.cmovzeroreg1.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:446)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:448)	CMPQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:452)	MOVL	$0, CX
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:452)	CMOVQEQ	CX, AX
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/condmove.go:448)	RET
	0x0000 48 39 c3 b9 00 00 00 00 48 0f 44 c1 c3           H9......H.D..
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
command-line-arguments.gsink<0> SNOPTRBSS size=8
<0> SDWARFVAR size=45
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 67 73 69 6e 6b 00 09 03  guments.gsink...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01           .............
	rel 32+8 t=R_ADDR command-line-arguments.gsink<0>+0
	rel 40+4 t=R_DWARFSECREF go:info.int64<0>+0
command-line-arguments.gusink<0> SNOPTRBSS size=8
<0> SDWARFVAR size=46
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 67 75 73 69 6e 6b 00 09  guments.gusink..
	0x0020 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 33+8 t=R_ADDR command-line-arguments.gusink<0>+0
	rel 41+4 t=R_DWARFSECREF go:info.uint64<0>+0
command-line-arguments.r0<0> SNOPTRBSS size=8
<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 30 00 09 03 00 00 00  guments.r0......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r0<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
command-line-arguments.r1<0> SNOPTRBSS size=8
<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 31 00 09 03 00 00 00  guments.r1......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r1<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
command-line-arguments.r2<0> SNOPTRBSS size=8
<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 32 00 09 03 00 00 00  guments.r2......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r2<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
command-line-arguments.r3<0> SNOPTRBSS size=8
<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 33 00 09 03 00 00 00  guments.r3......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r3<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
command-line-arguments.r4<0> SNOPTRBSS size=8
<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 34 00 09 03 00 00 00  guments.r4......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r4<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
command-line-arguments.r5<0> SNOPTRBSS size=8
<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 35 00 09 03 00 00 00  guments.r5......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r5<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
type:.eqfunc32<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*[4]int-<0> SRODATA dupok size=9
	0x0000 00 07 2a 5b 34 5d 69 6e 74                       ..*[4]int
type:*[4]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b4 33 ce 65 08 08 08 36 00 00 00 00 00 00 00 00  .3.e...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]int-<0>+0
	rel 48+8 t=R_ADDR type:[4]int<0>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:[4]int<0> SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 ba 90 9c 97 0a 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc32<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[4]int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
	rel 56+8 t=R_ADDR type:[]int<0>+0
type:.namedata.*chan int-<0> SRODATA dupok size=11
	0x0000 00 09 2a 63 68 61 6e 20 69 6e 74                 ..*chan int
type:*chan int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fb 1c b8 83 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*chan int-<0>+0
	rel 48+8 t=R_ADDR type:chan int<0>+0
type:chan int<0> SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f9 f3 92 ed 0a 08 08 32 00 00 00 00 00 00 00 00  .......2........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*chan int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*chan int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
command-line-arguments.cmovint.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.cmovint.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·TjPuuCwdlCpTaRQGRKTrYw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.cmovchan.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovchan.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovuintptr.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovuintptr.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmov32bit.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 04 04 04 ff                                   .....
command-line-arguments.cmov32bit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmov16bit.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 02 02 02 ff                                   .....
command-line-arguments.cmov16bit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovfloateq.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovfloateq.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovfloatne.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovfloatne.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.frexp.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.frexp.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.ldexp.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.ldexp.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovfloatint2.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovfloatint2.argliveinfo<0> SRODATA static dupok size=3
	0x0000 00 00 02                                         ...
command-line-arguments.cmovloaded.arginfo1<0> SRODATA static dupok size=13
	0x0000 fe 00 08 08 08 10 08 18 08 fd 20 08 ff           .......... ..
command-line-arguments.cmovloaded.argliveinfo<0> SRODATA static dupok size=2
	0x0000 20 00                                             .
command-line-arguments.cmovuintptr2.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovuintptr2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovfloatmove.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovfloatmove.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinvert1.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovinvert1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinvert2.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovinvert2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinvert3.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovinvert3.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinvert4.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovinvert4.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinvert5.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovinvert5.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinvert6.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovinvert6.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
command-line-arguments.cmovload.arginfo1<0> SRODATA static dupok size=13
	0x0000 fe 00 08 08 08 10 08 fd 18 08 20 01 ff           .......... ..
command-line-arguments.cmovload.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovstore.arginfo1<0> SRODATA static dupok size=13
	0x0000 fe 00 08 08 08 10 08 fd 18 08 20 01 ff           .......... ..
command-line-arguments.cmovstore.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinc.arginfo1<0> SRODATA static dupok size=9
	0x0000 00 01 08 08 10 08 18 08 ff                       .........
command-line-arguments.cmovinc.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovinv.arginfo1<0> SRODATA static dupok size=7
	0x0000 00 01 08 08 10 08 ff                             .......
command-line-arguments.cmovinv.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovneg.arginfo1<0> SRODATA static dupok size=9
	0x0000 00 01 08 08 10 08 18 08 ff                       .........
command-line-arguments.cmovneg.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovsetm.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 01 08 08 ff                                   .....
command-line-arguments.cmovsetm.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovFcmp0.arginfo1<0> SRODATA static dupok size=9
	0x0000 00 08 08 08 10 08 18 08 ff                       .........
command-line-arguments.cmovFcmp0.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovFcmp1.arginfo1<0> SRODATA static dupok size=9
	0x0000 00 08 08 08 10 08 18 08 ff                       .........
command-line-arguments.cmovFcmp1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovzero1.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 01 ff                                         ...
command-line-arguments.cmovzero1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovzero2.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 01 ff                                         ...
command-line-arguments.cmovzero2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovzeroreg0.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovzeroreg0.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.cmovzeroreg1.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.cmovzeroreg1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
$f64.3ff0000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 f0 3f                          .......?
$f64.4000000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 00 40                          .......@
$f64.4010000000000000<0> SRODATA size=8
	0x0000 00 00 00 00 00 00 10 40                          .......@
aux for command-line-arguments.cmovint<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 04 00 00 00 00 00 00 00 11 00 00 00 00  ................
	0x0050 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00  .....P..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovint<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovint<1>+0
aux for command-line-arguments.cmovint<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 04 14  ................
	0x0010 38 06 03 02 32 06 03 7d 65 02 01 00 01 01        8...2..}e.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovint<1>+0
aux for command-line-arguments.cmovint<0> SDWARFFCN size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 74 00  guments.cmovint.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 02 00 00 00 09 01 12 63 00 00 09 00 00 00  .........c......
	0x0040 00 00 00 00 00 11 7e 72 30 00 01 09 00 00 00 00  ......~r0.......
	0x0050 00 0d 78 00 0a 00 00 00 00 00 00 00 00 00        ..x...........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 32+8 t=R_ADDR command-line-arguments.cmovint<1>+0
	rel 40+8 t=R_ADDR command-line-arguments.cmovint<1>+17
	rel 61+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 65+4 t=R_DWARFSECREF <0>+0
	rel 76+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 85+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 89+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.cmovchan<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovchan<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovchan<1>+0
aux for command-line-arguments.cmovchan<0> SDWARFLINES size=29
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 10 14  ................
	0x0010 06 03 02 32 06 03 7d 33 02 01 00 01 01           ...2..}3.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovchan<1>+0
aux for command-line-arguments.cmovchan<0> SDWARFFCN size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 63 68 61 6e  guments.cmovchan
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 15 01 12 78 00 00 15 00 00  ..........x.....
	0x0040 00 00 00 00 00 00 12 79 00 00 15 00 00 00 00 00  .......y........
	0x0050 00 00 00 11 7e 72 30 00 01 15 00 00 00 00 00 00  ....~r0.........
	rel 0+0 t=R_USETYPE type:chan int<0>+0
	rel 33+8 t=R_ADDR command-line-arguments.cmovchan<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.cmovchan<1>+8
	rel 62+4 t=R_DWARFSECREF go:info.chan int<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+0
	rel 75+4 t=R_DWARFSECREF go:info.chan int<0>+0
	rel 79+4 t=R_DWARFSECREF <0>+51
	rel 90+4 t=R_DWARFSECREF go:info.chan int<0>+0
aux for command-line-arguments.cmovuintptr<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0e 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovuintptr<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovuintptr<1>+0
aux for command-line-arguments.cmovuintptr<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 1c 14  ................
	0x0010 06 2d 06 2c 06 03 02 32 06 03 7d 33 02 01 00 01  .-.,...2..}3....
	0x0020 01                                               .
	rel 3+8 t=R_ADDR command-line-arguments.cmovuintptr<1>+0
aux for command-line-arguments.cmovuintptr<0> SDWARFFCN size=99
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 75 69 6e 74  guments.cmovuint
	0x0020 70 74 72 00 00 00 00 00 00 00 00 00 00 00 00 00  ptr.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 20 01 12 78 00 00  .......... ..x..
	0x0040 20 00 00 00 00 00 00 00 00 12 79 00 00 20 00 00   .........y.. ..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 20 00 00 00  .......~r0.. ...
	0x0060 00 00 00                                         ...
	rel 0+0 t=R_USETYPE type:uintptr<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovuintptr<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovuintptr<1>+14
	rel 65+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.uintptr<0>+0
aux for command-line-arguments.cmov32bit<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmov32bit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmov32bit<1>+0
aux for command-line-arguments.cmov32bit<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 27 14  ..............'.
	0x0010 06 23 06 22 06 03 02 28 06 03 7d 29 02 01 00 01  .#."...(..})....
	0x0020 01                                               .
	rel 3+8 t=R_ADDR command-line-arguments.cmov32bit<1>+0
aux for command-line-arguments.cmov32bit<0> SDWARFFCN size=97
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 33 32 62 69  guments.cmov32bi
	0x0020 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0030 00 00 01 9c 02 00 00 00 2b 01 12 78 00 00 2b 00  ........+..x..+.
	0x0040 00 00 00 00 00 00 00 12 79 00 00 2b 00 00 00 00  ........y..+....
	0x0050 00 00 00 00 11 7e 72 30 00 01 2b 00 00 00 00 00  .....~r0..+.....
	0x0060 00                                               .
	rel 0+0 t=R_USETYPE type:uint32<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.cmov32bit<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmov32bit<1>+10
	rel 63+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 67+4 t=R_DWARFSECREF <0>+0
	rel 76+4 t=R_DWARFSECREF go:info.uint32<0>+0
	rel 80+4 t=R_DWARFSECREF <0>+51
	rel 91+4 t=R_DWARFSECREF go:info.uint32<0>+0
aux for command-line-arguments.cmov16bit<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmov16bit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmov16bit<1>+0
aux for command-line-arguments.cmov16bit<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 32 14  ..............2.
	0x0010 06 23 06 22 06 03 02 32 06 03 7d 33 02 01 00 01  .#."...2..}3....
	0x0020 01                                               .
	rel 3+8 t=R_ADDR command-line-arguments.cmov16bit<1>+0
aux for command-line-arguments.cmov16bit<0> SDWARFFCN size=97
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 31 36 62 69  guments.cmov16bi
	0x0020 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0030 00 00 01 9c 02 00 00 00 36 01 12 78 00 00 36 00  ........6..x..6.
	0x0040 00 00 00 00 00 00 00 12 79 00 00 36 00 00 00 00  ........y..6....
	0x0050 00 00 00 00 11 7e 72 30 00 01 36 00 00 00 00 00  .....~r0..6.....
	0x0060 00                                               .
	rel 0+0 t=R_USETYPE type:uint16<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.cmov16bit<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmov16bit<1>+12
	rel 63+4 t=R_DWARFSECREF go:info.uint16<0>+0
	rel 67+4 t=R_DWARFSECREF <0>+0
	rel 76+4 t=R_DWARFSECREF go:info.uint16<0>+0
	rel 80+4 t=R_DWARFSECREF <0>+51
	rel 91+4 t=R_DWARFSECREF go:info.uint16<0>+0
aux for command-line-arguments.cmovfloateq<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1a 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 19 00 00 00 00 00 00 00 1a 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.cmovfloateq<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovfloateq<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovfloateq<1>+0
aux for command-line-arguments.cmovfloateq<0> SDWARFLINES size=29
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 3f 14  ..............?.
	0x0010 06 03 02 3c 06 03 7d dd 02 01 00 01 01           ...<..}......
	rel 3+8 t=R_ADDR command-line-arguments.cmovfloateq<1>+0
aux for command-line-arguments.cmovfloateq<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 66 6c 6f 61  guments.cmovfloa
	0x0020 74 65 71 00 00 00 00 00 00 00 00 00 00 00 00 00  teq.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 43 01 12 78 00 00  ..........C..x..
	0x0040 43 00 00 00 00 00 00 00 00 12 79 00 00 43 00 00  C.........y..C..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 43 00 00 00  .......~r0..C...
	0x0060 00 00 0d 61 00 44 00 00 00 00 00 00 00 00 00     ...a.D.........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovfloateq<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovfloateq<1>+26
	rel 65+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.cmovfloatne<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 17 00 00 00 00  ................
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 16 00 00 00 00 00 00 00 17 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.cmovfloatne<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovfloatne<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovfloatne<1>+0
aux for command-line-arguments.cmovfloatne<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 cb 00  ................
	0x0010 14 06 03 02 3c 06 03 7d bf 02 01 00 01 01        ....<..}......
	rel 3+8 t=R_ADDR command-line-arguments.cmovfloatne<1>+0
aux for command-line-arguments.cmovfloatne<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 66 6c 6f 61  guments.cmovfloa
	0x0020 74 6e 65 00 00 00 00 00 00 00 00 00 00 00 00 00  tne.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 4f 01 12 78 00 00  ..........O..x..
	0x0040 4f 00 00 00 00 00 00 00 00 12 79 00 00 4f 00 00  O.........y..O..
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 4f 00 00 00  .......~r0..O...
	0x0060 00 00 0d 61 00 50 00 00 00 00 00 00 00 00 00     ...a.P.........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovfloatne<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovfloatne<1>+23
	rel 65+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.frexp<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.frexp<1>+0
aux for command-line-arguments.frexp<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d7 00  ................
	0x0010 14 06 5f 02 06 00 01 01                          .._.....
	rel 3+8 t=R_ADDR command-line-arguments.frexp<1>+0
aux for command-line-arguments.frexp<0> SDWARFFCN size=93
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 72 65 78 70 00 00 00  guments.frexp...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 5c 01 12 66 00 00 5c 00 00 00 00 00  ....\..f..\.....
	0x0040 00 00 00 11 66 72 61 63 00 01 5c 00 00 00 00 00  ....frac..\.....
	0x0050 11 65 78 70 00 01 5c 00 00 00 00 00 00           .exp..\......
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.frexp<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.frexp<1>+14
	rel 59+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
	rel 75+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 87+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.ldexp<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 09 00 00 00 00  ................
	0x0050 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00  .....P..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.ldexp<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.ldexp<1>+0
aux for command-line-arguments.ldexp<0> SDWARFLINES size=24
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 dc 00  ................
	0x0010 14 06 5f 02 01 00 01 01                          .._.....
	rel 3+8 t=R_ADDR command-line-arguments.ldexp<1>+0
aux for command-line-arguments.ldexp<0> SDWARFFCN size=98
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 64 65 78 70 00 00 00  guments.ldexp...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 61 01 12 66 72 61 63 00 00 61 00 00  ....a..frac..a..
	0x0040 00 00 00 00 00 00 12 65 78 70 00 00 61 00 00 00  .......exp..a...
	0x0050 00 00 00 00 00 11 7e 72 30 00 01 61 00 00 00 00  ......~r0..a....
	0x0060 00 00                                            ..
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.ldexp<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.ldexp<1>+9
	rel 62+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+0
	rel 77+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 81+4 t=R_DWARFSECREF <0>+51
	rel 92+4 t=R_DWARFSECREF go:info.float64<0>+0
aux for command-line-arguments.cmovfloatint2<0> SDWARFLOC size=333
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 16 00 00 00 00 00 00 00  ................
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 25 00 00 00 00  ...........%....
	0x0050 00 00 00 01 00 62 25 00 00 00 00 00 00 00 8a 00  .....b%.........
	0x0060 00 00 00 00 00 00 02 00 91 08 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x0080 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 25 00 00 00 00 00 00 00 01 00 61 25 00 00  ..%.........a%..
	0x00a0 00 00 00 00 00 5b 00 00 00 00 00 00 00 02 00 91  .....[..........
	0x00b0 68 5b 00 00 00 00 00 00 00 8a 00 00 00 00 00 00  h[..............
	0x00c0 00 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00  ...a............
	0x00d0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x00e0 00 00 00 00 25 00 00 00 00 00 00 00 43 00 00 00  ....%.......C...
	0x00f0 00 00 00 00 01 00 61 00 00 00 00 00 00 00 00 00  ......a.........
	0x0100 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00  ................
	0x0110 00 00 00 00 00 00 00 25 00 00 00 00 00 00 00 3d  .......%.......=
	0x0120 00 00 00 00 00 00 00 01 00 50 3d 00 00 00 00 00  .........P=.....
	0x0130 00 00 48 00 00 00 00 00 00 00 01 00 52 00 00 00  ..H.........R...
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
	rel 130+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
	rel 220+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
	rel 271+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
aux for command-line-arguments.cmovfloatint2<0> SDWARFLINES size=55
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e0 00  ................
	0x0010 14 0a 73 3b 06 4b 60 06 37 43 36 06 5f 06 03 02  ..s;.K`.7C6._...
	0x0020 3c 06 37 08 03 7b 15 06 69 06 37 06 03 06 32 03  <.7..{..i.7...2.
	0x0030 75 47 02 22 00 01 01                             uG."...
	rel 3+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
aux for command-line-arguments.cmovfloatint2<0> SDWARFFCN size=171
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 66 6c 6f 61  guments.cmovfloa
	0x0020 74 69 6e 74 32 00 00 00 00 00 00 00 00 00 00 00  tint2...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 66 01 12 78  ............f..x
	0x0040 00 00 66 00 00 00 00 00 00 00 00 12 79 00 00 66  ..f.........y..f
	0x0050 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 66 00  .........~r0..f.
	0x0060 00 00 00 00 0c 79 66 72 00 67 00 00 00 00 00 0d  .....yfr.g......
	0x0070 72 00 69 00 00 00 00 00 00 00 00 17 00 00 00 00  r.i.............
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 0d 72 66 72  .............rfr
	0x0090 00 6b 00 00 00 00 00 00 00 00 0d 72 65 78 70 00  .k.........rexp.
	0x00a0 6b 00 00 00 00 00 00 00 00 00 00                 k..........
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+138
	rel 67+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 95+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 106+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 115+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 119+4 t=R_DWARFSECREF <0>+122
	rel 124+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+28
	rel 132+8 t=R_ADDR command-line-arguments.cmovfloatint2<1>+82
	rel 146+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 150+4 t=R_DWARFSECREF <0>+212
	rel 161+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 165+4 t=R_DWARFSECREF <0>+263
aux for command-line-arguments.cmovloaded<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.cmovloaded<1>+0
aux for command-line-arguments.cmovloaded<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 f3 00  ................
	0x0010 14 44 06 34 03 04 32 06 03 7b 33 02 01 00 01 01  .D.4..2..{3.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovloaded<1>+0
aux for command-line-arguments.cmovloaded<0> SDWARFFCN size=96
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 6c 6f 61 64  guments.cmovload
	0x0020 65 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ed..............
	0x0030 00 00 00 01 9c 02 00 00 00 78 01 11 78 00 00 78  .........x..x..x
	0x0040 00 00 00 00 01 9c 12 79 00 00 78 00 00 00 00 00  .......y..x.....
	0x0050 00 00 00 11 7e 72 30 00 01 78 00 00 00 00 00 00  ....~r0..x......
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.cmovloaded<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.cmovloaded<1>+17
	rel 64+4 t=R_DWARFSECREF go:info.[4]int<0>+0
	rel 75+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 79+4 t=R_DWARFSECREF <0>+0
	rel 90+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.cmovuintptr2<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 0f 00 00 00 00 00 00 00 10 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.cmovuintptr2<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovuintptr2<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovuintptr2<1>+0
aux for command-line-arguments.cmovuintptr2<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 80 01  ................
	0x0010 14 2e 06 03 02 32 06 03 7d 65 02 01 00 01 01     .....2..}e.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovuintptr2<1>+0
aux for command-line-arguments.cmovuintptr2<0> SDWARFFCN size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 75 69 6e 74  guments.cmovuint
	0x0020 70 74 72 32 00 00 00 00 00 00 00 00 00 00 00 00  ptr2............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 85 01 01 12 78  ...............x
	0x0040 00 00 85 01 00 00 00 00 00 00 00 00 12 79 00 00  .............y..
	0x0050 85 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01  ...........~r0..
	0x0060 85 01 00 00 00 00 00 0d 61 00 86 01 00 00 00 00  ........a.......
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:uintptr<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.cmovuintptr2<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.cmovuintptr2<1>+16
	rel 68+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 72+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 86+4 t=R_DWARFSECREF <0>+51
	rel 98+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 108+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 112+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.cmovfloatmove<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 18 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 17 00 00 00 00 00 00 00 18 00  ................
	0x0080 00 00 00 00 00 00 01 00 61 00 00 00 00 00 00 00  ........a.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.cmovfloatmove<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovfloatmove<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovfloatmove<1>+0
aux for command-line-arguments.cmovfloatmove<0> SDWARFLINES size=28
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 8e 01  ................
	0x0010 14 06 2d 06 03 02 dc 02 01 00 01 01              ..-.........
	rel 3+8 t=R_ADDR command-line-arguments.cmovfloatmove<1>+0
aux for command-line-arguments.cmovfloatmove<0> SDWARFFCN size=118
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 66 6c 6f 61  guments.cmovfloa
	0x0020 74 6d 6f 76 65 00 00 00 00 00 00 00 00 00 00 00  tmove...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 92 01 01 12  ................
	0x0040 78 00 00 92 01 00 00 00 00 00 00 00 00 12 79 00  x.............y.
	0x0050 00 92 01 00 00 00 00 00 00 00 00 11 7e 72 30 00  ............~r0.
	0x0060 01 92 01 00 00 00 00 00 0d 61 00 93 01 00 00 00  .........a......
	0x0070 00 00 00 00 00 00                                ......
	rel 0+0 t=R_USETYPE type:float64<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.cmovfloatmove<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.cmovfloatmove<1>+24
	rel 69+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 83+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 87+4 t=R_DWARFSECREF <0>+51
	rel 99+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 109+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 113+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.cmovinvert1<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovinvert1<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinvert1<1>+0
aux for command-line-arguments.cmovinvert1<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 9f 01  ................
	0x0010 14 06 2d 06 2c 06 59 06 51 02 01 00 01 01        ..-.,.Y.Q.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinvert1<1>+0
aux for command-line-arguments.cmovinvert1<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 65  guments.cmovinve
	0x0020 72 74 31 00 00 00 00 00 00 00 00 00 00 00 00 00  rt1.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 a3 01 01 12 78 00  ..............x.
	0x0040 00 a3 01 00 00 00 00 00 00 00 00 12 79 00 00 a3  ............y...
	0x0050 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 a3  ..........~r0...
	0x0060 01 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:int64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovinvert1<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovinvert1<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 97+4 t=R_DWARFSECREF go:info.int64<0>+0
aux for command-line-arguments.cmovinvert2<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovinvert2<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinvert2<1>+0
aux for command-line-arguments.cmovinvert2<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 a6 01  ................
	0x0010 14 06 2d 06 2c 06 59 06 51 02 01 00 01 01        ..-.,.Y.Q.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinvert2<1>+0
aux for command-line-arguments.cmovinvert2<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 65  guments.cmovinve
	0x0020 72 74 32 00 00 00 00 00 00 00 00 00 00 00 00 00  rt2.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 aa 01 01 12 78 00  ..............x.
	0x0040 00 aa 01 00 00 00 00 00 00 00 00 12 79 00 00 aa  ............y...
	0x0050 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 aa  ..........~r0...
	0x0060 01 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:int64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovinvert2<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovinvert2<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 97+4 t=R_DWARFSECREF go:info.int64<0>+0
aux for command-line-arguments.cmovinvert3<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovinvert3<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinvert3<1>+0
aux for command-line-arguments.cmovinvert3<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ad 01  ................
	0x0010 14 06 2d 06 2c 06 59 06 51 02 01 00 01 01        ..-.,.Y.Q.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinvert3<1>+0
aux for command-line-arguments.cmovinvert3<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 65  guments.cmovinve
	0x0020 72 74 33 00 00 00 00 00 00 00 00 00 00 00 00 00  rt3.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 b1 01 01 12 78 00  ..............x.
	0x0040 00 b1 01 00 00 00 00 00 00 00 00 12 79 00 00 b1  ............y...
	0x0050 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 b1  ..........~r0...
	0x0060 01 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:int64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovinvert3<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovinvert3<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 97+4 t=R_DWARFSECREF go:info.int64<0>+0
aux for command-line-arguments.cmovinvert4<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovinvert4<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinvert4<1>+0
aux for command-line-arguments.cmovinvert4<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 b4 01  ................
	0x0010 14 06 2d 06 2c 06 59 06 51 02 01 00 01 01        ..-.,.Y.Q.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinvert4<1>+0
aux for command-line-arguments.cmovinvert4<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 65  guments.cmovinve
	0x0020 72 74 34 00 00 00 00 00 00 00 00 00 00 00 00 00  rt4.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 b8 01 01 12 78 00  ..............x.
	0x0040 00 b8 01 00 00 00 00 00 00 00 00 12 79 00 00 b8  ............y...
	0x0050 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 b8  ..........~r0...
	0x0060 01 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:int64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovinvert4<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovinvert4<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int64<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 97+4 t=R_DWARFSECREF go:info.int64<0>+0
aux for command-line-arguments.cmovinvert5<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovinvert5<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinvert5<1>+0
aux for command-line-arguments.cmovinvert5<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 bb 01  ................
	0x0010 14 06 2d 06 2c 06 59 06 51 02 01 00 01 01        ..-.,.Y.Q.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinvert5<1>+0
aux for command-line-arguments.cmovinvert5<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 65  guments.cmovinve
	0x0020 72 74 35 00 00 00 00 00 00 00 00 00 00 00 00 00  rt5.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 bf 01 01 12 78 00  ..............x.
	0x0040 00 bf 01 00 00 00 00 00 00 00 00 12 79 00 00 bf  ............y...
	0x0050 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 bf  ..........~r0...
	0x0060 01 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovinvert5<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovinvert5<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 97+4 t=R_DWARFSECREF go:info.uint64<0>+0
aux for command-line-arguments.cmovinvert6<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovinvert6<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinvert6<1>+0
aux for command-line-arguments.cmovinvert6<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c2 01  ................
	0x0010 14 06 2d 06 2c 06 59 06 51 02 01 00 01 01        ..-.,.Y.Q.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinvert6<1>+0
aux for command-line-arguments.cmovinvert6<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 65  guments.cmovinve
	0x0020 72 74 36 00 00 00 00 00 00 00 00 00 00 00 00 00  rt6.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 c6 01 01 12 78 00  ..............x.
	0x0040 00 c6 01 00 00 00 00 00 00 00 00 12 79 00 00 c6  ............y...
	0x0050 01 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 c6  ..........~r0...
	0x0060 01 00 00 00 00 00 00                             .......
	rel 0+0 t=R_USETYPE type:uint64<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.cmovinvert6<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.cmovinvert6<1>+21
	rel 67+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.uint64<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 97+4 t=R_DWARFSECREF go:info.uint64<0>+0
aux for command-line-arguments.cmovload<0> SDWARFLOC size=212
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1e 00 00 00 00 00 00 00  ................
	0x0020 09 00 50 93 08 53 93 08 52 93 08 1e 00 00 00 00  ..P..S..R.......
	0x0030 00 00 00 2a 00 00 00 00 00 00 00 08 00 93 08 53  ...*...........S
	0x0040 93 08 52 93 08 2a 00 00 00 00 00 00 00 30 00 00  ..R..*.......0..
	0x0050 00 00 00 00 00 07 00 93 08 53 93 08 93 08 00 00  .........S......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0070 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 30 00 00 00 00 00 00 00 01 00  ......0.........
	0x0090 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  U...............
	0x00a0 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00  .........0......
	0x00c0 00 01 00 54 00 00 00 00 00 00 00 00 00 00 00 00  ...T............
	0x00d0 00 00 00 00                                      ....
	rel 8+8 t=R_ADDR command-line-arguments.cmovload<1>+0
	rel 118+8 t=R_ADDR command-line-arguments.cmovload<1>+0
	rel 169+8 t=R_ADDR command-line-arguments.cmovload<1>+0
aux for command-line-arguments.cmovload<0> SDWARFLINES size=41
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c8 01  ................
	0x0010 14 0a 37 06 37 06 42 06 2d 06 24 31 06 2d 06 23  ..7.7.B.-.$1.-.#
	0x0020 06 37 06 b9 02 01 00 01 01                       .7.......
	rel 3+8 t=R_ADDR command-line-arguments.cmovload<1>+0
aux for command-line-arguments.cmovload<0> SDWARFFCN size=114
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 6c 6f 61 64  guments.cmovload
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 ce 01 01 12 61 00 00 ce 01  ...........a....
	0x0040 00 00 00 00 00 00 00 00 12 69 00 00 ce 01 00 00  .........i......
	0x0050 00 00 00 00 00 00 12 62 00 00 ce 01 00 00 00 00  .......b........
	0x0060 00 00 00 00 11 7e 72 30 00 01 ce 01 00 00 00 00  .....~r0........
	0x0070 00 00                                            ..
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 33+8 t=R_ADDR command-line-arguments.cmovload<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.cmovload<1>+48
	rel 64+4 t=R_DWARFSECREF go:info.[]int<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+110
	rel 92+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 96+4 t=R_DWARFSECREF <0>+161
	rel 108+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.cmovstore<0> SDWARFLOC size=212
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 36 00 00 00 00 00 00 00  ........6.......
	0x0020 09 00 50 93 08 53 93 08 52 93 08 36 00 00 00 00  ..P..S..R..6....
	0x0030 00 00 00 39 00 00 00 00 00 00 00 08 00 93 08 53  ...9...........S
	0x0040 93 08 52 93 08 39 00 00 00 00 00 00 00 3f 00 00  ..R..9.......?..
	0x0050 00 00 00 00 00 07 00 93 08 53 93 08 93 08 00 00  .........S......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff  ................
	0x0070 ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 3f 00 00 00 00 00 00 00 01 00  ......?.........
	0x0090 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  U...............
	0x00a0 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 15 00 00 00 00 00 00  ................
	0x00c0 00 01 00 54 00 00 00 00 00 00 00 00 00 00 00 00  ...T............
	0x00d0 00 00 00 00                                      ....
	rel 8+8 t=R_ADDR command-line-arguments.cmovstore<1>+0
	rel 118+8 t=R_ADDR command-line-arguments.cmovstore<1>+0
	rel 169+8 t=R_ADDR command-line-arguments.cmovstore<1>+0
aux for command-line-arguments.cmovstore<0> SDWARFLINES size=41
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d1 01  ................
	0x0010 14 0a 37 06 37 06 43 3a 06 37 06 97 06 27 06 60  ..7.7.C:.7...'.`
	0x0020 06 4a 06 7d 02 01 00 01 01                       .J.}.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovstore<1>+0
aux for command-line-arguments.cmovstore<0> SDWARFFCN size=102
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 73 74 6f 72  guments.cmovstor
	0x0020 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  e...............
	0x0030 00 00 01 9c 02 00 00 00 d7 01 01 12 61 00 00 d7  ............a...
	0x0040 01 00 00 00 00 00 00 00 00 12 69 00 00 d7 01 00  ..........i.....
	0x0050 00 00 00 00 00 00 00 12 62 00 00 d7 01 00 00 00  ........b.......
	0x0060 00 00 00 00 00 00                                ......
	rel 34+8 t=R_ADDR command-line-arguments.cmovstore<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmovstore<1>+63
	rel 65+4 t=R_DWARFSECREF go:info.[]int<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+110
	rel 93+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 97+4 t=R_DWARFSECREF <0>+161
aux for command-line-arguments.cmovinc<0> SDWARFLOC size=325
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1f 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 03 00  ................
	0x0080 00 00 00 00 00 00 01 00 52 00 00 00 00 00 00 00  ........R.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 32 00 00 00 00 00 00 00 01 00 55 00 00 00 00  .2.........U....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x00d0 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 1f 00 00 00 00 00 00 00 01 00 53 1f  ..............S.
	0x00f0 00 00 00 00 00 00 00 32 00 00 00 00 00 00 00 01  .......2........
	0x0100 00 52 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .R..............
	0x0110 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 32 00 00 00 00 00  ..........2.....
	0x0130 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00 00  ....S...........
	0x0140 00 00 00 00 00                                   .....
	rel 8+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
	rel 212+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
	rel 282+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
aux for command-line-arguments.cmovinc<0> SDWARFLINES size=52
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e1 01  ................
	0x0010 14 06 30 06 03 06 32 06 3a 06 03 76 29 06 2d 06  ..0...2.:..v).-.
	0x0020 03 03 82 06 37 06 03 01 5a 06 37 06 03 70 51 02  ....7...Z.7..pQ.
	0x0030 01 00 01 01                                      ....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
aux for command-line-arguments.cmovinc<0> SDWARFFCN size=145
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 63 00  guments.cmovinc.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 02 00 00 00 e1 01 01 12 63 6f 6e 64 00 00  ..........cond..
	0x0040 e1 01 00 00 00 00 00 00 00 00 12 61 00 00 e1 01  ...........a....
	0x0050 00 00 00 00 00 00 00 00 12 62 00 00 e1 01 00 00  .........b......
	0x0060 00 00 00 00 00 00 12 63 00 00 e1 01 00 00 00 00  .......c........
	0x0070 00 00 00 00 0d 78 30 00 e2 01 00 00 00 00 00 00  .....x0.........
	0x0080 00 00 0d 78 31 00 e2 01 00 00 00 00 00 00 00 00  ...x1...........
	0x0090 00                                               .
	rel 32+8 t=R_ADDR command-line-arguments.cmovinc<1>+0
	rel 40+8 t=R_ADDR command-line-arguments.cmovinc<1>+50
	rel 66+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 98+4 t=R_DWARFSECREF <0>+102
	rel 108+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 112+4 t=R_DWARFSECREF <0>+153
	rel 122+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 126+4 t=R_DWARFSECREF <0>+204
	rel 136+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 140+4 t=R_DWARFSECREF <0>+274
aux for command-line-arguments.cmovinv<0> SDWARFLOC size=274
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1b 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 03 00  ................
	0x0080 00 00 00 00 00 00 01 00 52 00 00 00 00 00 00 00  ........R.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 1b 00 00 00 00 00 00 00 01 00 53 1b 00 00 00  ...........S....
	0x00c0 00 00 00 00 23 00 00 00 00 00 00 00 01 00 52 00  ....#.........R.
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff  ................
	0x00e0 ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 23 00 00 00 00 00 00 00 01  .......#........
	0x0100 00 53 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .S..............
	0x0110 00 00                                            ..
	rel 8+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
	rel 231+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
aux for command-line-arguments.cmovinv<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 fb 01  ................
	0x0010 14 06 03 06 32 06 03 7c 47 06 2d 06 03 03 82 06  ....2..|G.-.....
	0x0020 37 06 03 76 51 02 01 00 01 01                    7..vQ.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
aux for command-line-arguments.cmovinv<0> SDWARFFCN size=131
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 69 6e 76 00  guments.cmovinv.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 02 00 00 00 fb 01 01 12 63 6f 6e 64 00 00  ..........cond..
	0x0040 fb 01 00 00 00 00 00 00 00 00 12 61 00 00 fb 01  ...........a....
	0x0050 00 00 00 00 00 00 00 00 12 62 00 00 fb 01 00 00  .........b......
	0x0060 00 00 00 00 00 00 0d 78 30 00 fc 01 00 00 00 00  .......x0.......
	0x0070 00 00 00 00 0d 78 31 00 fc 01 00 00 00 00 00 00  .....x1.........
	0x0080 00 00 00                                         ...
	rel 32+8 t=R_ADDR command-line-arguments.cmovinv<1>+0
	rel 40+8 t=R_ADDR command-line-arguments.cmovinv<1>+35
	rel 66+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 98+4 t=R_DWARFSECREF <0>+102
	rel 108+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 112+4 t=R_DWARFSECREF <0>+153
	rel 122+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 126+4 t=R_DWARFSECREF <0>+223
aux for command-line-arguments.cmovneg<0> SDWARFLOC size=325
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 1b 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 03 00  ................
	0x0080 00 00 00 00 00 00 01 00 52 00 00 00 00 00 00 00  ........R.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 23 00 00 00 00 00 00 00 01 00 55 00 00 00 00  .#.........U....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x00d0 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 1b 00 00 00 00 00 00 00 01 00 53 1b  ..............S.
	0x00f0 00 00 00 00 00 00 00 23 00 00 00 00 00 00 00 01  .......#........
	0x0100 00 52 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .R..............
	0x0110 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 23 00 00 00 00 00  ..........#.....
	0x0130 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00 00  ....S...........
	0x0140 00 00 00 00 00                                   .....
	rel 8+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
	rel 212+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
	rel 282+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
aux for command-line-arguments.cmovneg<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 8f 02  ................
	0x0010 14 06 03 06 32 06 03 7c 47 06 2d 06 03 03 82 06  ....2..|G.-.....
	0x0020 37 06 03 76 51 02 01 00 01 01                    7..vQ.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
aux for command-line-arguments.cmovneg<0> SDWARFFCN size=145
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 6e 65 67 00  guments.cmovneg.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 02 00 00 00 8f 02 01 12 63 6f 6e 64 00 00  ..........cond..
	0x0040 8f 02 00 00 00 00 00 00 00 00 12 61 00 00 8f 02  ...........a....
	0x0050 00 00 00 00 00 00 00 00 12 62 00 00 8f 02 00 00  .........b......
	0x0060 00 00 00 00 00 00 12 63 00 00 8f 02 00 00 00 00  .......c........
	0x0070 00 00 00 00 0d 78 30 00 90 02 00 00 00 00 00 00  .....x0.........
	0x0080 00 00 0d 78 31 00 90 02 00 00 00 00 00 00 00 00  ...x1...........
	0x0090 00                                               .
	rel 32+8 t=R_ADDR command-line-arguments.cmovneg<1>+0
	rel 40+8 t=R_ADDR command-line-arguments.cmovneg<1>+35
	rel 66+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 98+4 t=R_DWARFSECREF <0>+102
	rel 108+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 112+4 t=R_DWARFSECREF <0>+153
	rel 122+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 126+4 t=R_DWARFSECREF <0>+204
	rel 136+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 140+4 t=R_DWARFSECREF <0>+274
aux for command-line-arguments.cmovsetm<0> SDWARFLOC size=204
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2e 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 16 00 00 00 00 00 00 00 22 00  ..............".
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 26 00 00 00 00 00 00  .........&......
	0x00b0 00 2e 00 00 00 00 00 00 00 01 00 52 00 00 00 00  ...........R....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00              ............
	rel 8+8 t=R_ADDR command-line-arguments.cmovsetm<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovsetm<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovsetm<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.cmovsetm<1>+0
aux for command-line-arguments.cmovsetm<0> SDWARFLINES size=39
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 a6 02  ................
	0x0010 14 06 03 03 32 03 7c 29 06 03 03 fa 06 41 06 03  ....2.|).....A..
	0x0020 76 79 02 01 00 01 01                             vy.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovsetm<1>+0
aux for command-line-arguments.cmovsetm<0> SDWARFFCN size=118
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 73 65 74 6d  guments.cmovsetm
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 a3 02 01 12 63 6f 6e 64 00  ...........cond.
	0x0040 00 a3 02 00 00 00 00 00 00 00 00 12 78 00 00 a3  ............x...
	0x0050 02 00 00 00 00 00 00 00 00 0d 78 30 00 a4 02 00  ..........x0....
	0x0060 00 00 00 00 00 00 00 0d 78 31 00 a4 02 00 00 00  ........x1......
	0x0070 00 00 00 00 00 00                                ......
	rel 33+8 t=R_ADDR command-line-arguments.cmovsetm<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.cmovsetm<1>+46
	rel 67+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 95+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 99+4 t=R_DWARFSECREF <0>+102
	rel 109+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 113+4 t=R_DWARFSECREF <0>+153
aux for command-line-arguments.cmovFcmp0<0> SDWARFLOC size=510
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 75 00 00 00 00 00 00 00  ........u.......
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 75 00 00 00 00  ...........u....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 75 00  ..............u.
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 0a 00 00 00 00 00 00 00 01 00 53 00 00 00 00  ...........S....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x00d0 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 75 00 00 00 00 00 00 00 01 00 50 00  ....u.........P.
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff  ................
	0x0100 ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 75 00 00 00 00 00 00 00 01  .......u........
	0x0120 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .P..............
	0x0130 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 75 00 00 00 00 00  ..........u.....
	0x0150 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00 00  ....P...........
	0x0160 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00  ................
	0x0170 00 00 00 00 00 49 00 00 00 00 00 00 00 53 00 00  .....I.......S..
	0x0180 00 00 00 00 00 01 00 52 00 00 00 00 00 00 00 00  .......R........
	0x0190 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 75 00 00 00 00 00 00 00 01 00 50 00 00 00 00 00  u.........P.....
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff  ................
	0x01d0 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 75 00 00 00 00 00 00 00 01 00 50 00 00  ...u.........P..
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00        ..............
	rel 8+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 212+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 263+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 314+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 365+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 416+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 467+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
aux for command-line-arguments.cmovFcmp0<0> SDWARFLINES size=72
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 b7 02  ................
	0x0010 14 03 03 3c 06 2d 06 03 03 32 03 79 29 35 06 2d  ...<.-...2.y)5.-
	0x0020 06 03 03 82 06 37 06 03 05 5a 35 06 37 06 03 03  .....7...Z5.7...
	0x0030 5a 06 41 06 03 03 c8 06 2d 06 03 03 c8 06 37 06  Z.A.....-.....7.
	0x0040 03 56 79 02 01 00 01 01                          .Vy.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
aux for command-line-arguments.cmovFcmp0<0> SDWARFFCN size=200
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 46 63 6d 70  guments.cmovFcmp
	0x0020 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0030 00 00 01 9c 02 00 00 00 b7 02 01 12 73 00 00 b7  ............s...
	0x0040 02 00 00 00 00 00 00 00 00 12 74 00 00 b7 02 00  ..........t.....
	0x0050 00 00 00 00 00 00 00 12 61 00 00 b7 02 00 00 00  ........a.......
	0x0060 00 00 00 00 00 12 62 00 00 b7 02 00 00 00 00 00  ......b.........
	0x0070 00 00 00 0d 78 30 00 b8 02 00 00 00 00 00 00 00  ....x0..........
	0x0080 00 0d 78 31 00 b8 02 00 00 00 00 00 00 00 00 0d  ..x1............
	0x0090 78 32 00 b8 02 00 00 00 00 00 00 00 00 0d 78 33  x2............x3
	0x00a0 00 b8 02 00 00 00 00 00 00 00 00 0d 78 34 00 b8  ............x4..
	0x00b0 02 00 00 00 00 00 00 00 00 0d 78 35 00 b8 02 00  ..........x5....
	0x00c0 00 00 00 00 00 00 00 00                          ........
	rel 34+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmovFcmp0<1>+117
	rel 65+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 97+4 t=R_DWARFSECREF <0>+102
	rel 107+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 111+4 t=R_DWARFSECREF <0>+153
	rel 121+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 125+4 t=R_DWARFSECREF <0>+204
	rel 135+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 139+4 t=R_DWARFSECREF <0>+255
	rel 149+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 153+4 t=R_DWARFSECREF <0>+306
	rel 163+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 167+4 t=R_DWARFSECREF <0>+357
	rel 177+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 181+4 t=R_DWARFSECREF <0>+408
	rel 191+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 195+4 t=R_DWARFSECREF <0>+459
aux for command-line-arguments.cmovFcmp1<0> SDWARFLOC size=624
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 7b 00 00 00 00 00 00 00  ........{.......
	0x0020 01 00 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ..a.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 7b 00 00 00 00  ...........{....
	0x0050 00 00 00 01 00 62 00 00 00 00 00 00 00 00 00 00  .....b..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x00a0 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 0a 00 00 00 00 00 00 00 01 00 53 00 00 00 00  ...........S....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x00d0 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 22 00 00 00 00 00 00 00 01 00 50 22  ....".........P"
	0x00f0 00 00 00 00 00 00 00 7b 00 00 00 00 00 00 00 01  .......{........
	0x0100 00 52 00 00 00 00 00 00 00 00 00 00 00 00 00 00  .R..............
	0x0110 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 18 00 00 00 00 00  ................
	0x0130 00 00 01 00 50 18 00 00 00 00 00 00 00 34 00 00  ....P........4..
	0x0140 00 00 00 00 00 01 00 53 34 00 00 00 00 00 00 00  .......S4.......
	0x0150 7b 00 00 00 00 00 00 00 01 00 54 00 00 00 00 00  {.........T.....
	0x0160 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff  ................
	0x0170 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 18 00 00 00 00 00 00 00 01 00 50 18 00  .............P..
	0x0190 00 00 00 00 00 00 4b 00 00 00 00 00 00 00 01 00  ......K.........
	0x01a0 51 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  Q...............
	0x01b0 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x01c0 00 4f 00 00 00 00 00 00 00 59 00 00 00 00 00 00  .O.......Y......
	0x01d0 00 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00  ...P............
	0x01e0 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 18 00 00 00  ................
	0x0200 00 00 00 00 01 00 50 64 00 00 00 00 00 00 00 7b  ......Pd.......{
	0x0210 00 00 00 00 00 00 00 01 00 53 00 00 00 00 00 00  .........S......
	0x0220 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x0230 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 00 18 00 00 00 00 00 00 00 01 00 50 73 00 00  ............Ps..
	0x0250 00 00 00 00 00 7b 00 00 00 00 00 00 00 01 00 50  .....{.........P
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 8+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 161+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 212+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 282+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 371+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 441+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 492+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 562+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
aux for command-line-arguments.cmovFcmp1<0> SDWARFLINES size=72
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e9 02  ................
	0x0010 14 03 03 3c 06 2d 06 03 03 32 03 7b 29 35 06 2d  ...<.-...2.{)5.-
	0x0020 06 03 03 82 06 2d 06 03 05 82 35 06 2d 06 03 03  .....-....5.-...
	0x0030 82 06 55 06 03 03 b4 06 2d 06 03 03 c8 06 37 06  ..U.....-.....7.
	0x0040 03 56 79 02 01 00 01 01                          .Vy.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
aux for command-line-arguments.cmovFcmp1<0> SDWARFFCN size=200
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 46 63 6d 70  guments.cmovFcmp
	0x0020 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  1...............
	0x0030 00 00 01 9c 02 00 00 00 eb 02 01 12 73 00 00 eb  ............s...
	0x0040 02 00 00 00 00 00 00 00 00 12 74 00 00 eb 02 00  ..........t.....
	0x0050 00 00 00 00 00 00 00 12 61 00 00 eb 02 00 00 00  ........a.......
	0x0060 00 00 00 00 00 12 62 00 00 eb 02 00 00 00 00 00  ......b.........
	0x0070 00 00 00 0d 78 30 00 ec 02 00 00 00 00 00 00 00  ....x0..........
	0x0080 00 0d 78 31 00 ec 02 00 00 00 00 00 00 00 00 0d  ..x1............
	0x0090 78 32 00 ec 02 00 00 00 00 00 00 00 00 0d 78 33  x2............x3
	0x00a0 00 ec 02 00 00 00 00 00 00 00 00 0d 78 34 00 ec  ............x4..
	0x00b0 02 00 00 00 00 00 00 00 00 0d 78 35 00 ec 02 00  ..........x5....
	0x00c0 00 00 00 00 00 00 00 00                          ........
	rel 34+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmovFcmp1<1>+123
	rel 65+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 97+4 t=R_DWARFSECREF <0>+102
	rel 107+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 111+4 t=R_DWARFSECREF <0>+153
	rel 121+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 125+4 t=R_DWARFSECREF <0>+204
	rel 135+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 139+4 t=R_DWARFSECREF <0>+274
	rel 149+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 153+4 t=R_DWARFSECREF <0>+363
	rel 163+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 167+4 t=R_DWARFSECREF <0>+433
	rel 177+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 181+4 t=R_DWARFSECREF <0>+484
	rel 191+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 195+4 t=R_DWARFSECREF <0>+554
aux for command-line-arguments.cmovzero1<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 14 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00  .....P..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovzero1<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovzero1<1>+0
aux for command-line-arguments.cmovzero1<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 9f 03  ................
	0x0010 14 06 2d 06 b5 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.cmovzero1<1>+0
aux for command-line-arguments.cmovzero1<0> SDWARFFCN size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 7a 65 72 6f  guments.cmovzero
	0x0020 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  1...............
	0x0030 00 00 01 9c 02 00 00 00 9f 03 01 12 63 00 00 9f  ............c...
	0x0040 03 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 9f  ..........~r0...
	0x0050 03 00 00 00 00 00 0d 78 00 a0 03 00 00 00 00 00  .......x........
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.cmovzero1<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmovzero1<1>+21
	rel 65+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 91+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 95+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.cmovzero2<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 14 00 00 00 00 00 00 00 15 00 00 00 00  ................
	0x0050 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00  .....P..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.cmovzero2<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovzero2<1>+0
aux for command-line-arguments.cmovzero2<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 a8 03  ................
	0x0010 14 06 2d 06 b5 02 01 00 01 01                    ..-.......
	rel 3+8 t=R_ADDR command-line-arguments.cmovzero2<1>+0
aux for command-line-arguments.cmovzero2<0> SDWARFFCN size=100
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 7a 65 72 6f  guments.cmovzero
	0x0020 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  2...............
	0x0030 00 00 01 9c 02 00 00 00 a8 03 01 12 63 00 00 a8  ............c...
	0x0040 03 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 a8  ..........~r0...
	0x0050 03 00 00 00 00 00 0d 78 00 a9 03 00 00 00 00 00  .......x........
	0x0060 00 00 00 00                                      ....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 34+8 t=R_ADDR command-line-arguments.cmovzero2<1>+0
	rel 42+8 t=R_ADDR command-line-arguments.cmovzero2<1>+21
	rel 65+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 91+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 95+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.cmovzeroreg0<0> SDWARFLOC size=172
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0f 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 0f 00 00 00 00 00 00  ........P.......
	0x0090 00 10 00 00 00 00 00 00 00 01 00 52 00 00 00 00  ...........R....
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00              ............
	rel 8+8 t=R_ADDR command-line-arguments.cmovzeroreg0<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovzeroreg0<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovzeroreg0<1>+0
aux for command-line-arguments.cmovzeroreg0<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 b1 03  ................
	0x0010 14 06 31 06 83 02 01 00 01 01                    ..1.......
	rel 3+8 t=R_ADDR command-line-arguments.cmovzeroreg0<1>+0
aux for command-line-arguments.cmovzeroreg0<0> SDWARFFCN size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 7a 65 72 6f  guments.cmovzero
	0x0020 72 65 67 30 00 00 00 00 00 00 00 00 00 00 00 00  reg0............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 b5 03 01 12 61  ...............a
	0x0040 00 00 b5 03 00 00 00 00 00 00 00 00 12 62 00 00  .............b..
	0x0050 b5 03 00 00 00 00 00 00 00 00 11 7e 72 30 00 01  ...........~r0..
	0x0060 b5 03 00 00 00 00 00 0d 78 00 b6 03 00 00 00 00  ........x.......
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.cmovzeroreg0<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.cmovzeroreg0<1>+16
	rel 68+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 72+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 86+4 t=R_DWARFSECREF <0>+51
	rel 98+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 108+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 112+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.cmovzeroreg1<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.cmovzeroreg1<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.cmovzeroreg1<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.cmovzeroreg1<1>+0
aux for command-line-arguments.cmovzeroreg1<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ba 03  ................
	0x0010 14 06 31 06 65 02 01 00 01 01                    ..1.e.....
	rel 3+8 t=R_ADDR command-line-arguments.cmovzeroreg1<1>+0
aux for command-line-arguments.cmovzeroreg1<0> SDWARFFCN size=117
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6d 6f 76 7a 65 72 6f  guments.cmovzero
	0x0020 72 65 67 31 00 00 00 00 00 00 00 00 00 00 00 00  reg1............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 be 03 01 12 61  ...............a
	0x0040 00 00 be 03 00 00 00 00 00 00 00 00 12 62 00 00  .............b..
	0x0050 be 03 00 00 00 00 00 00 00 00 11 7e 72 30 00 01  ...........~r0..
	0x0060 be 03 00 00 00 00 00 0d 78 00 bf 03 00 00 00 00  ........x.......
	0x0070 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.cmovzeroreg1<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.cmovzeroreg1<1>+13
	rel 68+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 72+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 86+4 t=R_DWARFSECREF <0>+51
	rel 98+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 108+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 112+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.gsink<0> SDWARFVAR size=45
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 67 73 69 6e 6b 00 09 03  guments.gsink...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01           .............
	rel 32+8 t=R_ADDR command-line-arguments.gsink<0>+0
	rel 40+4 t=R_DWARFSECREF go:info.int64<0>+0
aux for command-line-arguments.gusink<0> SDWARFVAR size=46
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 67 75 73 69 6e 6b 00 09  guments.gusink..
	0x0020 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 33+8 t=R_ADDR command-line-arguments.gusink<0>+0
	rel 41+4 t=R_DWARFSECREF go:info.uint64<0>+0
aux for command-line-arguments.r0<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 30 00 09 03 00 00 00  guments.r0......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r0<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.r1<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 31 00 09 03 00 00 00  guments.r1......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r1<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.r2<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 32 00 09 03 00 00 00  guments.r2......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r2<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.r3<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 33 00 09 03 00 00 00  guments.r3......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r3<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.r4<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 34 00 09 03 00 00 00  guments.r4......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r4<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.r5<0> SDWARFVAR size=42
	0x0000 0a 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 72 35 00 09 03 00 00 00  guments.r5......
	0x0020 00 00 00 00 00 00 00 00 00 01                    ..........
	rel 29+8 t=R_ADDR command-line-arguments.r5<0>+0
	rel 37+4 t=R_DWARFSECREF go:info.int<0>+0
