# command-line-arguments
command-line-arguments.f<1> STEXT nosplit size=55 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	TEXT	command-line-arguments.f(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	MOVQ	AX, command-line-arguments.x+8(FP)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	FUNCDATA	$5, command-line-arguments.f.arginfo1(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	FUNCDATA	$6, command-line-arguments.f.argliveinfo(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:12)	PCDATA	$3, $1
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:15)	TESTQ	BX, BX
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:15)	JEQ	47
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	CMPQ	BX, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	JNE	39
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	CMPB	(AX), $49
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	JEQ	31
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	CMPB	(AX), $50
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	JEQ	31
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	CMPB	(AX), $51
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:17)	JNE	39
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:18)	MOVQ	$-2, AX
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:18)	RET
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:20)	MOVQ	$-3, AX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:20)	RET
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:16)	MOVQ	$-1, AX
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:16)	RET
	0x0000 48 89 44 24 08 48 85 db 74 25 48 83 fb 01 75 17  H.D$.H..t%H...u.
	0x0010 80 38 31 74 0a 80 38 32 74 05 80 38 33 75 08 48  .81t..82t..83u.H
	0x0020 c7 c0 fe ff ff ff c3 48 c7 c0 fd ff ff ff c3 48  .......H.......H
	0x0030 c7 c0 ff ff ff ff c3                             .......
command-line-arguments.square<1> STEXT nosplit size=74 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:25)	TEXT	command-line-arguments.square(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:25)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:25)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:25)	FUNCDATA	$5, command-line-arguments.square.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:25)	FUNCDATA	$6, command-line-arguments.square.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:25)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:28)	LEAQ	-1(AX), CX
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:28)	CMPQ	CX, $7
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:28)	JHI	69
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:28)	LEAQ	command-line-arguments.square.jump3(SB), AX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:28)	JMP	(AX)(CX*8)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:30)	MOVL	$1, AX
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:30)	RET
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:32)	MOVL	$4, AX
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:32)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:32)	RET
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:34)	MOVL	$9, AX
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:34)	RET
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:36)	MOVL	$16, AX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:36)	RET
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:38)	MOVL	$25, AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:38)	RET
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:40)	MOVL	$36, AX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:40)	RET
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:42)	MOVL	$49, AX
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:42)	RET
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:44)	MOVL	$64, AX
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:44)	RET
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:46)	IMULQ	AX, AX
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:46)	RET
	0x0000 48 8d 48 ff 48 83 f9 07 77 3b 48 8d 05 00 00 00  H.H.H...w;H.....
	0x0010 00 ff 24 c8 b8 01 00 00 00 c3 b8 04 00 00 00 90  ..$.............
	0x0020 c3 b8 09 00 00 00 c3 b8 10 00 00 00 c3 b8 19 00  ................
	0x0030 00 00 c3 b8 24 00 00 00 c3 b8 31 00 00 00 c3 b8  ....$.....1.....
	0x0040 40 00 00 00 c3 48 0f af c0 c3                    @....H....
	rel 13+4 t=R_PCREL command-line-arguments.square.jump3<0>+0
command-line-arguments.length<1> STEXT nosplit size=189 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	TEXT	command-line-arguments.length(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	MOVQ	AX, command-line-arguments.x+8(FP)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	FUNCDATA	$5, command-line-arguments.length.arginfo1(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	FUNCDATA	$6, command-line-arguments.length.argliveinfo(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:51)	PCDATA	$3, $1
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:54)	LEAQ	-1(BX), CX
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:54)	CMPQ	CX, $7
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:54)	JHI	185
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:54)	LEAQ	command-line-arguments.length.jump122(SB), DX
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:54)	JMP	(DX)(CX*8)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:55)	CMPB	(AX), $97
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:55)	JNE	185
	0x0026 00038 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:56)	MOVL	$1, AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:56)	RET
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:57)	CMPW	(AX), $25186
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:57)	JNE	185
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:58)	MOVL	$2, AX
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:58)	RET
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:59)	CMPW	(AX), $25443
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:59)	JNE	185
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:59)	CMPB	2(AX), $99
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:59)	JNE	185
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:60)	MOVL	$3, AX
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:60)	RET
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:61)	CMPL	(AX), $1684300900
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:61)	JNE	185
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:62)	MOVL	$4, AX
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:62)	RET
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:63)	CMPL	(AX), $1701143909
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:63)	JNE	185
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:63)	CMPB	4(AX), $101
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:63)	JNE	185
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:64)	MOVL	$5, AX
	0x0071 00113 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:64)	RET
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:65)	CMPL	(AX), $1717986918
	0x0078 00120 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:65)	JNE	185
	0x007a 00122 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:65)	CMPW	4(AX), $26214
	0x0080 00128 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:65)	JNE	185
	0x0082 00130 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:66)	MOVL	$6, AX
	0x0087 00135 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:66)	RET
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:67)	CMPL	(AX), $1734829927
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:67)	JNE	185
	0x0090 00144 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:67)	CMPW	4(AX), $26471
	0x0096 00150 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:67)	JNE	185
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:67)	CMPB	6(AX), $103
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:67)	JNE	185
	0x009e 00158 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:68)	MOVL	$7, AX
	0x00a3 00163 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:68)	RET
	0x00a4 00164 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:69)	MOVQ	$7523377975159973992, CX
	0x00ae 00174 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:69)	CMPQ	(AX), CX
	0x00b1 00177 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:69)	JNE	185
	0x00b3 00179 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:70)	MOVL	$8, AX
	0x00b8 00184 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:70)	RET
	0x00b9 00185 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:72)	MOVQ	BX, AX
	0x00bc 00188 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:72)	RET
	0x0000 48 89 44 24 08 48 8d 4b ff 48 83 f9 07 0f 87 a6  H.D$.H.K.H......
	0x0010 00 00 00 48 8d 15 00 00 00 00 ff 24 ca 80 38 61  ...H.......$..8a
	0x0020 0f 85 93 00 00 00 b8 01 00 00 00 c3 66 81 38 62  ............f.8b
	0x0030 62 0f 85 82 00 00 00 b8 02 00 00 00 c3 66 81 38  b............f.8
	0x0040 63 63 75 75 80 78 02 63 75 6f b8 03 00 00 00 c3  ccuu.x.cuo......
	0x0050 81 38 64 64 64 64 75 61 b8 04 00 00 00 c3 81 38  .8ddddua.......8
	0x0060 65 65 65 65 75 53 80 78 04 65 75 4d b8 05 00 00  eeeeuS.x.euM....
	0x0070 00 c3 81 38 66 66 66 66 75 3f 66 81 78 04 66 66  ...8ffffu?f.x.ff
	0x0080 75 37 b8 06 00 00 00 c3 81 38 67 67 67 67 75 29  u7.......8ggggu)
	0x0090 66 81 78 04 67 67 75 21 80 78 06 67 75 1b b8 07  f.x.ggu!.x.gu...
	0x00a0 00 00 00 c3 48 b9 68 68 68 68 68 68 68 68 48 39  ....H.hhhhhhhhH9
	0x00b0 08 75 06 b8 08 00 00 00 c3 48 89 d8 c3           .u.......H...
	rel 22+4 t=R_PCREL command-line-arguments.length.jump122<0>+0
command-line-arguments.mimetype<1> STEXT nosplit size=107 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	TEXT	command-line-arguments.mimetype(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	MOVQ	AX, command-line-arguments.ext+8(FP)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	FUNCDATA	$5, command-line-arguments.mimetype.arginfo1(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	FUNCDATA	$6, command-line-arguments.mimetype.argliveinfo(SB)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:78)	PCDATA	$3, $1
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:88)	CMPQ	BX, $4
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:88)	JNE	102
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:81)	CMPB	1(AX), $104
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:88)	JGT	60
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:88)	CMPL	(AX), $1953457454
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:88)	JEQ	47
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:84)	CMPL	(AX), $1836345390
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:84)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:84)	JNE	102
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:85)	LEAQ	go:string."A"(SB), AX
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:85)	MOVL	$1, BX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:85)	RET
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:89)	LEAQ	go:string."B"(SB), AX
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:89)	MOVL	$1, BX
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:89)	RET
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:92)	CMPL	(AX), $1735815982
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:92)	JEQ	89
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:96)	CMPL	(AX), $1718907950
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:96)	JNE	102
	0x004c 00076 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:97)	LEAQ	go:string."D"(SB), AX
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:97)	MOVL	$1, BX
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:97)	RET
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:93)	LEAQ	go:string."C"(SB), AX
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:93)	MOVL	$1, BX
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:93)	RET
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:99)	XORL	AX, AX
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:99)	XORL	BX, BX
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:99)	RET
	0x0000 48 89 44 24 08 48 83 fb 04 75 5b 80 78 01 68 7f  H.D$.H...u[.x.h.
	0x0010 2b 81 38 2e 65 6f 74 74 16 81 38 2e 68 74 6d 90  +.8.eott..8.htm.
	0x0020 75 44 48 8d 05 00 00 00 00 bb 01 00 00 00 c3 48  uDH............H
	0x0030 8d 05 00 00 00 00 bb 01 00 00 00 c3 81 38 2e 73  .............8.s
	0x0040 76 67 74 15 81 38 2e 74 74 66 75 1a 48 8d 05 00  vgt..8.ttfu.H...
	0x0050 00 00 00 bb 01 00 00 00 c3 48 8d 05 00 00 00 00  .........H......
	0x0060 bb 01 00 00 00 c3 31 c0 31 db c3                 ......1.1..
	rel 37+4 t=R_PCREL go:string."A"<0>+0
	rel 50+4 t=R_PCREL go:string."B"<0>+0
	rel 79+4 t=R_PCREL go:string."D"<0>+0
	rel 92+4 t=R_PCREL go:string."C"<0>+0
command-line-arguments.typeSwitch<1> STEXT nosplit size=131 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	TEXT	command-line-arguments.typeSwitch(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	MOVQ	AX, command-line-arguments.x+8(FP)
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	MOVQ	BX, command-line-arguments.x+16(FP)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	FUNCDATA	$5, command-line-arguments.typeSwitch.arginfo1(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	FUNCDATA	$6, command-line-arguments.typeSwitch.argliveinfo(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:104)	PCDATA	$3, $1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	TESTQ	AX, AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	JEQ	125
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	MOVL	16(AX), CX
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	SHRL	$4, CX
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	ANDL	$7, CX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	LEAQ	command-line-arguments.typeSwitch.jump5(SB), DX
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:107)	JMP	(DX)(CX*8)
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:108)	LEAQ	type:int(SB), CX
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:108)	CMPQ	AX, CX
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:108)	JNE	125
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:109)	XORL	AX, AX
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:109)	RET
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:110)	LEAQ	type:int8(SB), CX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:110)	CMPQ	AX, CX
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:110)	JNE	125
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:111)	MOVL	$1, AX
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:111)	RET
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:116)	LEAQ	type:int64(SB), CX
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:116)	CMPQ	AX, CX
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:116)	JNE	125
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:117)	MOVL	$4, AX
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:117)	RET
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:112)	LEAQ	type:int16(SB), CX
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:112)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:112)	CMPQ	AX, CX
	0x0063 00099 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:112)	JNE	125
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:113)	MOVL	$2, AX
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:113)	RET
	0x006b 00107 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:114)	LEAQ	type:int32(SB), CX
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:114)	CMPQ	AX, CX
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:114)	JNE	125
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:115)	MOVL	$3, AX
	0x007c 00124 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:115)	RET
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:119)	MOVL	$7, AX
	0x0082 00130 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:119)	RET
	0x0000 48 89 44 24 08 48 89 5c 24 10 48 85 c0 74 6e 8b  H.D$.H.\$.H..tn.
	0x0010 48 10 c1 e9 04 83 e1 07 48 8d 15 00 00 00 00 90  H.......H.......
	0x0020 ff 24 ca 48 8d 0d 00 00 00 00 48 39 c8 75 4e 31  .$.H......H9.uN1
	0x0030 c0 c3 48 8d 0d 00 00 00 00 48 39 c8 75 3f b8 01  ..H......H9.u?..
	0x0040 00 00 00 c3 48 8d 0d 00 00 00 00 48 39 c8 75 2d  ....H......H9.u-
	0x0050 b8 04 00 00 00 c3 48 8d 0d 00 00 00 00 0f 1f 00  ......H.........
	0x0060 48 39 c8 75 18 b8 02 00 00 00 c3 48 8d 0d 00 00  H9.u.......H....
	0x0070 00 00 48 39 c8 75 06 b8 03 00 00 00 c3 b8 07 00  ..H9.u..........
	0x0080 00 00 c3                                         ...
	rel 27+4 t=R_PCREL command-line-arguments.typeSwitch.jump5<0>+0
	rel 38+4 t=R_PCREL type:int<0>+0
	rel 53+4 t=R_PCREL type:int8<0>+0
	rel 71+4 t=R_PCREL type:int64<0>+0
	rel 89+4 t=R_PCREL type:int16<0>+0
	rel 110+4 t=R_PCREL type:int32<0>+0
command-line-arguments.interfaceSwitch<1> STEXT size=180 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	TEXT	command-line-arguments.interfaceSwitch(SB), ABIInternal, $40-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	JLS	147
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PCDATA	$0, $-1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PUSHQ	BP
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	SP, BP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	SUBQ	$32, SP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	AX, command-line-arguments.x+48(FP)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	BX, command-line-arguments.x+56(FP)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	FUNCDATA	$5, command-line-arguments.interfaceSwitch.arginfo1(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	FUNCDATA	$6, command-line-arguments.interfaceSwitch.argliveinfo(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PCDATA	$3, $1
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	TESTQ	AX, AX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JEQ	52
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVL	16(AX), CX
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVQ	command-line-arguments..interfaceSwitch.0(SB), DX
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVQ	(DX), SI
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JMP	63
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:146)	MOVL	$3, AX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:146)	ADDQ	$32, SP
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:146)	POPQ	BP
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:146)	RET
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVQ	CX, DI
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	ANDQ	SI, CX
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	LEAQ	(CX)(CX*2), CX
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVQ	8(DX)(CX*8), R8
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	CMPQ	AX, R8
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JEQ	109
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	LEAQ	1(DI), CX
	0x0057 00087 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	TESTQ	R8, R8
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JNE	63
	0x005c 00092 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVQ	AX, BX
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	LEAQ	command-line-arguments..interfaceSwitch.0(SB), AX
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	PCDATA	$1, $1
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	CALL	runtime.interfaceSwitch(SB)
	0x006b 00107 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JMP	114
	0x006d 00109 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	MOVQ	16(DX)(CX*8), AX
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	TESTQ	AX, AX
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JEQ	136
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	CMPQ	AX, $1
	0x007b 00123 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:140)	JNE	52
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:144)	MOVL	$2, AX
	0x0082 00130 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:144)	ADDQ	$32, SP
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:144)	POPQ	BP
	0x0087 00135 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:144)	RET
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:142)	MOVL	$1, AX
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:142)	ADDQ	$32, SP
	0x0091 00145 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:142)	POPQ	BP
	0x0092 00146 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:142)	RET
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:142)	NOP
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PCDATA	$1, $-1
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PCDATA	$0, $-2
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	AX, 8(SP)
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	BX, 16(SP)
	0x009d 00157 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	NOP
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	CALL	runtime.morestack_noctxt(SB)
	0x00a5 00165 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	PCDATA	$0, $-1
	0x00a5 00165 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	8(SP), AX
	0x00aa 00170 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	MOVQ	16(SP), BX
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:137)	JMP	0
	0x0000 49 3b 66 10 0f 86 89 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 20 48 89 44 24 30 48 89 5c 24 38 0f 1f 40 00  . H.D$0H.\$8..@.
	0x0020 48 85 c0 74 0f 8b 48 10 48 8b 15 00 00 00 00 48  H..t..H.H......H
	0x0030 8b 32 eb 0b b8 03 00 00 00 48 83 c4 20 5d c3 48  .2.......H.. ].H
	0x0040 89 cf 48 21 f1 48 8d 0c 49 4c 8b 44 ca 08 4c 39  ..H!.H..IL.D..L9
	0x0050 c0 74 1a 48 8d 4f 01 4d 85 c0 75 e3 48 89 c3 48  .t.H.O.M..u.H..H
	0x0060 8d 05 00 00 00 00 e8 00 00 00 00 eb 05 48 8b 44  .............H.D
	0x0070 ca 10 48 85 c0 74 11 48 83 f8 01 75 b7 b8 02 00  ..H..t.H...u....
	0x0080 00 00 48 83 c4 20 5d c3 b8 01 00 00 00 48 83 c4  ..H.. ]......H..
	0x0090 20 5d c3 48 89 44 24 08 48 89 5c 24 10 0f 1f 00   ].H.D$.H.\$....
	0x00a0 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 e9  .....H.D$.H.\$..
	0x00b0 4c ff ff ff                                      L...
	rel 43+4 t=R_PCREL command-line-arguments..interfaceSwitch.0<0>+0
	rel 98+4 t=R_PCREL command-line-arguments..interfaceSwitch.0<0>+0
	rel 103+4 t=R_CALL runtime.interfaceSwitch<1>+0
	rel 161+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.interfaceSwitch2<1> STEXT size=186 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	TEXT	command-line-arguments.interfaceSwitch2(SB), ABIInternal, $40-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	JLS	156
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PCDATA	$0, $-1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PUSHQ	BP
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	SP, BP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	SUBQ	$32, SP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	AX, command-line-arguments.x+48(FP)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	BX, command-line-arguments.x+56(FP)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	FUNCDATA	$5, command-line-arguments.interfaceSwitch2.arginfo1(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	FUNCDATA	$6, command-line-arguments.interfaceSwitch2.argliveinfo(SB)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PCDATA	$3, $1
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	TESTQ	AX, AX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JEQ	56
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVQ	8(AX), BX
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVL	16(AX), CX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVQ	command-line-arguments..interfaceSwitch.1(SB), DX
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVQ	(DX), SI
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JMP	67
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:159)	MOVL	$3, AX
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:159)	ADDQ	$32, SP
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:159)	POPQ	BP
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:159)	RET
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVQ	CX, DI
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	ANDQ	SI, CX
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	LEAQ	(CX)(CX*2), CX
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVQ	8(DX)(CX*8), R8
	0x0052 00082 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	CMPQ	R8, BX
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JEQ	115
	0x0057 00087 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	LEAQ	1(DI), CX
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	TESTQ	R8, R8
	0x0063 00099 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JNE	67
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	LEAQ	command-line-arguments..interfaceSwitch.1(SB), AX
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	PCDATA	$1, $1
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	CALL	runtime.interfaceSwitch(SB)
	0x0071 00113 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JMP	120
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	MOVQ	16(DX)(CX*8), AX
	0x0078 00120 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	TESTQ	AX, AX
	0x007b 00123 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JEQ	145
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	NOP
	0x0080 00128 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	CMPQ	AX, $1
	0x0084 00132 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:153)	JNE	56
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:157)	MOVL	$2, AX
	0x008b 00139 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:157)	ADDQ	$32, SP
	0x008f 00143 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:157)	POPQ	BP
	0x0090 00144 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:157)	RET
	0x0091 00145 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:155)	MOVL	$1, AX
	0x0096 00150 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:155)	ADDQ	$32, SP
	0x009a 00154 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:155)	POPQ	BP
	0x009b 00155 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:155)	RET
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:155)	NOP
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PCDATA	$1, $-1
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PCDATA	$0, $-2
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	AX, 8(SP)
	0x00a1 00161 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	BX, 16(SP)
	0x00a6 00166 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	CALL	runtime.morestack_noctxt(SB)
	0x00ab 00171 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	PCDATA	$0, $-1
	0x00ab 00171 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	8(SP), AX
	0x00b0 00176 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	MOVQ	16(SP), BX
	0x00b5 00181 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:150)	JMP	0
	0x0000 49 3b 66 10 0f 86 92 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 20 48 89 44 24 30 48 89 5c 24 38 0f 1f 40 00  . H.D$0H.\$8..@.
	0x0020 48 85 c0 74 13 48 8b 58 08 8b 48 10 48 8b 15 00  H..t.H.X..H.H...
	0x0030 00 00 00 48 8b 32 eb 0b b8 03 00 00 00 48 83 c4  ...H.2.......H..
	0x0040 20 5d c3 48 89 cf 48 21 f1 48 8d 0c 49 4c 8b 44   ].H..H!.H..IL.D
	0x0050 ca 08 49 39 d8 74 1c 48 8d 4f 01 0f 1f 44 00 00  ..I9.t.H.O...D..
	0x0060 4d 85 c0 75 de 48 8d 05 00 00 00 00 e8 00 00 00  M..u.H..........
	0x0070 00 eb 05 48 8b 44 ca 10 48 85 c0 74 14 0f 1f 00  ...H.D..H..t....
	0x0080 48 83 f8 01 75 b2 b8 02 00 00 00 48 83 c4 20 5d  H...u......H.. ]
	0x0090 c3 b8 01 00 00 00 48 83 c4 20 5d c3 48 89 44 24  ......H.. ].H.D$
	0x00a0 08 48 89 5c 24 10 e8 00 00 00 00 48 8b 44 24 08  .H.\$......H.D$.
	0x00b0 48 8b 5c 24 10 e9 46 ff ff ff                    H.\$..F...
	rel 47+4 t=R_PCREL command-line-arguments..interfaceSwitch.1<0>+0
	rel 104+4 t=R_PCREL command-line-arguments..interfaceSwitch.1<0>+0
	rel 109+4 t=R_CALL runtime.interfaceSwitch<1>+0
	rel 167+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.interfaceCast<1> STEXT size=155 args=0x10 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	TEXT	command-line-arguments.interfaceCast(SB), ABIInternal, $32-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	JLS	125
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	AX, command-line-arguments.x+40(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	BX, command-line-arguments.x+48(FP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	FUNCDATA	$5, command-line-arguments.interfaceCast.arginfo1(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	FUNCDATA	$6, command-line-arguments.interfaceCast.argliveinfo(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PCDATA	$3, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	TESTQ	AX, AX
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JEQ	44
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVQ	command-line-arguments..typeAssert.0(SB), CX
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVQ	(CX), DX
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVL	16(AX), SI
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JMP	71
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	TESTQ	AX, AX
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JEQ	60
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:167)	MOVL	$3, AX
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:167)	ADDQ	$24, SP
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:167)	POPQ	BP
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:167)	RET
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:169)	MOVL	$5, AX
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:169)	ADDQ	$24, SP
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:169)	POPQ	BP
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:169)	RET
	0x0047 00071 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVQ	SI, DI
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	ANDQ	DX, SI
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	SHLQ	$4, SI
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVQ	8(SI)(CX*1), R8
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	CMPQ	AX, R8
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JEQ	118
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	LEAQ	1(DI), SI
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	TESTQ	R8, R8
	0x0063 00099 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JNE	71
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVQ	AX, BX
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	LEAQ	command-line-arguments..typeAssert.0(SB), AX
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	PCDATA	$1, $1
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	CALL	runtime.typeAssert(SB)
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JMP	44
	0x0076 00118 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	MOVQ	16(SI)(CX*1), AX
	0x007b 00123 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	JMP	44
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:166)	NOP
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PCDATA	$1, $-1
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PCDATA	$0, $-2
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	AX, 8(SP)
	0x0082 00130 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	BX, 16(SP)
	0x0087 00135 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	CALL	runtime.morestack_noctxt(SB)
	0x008c 00140 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	PCDATA	$0, $-1
	0x008c 00140 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	8(SP), AX
	0x0091 00145 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	MOVQ	16(SP), BX
	0x0096 00150 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:163)	JMP	0
	0x0000 49 3b 66 10 76 77 55 48 89 e5 48 83 ec 18 48 89  I;f.vwUH..H...H.
	0x0010 44 24 28 48 89 5c 24 30 48 85 c0 74 0f 48 8b 0d  D$(H.\$0H..t.H..
	0x0020 00 00 00 00 48 8b 11 8b 70 10 eb 1b 48 85 c0 74  ....H...p...H..t
	0x0030 0b b8 03 00 00 00 48 83 c4 18 5d c3 b8 05 00 00  ......H...].....
	0x0040 00 48 83 c4 18 5d c3 48 89 f7 48 21 d6 48 c1 e6  .H...].H..H!.H..
	0x0050 04 4c 8b 44 0e 08 4c 39 c0 74 1b 48 8d 77 01 90  .L.D..L9.t.H.w..
	0x0060 4d 85 c0 75 e2 48 89 c3 48 8d 05 00 00 00 00 e8  M..u.H..H.......
	0x0070 00 00 00 00 eb b6 48 8b 44 0e 10 eb af 48 89 44  ......H.D....H.D
	0x0080 24 08 48 89 5c 24 10 e8 00 00 00 00 48 8b 44 24  $.H.\$......H.D$
	0x0090 08 48 8b 5c 24 10 e9 65 ff ff ff                 .H.\$..e...
	rel 32+4 t=R_PCREL command-line-arguments..typeAssert.0<0>+0
	rel 107+4 t=R_PCREL command-line-arguments..typeAssert.0<0>+0
	rel 112+4 t=R_CALL runtime.typeAssert<1>+0
	rel 136+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.interfaceCast2<1> STEXT size=165 args=0x10 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	TEXT	command-line-arguments.interfaceCast2(SB), ABIInternal, $32-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	JLS	131
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	AX, command-line-arguments.x+40(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	BX, command-line-arguments.x+48(FP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	FUNCDATA	$5, command-line-arguments.interfaceCast2.arginfo1(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	FUNCDATA	$6, command-line-arguments.interfaceCast2.argliveinfo(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PCDATA	$3, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	TESTQ	AX, AX
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JEQ	48
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVQ	8(AX), BX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVQ	command-line-arguments..typeAssert.1(SB), CX
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVQ	(CX), DX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVL	16(AX), SI
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JMP	76
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	TESTQ	AX, AX
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JEQ	65
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:176)	MOVL	$3, AX
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:176)	ADDQ	$24, SP
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:176)	POPQ	BP
	0x003f 00063 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:176)	NOP
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:176)	RET
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:178)	MOVL	$5, AX
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:178)	ADDQ	$24, SP
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:178)	POPQ	BP
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:178)	RET
	0x004c 00076 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVQ	SI, DI
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	ANDQ	DX, SI
	0x0052 00082 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	SHLQ	$4, SI
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVQ	8(SI)(CX*1), R8
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	CMPQ	R8, BX
	0x0063 00099 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JEQ	124
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	LEAQ	1(DI), SI
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	TESTQ	R8, R8
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JNE	76
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	LEAQ	command-line-arguments..typeAssert.1(SB), AX
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	PCDATA	$1, $1
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	CALL	runtime.typeAssert(SB)
	0x007a 00122 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JMP	48
	0x007c 00124 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	MOVQ	16(SI)(CX*1), AX
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	JMP	48
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:175)	NOP
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PCDATA	$1, $-1
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PCDATA	$0, $-2
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	AX, 8(SP)
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	BX, 16(SP)
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	CALL	runtime.morestack_noctxt(SB)
	0x0092 00146 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	PCDATA	$0, $-1
	0x0092 00146 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	8(SP), AX
	0x0097 00151 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	MOVQ	16(SP), BX
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	NOP
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:172)	JMP	0
	0x0000 49 3b 66 10 76 7d 55 48 89 e5 48 83 ec 18 48 89  I;f.v}UH..H...H.
	0x0010 44 24 28 48 89 5c 24 30 48 85 c0 74 13 48 8b 58  D$(H.\$0H..t.H.X
	0x0020 08 48 8b 0d 00 00 00 00 48 8b 11 8b 70 10 eb 1c  .H......H...p...
	0x0030 48 85 c0 74 0c b8 03 00 00 00 48 83 c4 18 5d 90  H..t......H...].
	0x0040 c3 b8 05 00 00 00 48 83 c4 18 5d c3 48 89 f7 48  ......H...].H..H
	0x0050 21 d6 48 c1 e6 04 4c 8b 44 0e 08 0f 1f 44 00 00  !.H...L.D....D..
	0x0060 49 39 d8 74 17 48 8d 77 01 4d 85 c0 75 de 48 8d  I9.t.H.w.M..u.H.
	0x0070 05 00 00 00 00 e8 00 00 00 00 eb b4 48 8b 44 0e  ............H.D.
	0x0080 10 eb ad 48 89 44 24 08 48 89 5c 24 10 e8 00 00  ...H.D$.H.\$....
	0x0090 00 00 48 8b 44 24 08 48 8b 5c 24 10 0f 1f 40 00  ..H.D$.H.\$...@.
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 36+4 t=R_PCREL command-line-arguments..typeAssert.1<0>+0
	rel 113+4 t=R_PCREL command-line-arguments..typeAssert.1<0>+0
	rel 118+4 t=R_CALL runtime.typeAssert<1>+0
	rel 142+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.interfaceConv<1> STEXT size=148 args=0x10 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	TEXT	command-line-arguments.interfaceConv(SB), ABIInternal, $32-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	JLS	117
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	AX, command-line-arguments.x+40(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	BX, command-line-arguments.x+48(FP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	FUNCDATA	$5, command-line-arguments.interfaceConv.arginfo1(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	FUNCDATA	$6, command-line-arguments.interfaceConv.argliveinfo(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PCDATA	$3, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	TESTQ	AX, AX
	0x001b 00027 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	JEQ	48
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	8(AX), CX
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	command-line-arguments..typeAssert.2(SB), DX
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	(DX), SI
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVL	16(AX), DI
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	JMP	54
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	ADDQ	$24, SP
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	POPQ	BP
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	RET
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	DI, R8
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	ANDQ	SI, DI
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	SHLQ	$4, DI
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	8(DI)(DX*1), R9
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	CMPQ	R9, CX
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	JEQ	110
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	LEAQ	1(R8), DI
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	TESTQ	R9, R9
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	JNE	54
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	BX, command-line-arguments.x+48(SP)
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	PCDATA	$3, $2
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	LEAQ	command-line-arguments..typeAssert.2(SB), AX
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	CX, BX
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	PCDATA	$1, $0
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	CALL	runtime.typeAssert(SB)
	0x0067 00103 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	command-line-arguments.x+48(SP), BX
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	JMP	48
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	PCDATA	$3, $1
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	MOVQ	16(DI)(DX*1), AX
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	JMP	48
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:184)	NOP
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PCDATA	$1, $-1
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PCDATA	$0, $-2
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	AX, 8(SP)
	0x007a 00122 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	BX, 16(SP)
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	NOP
	0x0080 00128 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	CALL	runtime.morestack_noctxt(SB)
	0x0085 00133 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	PCDATA	$0, $-1
	0x0085 00133 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	8(SP), AX
	0x008a 00138 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	MOVQ	16(SP), BX
	0x008f 00143 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/switch.go:181)	JMP	0
	0x0000 49 3b 66 10 76 6f 55 48 89 e5 48 83 ec 18 48 89  I;f.voUH..H...H.
	0x0010 44 24 28 48 89 5c 24 30 48 85 c0 74 13 48 8b 48  D$(H.\$0H..t.H.H
	0x0020 08 48 8b 15 00 00 00 00 48 8b 32 8b 78 10 eb 06  .H......H.2.x...
	0x0030 48 83 c4 18 5d c3 49 89 f8 48 21 f7 48 c1 e7 04  H...].I..H!.H...
	0x0040 4c 8b 4c 17 08 49 39 c9 74 24 49 8d 78 01 4d 85  L.L..I9.t$I.x.M.
	0x0050 c9 75 e3 48 89 5c 24 30 48 8d 05 00 00 00 00 48  .u.H.\$0H......H
	0x0060 89 cb e8 00 00 00 00 48 8b 5c 24 30 eb c2 48 8b  .......H.\$0..H.
	0x0070 44 17 10 eb bb 48 89 44 24 08 48 89 5c 24 10 90  D....H.D$.H.\$..
	0x0080 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 e9  .....H.D$.H.\$..
	0x0090 6c ff ff ff                                      l...
	rel 36+4 t=R_PCREL command-line-arguments..typeAssert.2<0>+0
	rel 91+4 t=R_PCREL command-line-arguments..typeAssert.2<0>+0
	rel 99+4 t=R_CALL runtime.typeAssert<1>+0
	rel 129+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.I.foo<1> STEXT dupok size=92 args=0x10 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.I.foo(SB), DUPOK|WRAPPER|ABIInternal, $16-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	48
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	75
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.~p0+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.~p0+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, command-line-arguments.I.foo.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, command-line-arguments.I.foo.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0025 00037 (<autogenerated>:1)	MOVQ	BX, AX
	0x0028 00040 (<autogenerated>:1)	PCDATA	$1, $1
	0x0028 00040 (<autogenerated>:1)	CALL	CX
	0x002a 00042 (<autogenerated>:1)	ADDQ	$8, SP
	0x002e 00046 (<autogenerated>:1)	POPQ	BP
	0x002f 00047 (<autogenerated>:1)	RET
	0x0030 00048 (<autogenerated>:1)	NOP
	0x0030 00048 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0030 00048 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0035 00053 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x003a 00058 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $-1
	0x003f 00063 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x0049 00073 (<autogenerated>:1)	JMP	0
	0x004b 00075 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0050 00080 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0054 00084 (<autogenerated>:1)	JNE	23
	0x0056 00086 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005a 00090 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 2a 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v*UH..H...M.
	0x0010 66 20 4d 85 e4 75 34 48 89 44 24 18 48 89 5c 24  f M..u4H.D$.H.\$
	0x0020 20 48 8b 48 18 48 89 d8 ff d1 48 83 c4 08 5d c3   H.H.H....H...].
	0x0030 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00 48  H.D$.H.\$......H
	0x0040 8b 44 24 08 48 8b 5c 24 10 eb b5 4c 8d 6c 24 18  .D$.H.\$...L.l$.
	0x0050 4d 39 2c 24 75 c1 49 89 24 24 eb bb              M9,$u.I.$$..
	rel 2+0 t=R_USEIFACEMETHOD type:command-line-arguments.I<0>+96
	rel 40+0 t=R_CALLIND +0
	rel 59+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.J.bar<1> STEXT dupok size=92 args=0x10 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.J.bar(SB), DUPOK|WRAPPER|ABIInternal, $16-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	48
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	75
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.~p0+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.~p0+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, command-line-arguments.J.bar.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, command-line-arguments.J.bar.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0025 00037 (<autogenerated>:1)	MOVQ	BX, AX
	0x0028 00040 (<autogenerated>:1)	PCDATA	$1, $1
	0x0028 00040 (<autogenerated>:1)	CALL	CX
	0x002a 00042 (<autogenerated>:1)	ADDQ	$8, SP
	0x002e 00046 (<autogenerated>:1)	POPQ	BP
	0x002f 00047 (<autogenerated>:1)	RET
	0x0030 00048 (<autogenerated>:1)	NOP
	0x0030 00048 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0030 00048 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0035 00053 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x003a 00058 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $-1
	0x003f 00063 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x0049 00073 (<autogenerated>:1)	JMP	0
	0x004b 00075 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0050 00080 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0054 00084 (<autogenerated>:1)	JNE	23
	0x0056 00086 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005a 00090 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 2a 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v*UH..H...M.
	0x0010 66 20 4d 85 e4 75 34 48 89 44 24 18 48 89 5c 24  f M..u4H.D$.H.\$
	0x0020 20 48 8b 48 18 48 89 d8 ff d1 48 83 c4 08 5d c3   H.H.H....H...].
	0x0030 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00 48  H.D$.H.\$......H
	0x0040 8b 44 24 08 48 8b 5c 24 10 eb b5 4c 8d 6c 24 18  .D$.H.\$...L.l$.
	0x0050 4d 39 2c 24 75 c1 49 89 24 24 eb bb              M9,$u.I.$$..
	rel 2+0 t=R_USEIFACEMETHOD type:command-line-arguments.J<0>+96
	rel 40+0 t=R_CALLIND +0
	rel 59+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.IJ.bar<1> STEXT dupok size=92 args=0x10 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.IJ.bar(SB), DUPOK|WRAPPER|ABIInternal, $16-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	48
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	75
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.~p0+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.~p0+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, command-line-arguments.IJ.bar.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, command-line-arguments.IJ.bar.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0025 00037 (<autogenerated>:1)	MOVQ	BX, AX
	0x0028 00040 (<autogenerated>:1)	PCDATA	$1, $1
	0x0028 00040 (<autogenerated>:1)	CALL	CX
	0x002a 00042 (<autogenerated>:1)	ADDQ	$8, SP
	0x002e 00046 (<autogenerated>:1)	POPQ	BP
	0x002f 00047 (<autogenerated>:1)	RET
	0x0030 00048 (<autogenerated>:1)	NOP
	0x0030 00048 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0030 00048 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0035 00053 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x003a 00058 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $-1
	0x003f 00063 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x0049 00073 (<autogenerated>:1)	JMP	0
	0x004b 00075 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0050 00080 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0054 00084 (<autogenerated>:1)	JNE	23
	0x0056 00086 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005a 00090 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 2a 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v*UH..H...M.
	0x0010 66 20 4d 85 e4 75 34 48 89 44 24 18 48 89 5c 24  f M..u4H.D$.H.\$
	0x0020 20 48 8b 48 18 48 89 d8 ff d1 48 83 c4 08 5d c3   H.H.H....H...].
	0x0030 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00 48  H.D$.H.\$......H
	0x0040 8b 44 24 08 48 8b 5c 24 10 eb b5 4c 8d 6c 24 18  .D$.H.\$...L.l$.
	0x0050 4d 39 2c 24 75 c1 49 89 24 24 eb bb              M9,$u.I.$$..
	rel 2+0 t=R_USEIFACEMETHOD type:command-line-arguments.IJ<0>+96
	rel 40+0 t=R_CALLIND +0
	rel 59+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.IJ.foo<1> STEXT dupok size=92 args=0x10 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.IJ.foo(SB), DUPOK|WRAPPER|ABIInternal, $16-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	48
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	75
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.~p0+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.~p0+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, command-line-arguments.IJ.foo.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, command-line-arguments.IJ.foo.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	32(AX), CX
	0x0025 00037 (<autogenerated>:1)	MOVQ	BX, AX
	0x0028 00040 (<autogenerated>:1)	PCDATA	$1, $1
	0x0028 00040 (<autogenerated>:1)	CALL	CX
	0x002a 00042 (<autogenerated>:1)	ADDQ	$8, SP
	0x002e 00046 (<autogenerated>:1)	POPQ	BP
	0x002f 00047 (<autogenerated>:1)	RET
	0x0030 00048 (<autogenerated>:1)	NOP
	0x0030 00048 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0030 00048 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0035 00053 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x003a 00058 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $-1
	0x003f 00063 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x0049 00073 (<autogenerated>:1)	JMP	0
	0x004b 00075 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0050 00080 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0054 00084 (<autogenerated>:1)	JNE	23
	0x0056 00086 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005a 00090 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 2a 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v*UH..H...M.
	0x0010 66 20 4d 85 e4 75 34 48 89 44 24 18 48 89 5c 24  f M..u4H.D$.H.\$
	0x0020 20 48 8b 48 20 48 89 d8 ff d1 48 83 c4 08 5d c3   H.H H....H...].
	0x0030 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00 48  H.D$.H.\$......H
	0x0040 8b 44 24 08 48 8b 5c 24 10 eb b5 4c 8d 6c 24 18  .D$.H.\$...L.l$.
	0x0050 4d 39 2c 24 75 c1 49 89 24 24 eb bb              M9,$u.I.$$..
	rel 2+0 t=R_USEIFACEMETHOD type:command-line-arguments.IJ<0>+104
	rel 40+0 t=R_CALLIND +0
	rel 59+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.K.baz<1> STEXT dupok size=92 args=0x10 locals=0x10 funcid=0x16 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	command-line-arguments.K.baz(SB), DUPOK|WRAPPER|ABIInternal, $16-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	48
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$8, SP
	0x000e 00014 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0012 00018 (<autogenerated>:1)	TESTQ	R12, R12
	0x0015 00021 (<autogenerated>:1)	JNE	75
	0x0017 00023 (<autogenerated>:1)	NOP
	0x0017 00023 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.~p0+24(FP)
	0x001c 00028 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.~p0+32(FP)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·IuErl7MOXaHVn7EZYWzfFA==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$5, command-line-arguments.K.baz.arginfo1(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$6, command-line-arguments.K.baz.argliveinfo(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$3, $1
	0x0021 00033 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0025 00037 (<autogenerated>:1)	MOVQ	BX, AX
	0x0028 00040 (<autogenerated>:1)	PCDATA	$1, $1
	0x0028 00040 (<autogenerated>:1)	CALL	CX
	0x002a 00042 (<autogenerated>:1)	ADDQ	$8, SP
	0x002e 00046 (<autogenerated>:1)	POPQ	BP
	0x002f 00047 (<autogenerated>:1)	RET
	0x0030 00048 (<autogenerated>:1)	NOP
	0x0030 00048 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0030 00048 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0035 00053 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x003a 00058 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $-1
	0x003f 00063 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x0049 00073 (<autogenerated>:1)	JMP	0
	0x004b 00075 (<autogenerated>:1)	LEAQ	24(SP), R13
	0x0050 00080 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0054 00084 (<autogenerated>:1)	JNE	23
	0x0056 00086 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x005a 00090 (<autogenerated>:1)	JMP	23
	0x0000 49 3b 66 10 76 2a 55 48 89 e5 48 83 ec 08 4d 8b  I;f.v*UH..H...M.
	0x0010 66 20 4d 85 e4 75 34 48 89 44 24 18 48 89 5c 24  f M..u4H.D$.H.\$
	0x0020 20 48 8b 48 18 48 89 d8 ff d1 48 83 c4 08 5d c3   H.H.H....H...].
	0x0030 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00 48  H.D$.H.\$......H
	0x0040 8b 44 24 08 48 8b 5c 24 10 eb b5 4c 8d 6c 24 18  .D$.H.\$...L.l$.
	0x0050 4d 39 2c 24 75 c1 49 89 24 24 eb bb              M9,$u.I.$$..
	rel 2+0 t=R_USEIFACEMETHOD type:command-line-arguments.K<0>+96
	rel 40+0 t=R_CALLIND +0
	rel 59+4 t=R_CALL runtime.morestack_noctxt<0>+0
type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1> STEXT dupok nosplit size=33 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }(SB), DUPOK|NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }.arginfo1(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }.argliveinfo(SB)
	0x0000 00000 (<autogenerated>:1)	PCDATA	$3, $1
	0x0000 00000 (<autogenerated>:1)	MOVQ	(AX), CX
	0x0003 00003 (<autogenerated>:1)	CMPQ	(BX), CX
	0x0006 00006 (<autogenerated>:1)	JNE	29
	0x0008 00008 (<autogenerated>:1)	MOVQ	8(AX), CX
	0x000c 00012 (<autogenerated>:1)	CMPQ	8(BX), CX
	0x0010 00016 (<autogenerated>:1)	JNE	29
	0x0012 00018 (<autogenerated>:1)	MOVBLZX	16(AX), CX
	0x0016 00022 (<autogenerated>:1)	CMPB	16(BX), CL
	0x0019 00025 (<autogenerated>:1)	SETEQ	AL
	0x001c 00028 (<autogenerated>:1)	RET
	0x001d 00029 (<autogenerated>:1)	XORL	AX, AX
	0x001f 00031 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	RET
	0x0000 48 8b 08 48 39 0b 75 15 48 8b 48 08 48 39 4b 08  H..H9.u.H.H.H9K.
	0x0010 75 0b 0f b6 48 10 38 4b 10 0f 94 c0 c3 31 c0 90  u...H.8K.....1..
	0x0020 c3                                               .
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
runtime.interequal·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.interequal<1>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*codegen.I.<0> SRODATA dupok size=12
	0x0000 01 0a 2a 63 6f 64 65 67 65 6e 2e 49              ..*codegen.I
type:*command-line-arguments.I<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c7 da e2 60 08 08 08 36 00 00 00 00 00 00 00 00  ...`...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.I.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.I<0>+0
runtime.gcbits.0200000000000000<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
type:.namedata.*func()-<0> SRODATA dupok size=9
	0x0000 00 07 2a 66 75 6e 63 28 29                       ..*func()
type:*func()<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 75 ac 29 27 08 08 08 36 00 00 00 00 00 00 00 00  u.)'...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func()-<0>+0
	rel 48+8 t=R_ADDR type:func()<0>+0
type:func()<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fe fa b9 80 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00                                      ....
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func()-<0>+0
	rel 44+4 t=RelocType(-32763) type:*func()<0>+0
type:.importpath.command-line-arguments.<0> SRODATA dupok size=24
	0x0000 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61  ..command-line-a
	0x0010 72 67 75 6d 65 6e 74 73                          rguments
type:.namedata.foo-<0> SRODATA dupok size=5
	0x0000 00 03 66 6f 6f                                   ..foo
type:command-line-arguments.I<0> SRODATA size=104
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 0e d1 3f af 07 08 08 14 00 00 00 00 00 00 00 00  ..?.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.interequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.I.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.I<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.I<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+4 t=R_ADDROFF type:.namedata.foo-<0>+0
	rel 100+4 t=R_ADDROFF type:func()<0>+0
type:.namedata.*codegen.IJ.<0> SRODATA dupok size=13
	0x0000 01 0b 2a 63 6f 64 65 67 65 6e 2e 49 4a           ..*codegen.IJ
type:*command-line-arguments.IJ<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ac 8b fd d5 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.IJ.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.IJ<0>+0
type:.namedata.bar-<0> SRODATA dupok size=5
	0x0000 00 03 62 61 72                                   ..bar
type:command-line-arguments.IJ<0> SRODATA size=112
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 92 10 7f 14 07 08 08 14 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=R_ADDR runtime.interequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.IJ.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.IJ<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.IJ<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+4 t=R_ADDROFF type:.namedata.bar-<0>+0
	rel 100+4 t=R_ADDROFF type:func()<0>+0
	rel 104+4 t=R_ADDROFF type:.namedata.foo-<0>+0
	rel 108+4 t=R_ADDROFF type:func()<0>+0
type:.namedata.*codegen.J.<0> SRODATA dupok size=12
	0x0000 01 0a 2a 63 6f 64 65 67 65 6e 2e 4a              ..*codegen.J
type:*command-line-arguments.J<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9d 67 1d 29 08 08 08 36 00 00 00 00 00 00 00 00  .g.)...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.J.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.J<0>+0
type:command-line-arguments.J<0> SRODATA size=104
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 31 1a 1f 58 07 08 08 14 00 00 00 00 00 00 00 00  1..X............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.interequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.J.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.J<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.J<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+4 t=R_ADDROFF type:.namedata.bar-<0>+0
	rel 100+4 t=R_ADDROFF type:func()<0>+0
type:.namedata.*codegen.K.<0> SRODATA dupok size=12
	0x0000 01 0a 2a 63 6f 64 65 67 65 6e 2e 4b              ..*codegen.K
type:*command-line-arguments.K<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 61 3c 3b c0 08 08 08 36 00 00 00 00 00 00 00 00  a<;....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.K.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.K<0>+0
type:.namedata.baz-<0> SRODATA dupok size=5
	0x0000 00 03 62 61 7a                                   ..baz
type:command-line-arguments.K<0> SRODATA size=104
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 54 e5 32 3c 07 08 08 14 00 00 00 00 00 00 00 00  T.2<............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.interequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.K.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.K<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.K<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+4 t=R_ADDROFF type:.namedata.baz-<0>+0
	rel 100+4 t=R_ADDROFF type:func()<0>+0
go:string."A"<0> SRODATA dupok size=1
	0x0000 41                                               A
go:string."B"<0> SRODATA dupok size=1
	0x0000 42                                               B
go:string."C"<0> SRODATA dupok size=1
	0x0000 43                                               C
go:string."D"<0> SRODATA dupok size=1
	0x0000 44                                               D
command-line-arguments..interfaceSwitch.0<0> SDATA size=32
	0x0000 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.emptyInterfaceSwitchCache<0>+0
	rel 16+8 t=R_ADDR type:command-line-arguments.I<0>+0
	rel 24+8 t=R_ADDR type:command-line-arguments.J<0>+0
type:.eqfunc24<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:.namedata.*struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }-<0> SRODATA dupok size=71
	0x0000 00 45 2a 73 74 72 75 63 74 20 7b 20 43 61 63 68  .E*struct { Cach
	0x0010 65 20 75 6e 73 61 66 65 2e 50 6f 69 6e 74 65 72  e unsafe.Pointer
	0x0020 3b 20 4e 43 61 73 65 73 20 69 6e 74 3b 20 43 61  ; NCases int; Ca
	0x0030 73 65 73 20 5b 31 5d 75 6e 73 61 66 65 2e 50 6f  ses [1]unsafe.Po
	0x0040 69 6e 74 65 72 20 7d                             inter }
type:*struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 69 be ff 20 08 08 08 36 00 00 00 00 00 00 00 00  i.. ...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }-<0>+0
	rel 48+8 t=R_ADDR type:struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }<0>+0
runtime.gcbits.0500000000000000<0> SRODATA dupok size=8
	0x0000 05 00 00 00 00 00 00 00                          ........
type:.namedata.*[1]unsafe.Pointer-<0> SRODATA dupok size=20
	0x0000 00 12 2a 5b 31 5d 75 6e 73 61 66 65 2e 50 6f 69  ..*[1]unsafe.Poi
	0x0010 6e 74 65 72                                      nter
type:*[1]unsafe.Pointer<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 66 d3 bb fe 08 08 08 36 00 00 00 00 00 00 00 00  f......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]unsafe.Pointer-<0>+0
	rel 48+8 t=R_ADDR type:[1]unsafe.Pointer<0>+0
type:[1]unsafe.Pointer<0> SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4d df 52 14 0a 08 08 31 00 00 00 00 00 00 00 00  M.R....1........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]unsafe.Pointer-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[1]unsafe.Pointer<0>+0
	rel 48+8 t=R_ADDR type:unsafe.Pointer<0>+0
	rel 56+8 t=R_ADDR type:[]unsafe.Pointer<0>+0
type:.namedata.Cache.<0> SRODATA dupok size=7
	0x0000 01 05 43 61 63 68 65                             ..Cache
type:.namedata.NCases.<0> SRODATA dupok size=8
	0x0000 01 06 4e 43 61 73 65 73                          ..NCases
type:.namedata.Cases.<0> SRODATA dupok size=7
	0x0000 01 05 43 61 73 65 73                             ..Cases
type:struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }<0> SRODATA dupok size=152
	0x0000 18 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0010 0d 75 8c 97 0a 08 08 19 00 00 00 00 00 00 00 00  .u..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc24<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0500000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }<0>+0
	rel 56+8 t=R_ADDR type:struct { Cache unsafe.Pointer; NCases int; Cases [1]unsafe.Pointer }<0>+80
	rel 80+8 t=R_ADDR type:.namedata.Cache.<0>+0
	rel 88+8 t=R_ADDR type:unsafe.Pointer<0>+0
	rel 104+8 t=R_ADDR type:.namedata.NCases.<0>+0
	rel 112+8 t=R_ADDR type:int<0>+0
	rel 128+8 t=R_ADDR type:.namedata.Cases.<0>+0
	rel 136+8 t=R_ADDR type:[1]unsafe.Pointer<0>+0
command-line-arguments..interfaceSwitch.1<0> SDATA size=32
	0x0000 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.emptyInterfaceSwitchCache<0>+0
	rel 16+8 t=R_ADDR type:command-line-arguments.I<0>+0
	rel 24+8 t=R_ADDR type:command-line-arguments.J<0>+0
command-line-arguments..typeAssert.0<0> SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 01                                               .
	rel 0+8 t=R_ADDR runtime.emptyTypeAssertCache<0>+0
	rel 8+8 t=R_ADDR type:command-line-arguments.I<0>+0
type:.eqfunc.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1>+0
type:.namedata.*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }-<0> SRODATA dupok size=70
	0x0000 00 44 2a 73 74 72 75 63 74 20 7b 20 43 61 63 68  .D*struct { Cach
	0x0010 65 20 75 6e 73 61 66 65 2e 50 6f 69 6e 74 65 72  e unsafe.Pointer
	0x0020 3b 20 49 6e 74 65 72 20 75 6e 73 61 66 65 2e 50  ; Inter unsafe.P
	0x0030 6f 69 6e 74 65 72 3b 20 43 61 6e 46 61 69 6c 20  ointer; CanFail 
	0x0040 62 6f 6f 6c 20 7d                                bool }
type:*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f8 45 02 db 08 08 08 36 00 00 00 00 00 00 00 00  .E.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }-<0>+0
	rel 48+8 t=R_ADDR type:struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0>+0
runtime.gcbits.0300000000000000<0> SRODATA dupok size=8
	0x0000 03 00 00 00 00 00 00 00                          ........
type:.namedata.Inter.<0> SRODATA dupok size=7
	0x0000 01 05 49 6e 74 65 72                             ..Inter
type:.namedata.CanFail.<0> SRODATA dupok size=9
	0x0000 01 07 43 61 6e 46 61 69 6c                       ..CanFail
type:struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0> SRODATA dupok size=152
	0x0000 18 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 38 88 59 31 02 08 08 19 00 00 00 00 00 00 00 00  8.Y1............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0300000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0>+0
	rel 56+8 t=R_ADDR type:struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0>+80
	rel 80+8 t=R_ADDR type:.namedata.Cache.<0>+0
	rel 88+8 t=R_ADDR type:unsafe.Pointer<0>+0
	rel 104+8 t=R_ADDR type:.namedata.Inter.<0>+0
	rel 112+8 t=R_ADDR type:unsafe.Pointer<0>+0
	rel 128+8 t=R_ADDR type:.namedata.CanFail.<0>+0
	rel 136+8 t=R_ADDR type:bool<0>+0
command-line-arguments..typeAssert.1<0> SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 01                                               .
	rel 0+8 t=R_ADDR runtime.emptyTypeAssertCache<0>+0
	rel 8+8 t=R_ADDR type:command-line-arguments.I<0>+0
command-line-arguments..typeAssert.2<0> SDATA size=24
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 01                                               .
	rel 0+8 t=R_ADDR runtime.emptyTypeAssertCache<0>+0
	rel 8+8 t=R_ADDR type:command-line-arguments.I<0>+0
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.f.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.f.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
command-line-arguments.square.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.square.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.square.jump3<0> SRODATA static size=64
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR command-line-arguments.square<1>+20
	rel 8+8 t=R_ADDR command-line-arguments.square<1>+26
	rel 16+8 t=R_ADDR command-line-arguments.square<1>+33
	rel 24+8 t=R_ADDR command-line-arguments.square<1>+39
	rel 32+8 t=R_ADDR command-line-arguments.square<1>+45
	rel 40+8 t=R_ADDR command-line-arguments.square<1>+51
	rel 48+8 t=R_ADDR command-line-arguments.square<1>+57
	rel 56+8 t=R_ADDR command-line-arguments.square<1>+63
command-line-arguments.length.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.length.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.length.jump122<0> SRODATA static size=64
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR command-line-arguments.length<1>+29
	rel 8+8 t=R_ADDR command-line-arguments.length<1>+44
	rel 16+8 t=R_ADDR command-line-arguments.length<1>+61
	rel 24+8 t=R_ADDR command-line-arguments.length<1>+80
	rel 32+8 t=R_ADDR command-line-arguments.length<1>+94
	rel 40+8 t=R_ADDR command-line-arguments.length<1>+114
	rel 48+8 t=R_ADDR command-line-arguments.length<1>+136
	rel 56+8 t=R_ADDR command-line-arguments.length<1>+164
command-line-arguments.mimetype.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.mimetype.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·IuErl7MOXaHVn7EZYWzfFA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 02 00                    ..........
command-line-arguments.typeSwitch.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.typeSwitch.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.typeSwitch.jump5<0> SRODATA static size=64
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR command-line-arguments.typeSwitch<1>+125
	rel 8+8 t=R_ADDR command-line-arguments.typeSwitch<1>+35
	rel 16+8 t=R_ADDR command-line-arguments.typeSwitch<1>+125
	rel 24+8 t=R_ADDR command-line-arguments.typeSwitch<1>+50
	rel 32+8 t=R_ADDR command-line-arguments.typeSwitch<1>+68
	rel 40+8 t=R_ADDR command-line-arguments.typeSwitch<1>+86
	rel 48+8 t=R_ADDR command-line-arguments.typeSwitch<1>+125
	rel 56+8 t=R_ADDR command-line-arguments.typeSwitch<1>+107
command-line-arguments.interfaceSwitch.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.interfaceSwitch.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.interfaceSwitch2.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.interfaceSwitch2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.interfaceCast.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.interfaceCast.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.interfaceCast2.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.interfaceCast2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.interfaceConv.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.interfaceConv.argliveinfo<0> SRODATA static dupok size=3
	0x0000 00 00 02                                         ...
command-line-arguments.I.foo.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.I.foo.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.J.bar.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.J.bar.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.IJ.bar.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.IJ.bar.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.IJ.foo.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.IJ.foo.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.K.baz.arginfo1<0> SRODATA static dupok size=7
	0x0000 fe 00 08 08 08 fd ff                             .......
command-line-arguments.K.baz.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·TjPuuCwdlCpTaRQGRKTrYw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.f<0> SDWARFLOC size=79
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00  ........&.......
	0x0020 06 00 50 93 08 53 93 08 26 00 00 00 00 00 00 00  ..P..S..&.......
	0x0030 37 00 00 00 00 00 00 00 05 00 93 08 53 93 08 00  7...........S...
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR command-line-arguments.f<1>+0
aux for command-line-arguments.f<0> SDWARFLINES size=54
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 06 03 06  ................
	0x0010 14 06 44 06 2d 06 25 06 37 06 23 06 2d 06 23 06  ..D.-.%.7.#.-.#.
	0x0020 2d 06 23 06 2d 06 24 06 55 06 1b 06 55 06 15 06  -.#.-.$.U...U...
	0x0030 55 02 01 00 01 01                                U.....
	rel 3+8 t=R_ADDR command-line-arguments.f<1>+0
aux for command-line-arguments.f<0> SDWARFFCN size=76
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 66 00 00 00 00 00 00 00  guments.f.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0030 0c 01 12 78 00 00 0c 00 00 00 00 00 00 00 00 11  ...x............
	0x0040 7e 72 30 00 01 0c 00 00 00 00 00 00              ~r0.........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 26+8 t=R_ADDR command-line-arguments.f<1>+0
	rel 34+8 t=R_ADDR command-line-arguments.f<1>+55
	rel 55+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 59+4 t=R_DWARFSECREF <0>+0
	rel 70+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.square<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.square<1>+0
aux for command-line-arguments.square<0> SDWARFLINES size=60
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 16 14  ................
	0x0010 06 37 06 91 2f 06 41 06 1b 06 41 06 25 06 41 06  .7../.A...A.%.A.
	0x0020 1b 06 41 06 1b 06 41 06 1b 06 41 06 1b 06 41 06  ..A...A...A...A.
	0x0030 1b 06 41 06 1b 06 37 02 01 00 01 01              ..A...7.....
	rel 3+8 t=R_ADDR command-line-arguments.square<1>+0
aux for command-line-arguments.square<0> SDWARFFCN size=81
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 73 71 75 61 72 65 00 00  guments.square..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 02 00 00 00 19 01 12 78 00 00 19 00 00 00 00  ........x.......
	0x0040 00 00 00 00 11 7e 72 30 00 01 19 00 00 00 00 00  .....~r0........
	0x0050 00                                               .
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 31+8 t=R_ADDR command-line-arguments.square<1>+0
	rel 39+8 t=R_ADDR command-line-arguments.square<1>+74
	rel 60+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 64+4 t=R_DWARFSECREF <0>+0
	rel 75+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.length<0> SDWARFLOC size=79
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 2b 00 00 00 00 00 00 00  ........+.......
	0x0020 06 00 50 93 08 53 93 08 2b 00 00 00 00 00 00 00  ..P..S..+.......
	0x0030 bd 00 00 00 00 00 00 00 05 00 93 08 53 93 08 00  ............S...
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR command-line-arguments.length<1>+0
aux for command-line-arguments.length<0> SDWARFLINES size=95
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 06 03 2d  ...............-
	0x0010 14 06 44 06 37 06 b9 2e 06 2d 06 4c 06 41 06 1a  ..D.7....-.L.A..
	0x0020 06 41 06 4c 06 41 06 1a 06 41 06 60 06 41 06 1a  .A.L.A...A.`.A..
	0x0030 06 4b 06 24 06 41 06 1a 06 4b 06 60 06 41 06 1a  .K.$.A...K.`.A..
	0x0040 06 4b 06 74 06 41 06 1a 06 4b 06 b0 06 41 06 1a  .K.t.A...K...A..
	0x0050 06 73 06 42 06 41 06 1b 06 2d 02 01 00 01 01     .s.B.A...-.....
	rel 3+8 t=R_ADDR command-line-arguments.length<1>+0
aux for command-line-arguments.length<0> SDWARFFCN size=81
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6c 65 6e 67 74 68 00 00  guments.length..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 02 00 00 00 33 01 12 78 00 00 33 00 00 00 00  .....3..x..3....
	0x0040 00 00 00 00 11 7e 72 30 00 01 33 00 00 00 00 00  .....~r0..3.....
	0x0050 00                                               .
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 31+8 t=R_ADDR command-line-arguments.length<1>+0
	rel 39+8 t=R_ADDR command-line-arguments.length<1>+189
	rel 60+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 64+4 t=R_DWARFSECREF <0>+0
	rel 75+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.mimetype<0> SDWARFLOC size=171
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 29 00 00 00 00 00 00 00  ........).......
	0x0020 06 00 50 93 08 53 93 08 29 00 00 00 00 00 00 00  ..P..S..).......
	0x0030 2e 00 00 00 00 00 00 00 05 00 93 08 53 93 08 36  ............S..6
	0x0040 00 00 00 00 00 00 00 3b 00 00 00 00 00 00 00 05  .......;........
	0x0050 00 93 08 53 93 08 53 00 00 00 00 00 00 00 58 00  ...S..S.......X.
	0x0060 00 00 00 00 00 00 05 00 93 08 53 93 08 60 00 00  ..........S..`..
	0x0070 00 00 00 00 00 65 00 00 00 00 00 00 00 05 00 93  .....e..........
	0x0080 08 53 93 08 68 00 00 00 00 00 00 00 6a 00 00 00  .S..h.......j...
	0x0090 00 00 00 00 05 00 93 08 53 93 08 00 00 00 00 00  ........S.......
	0x00a0 00 00 00 00 00 00 00 00 00 00 00                 ...........
	rel 8+8 t=R_ADDR command-line-arguments.mimetype<1>+0
aux for command-line-arguments.mimetype<0> SDWARFLINES size=72
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 06 03 c8  ................
	0x0010 00 14 06 03 05 46 06 37 03 7d 1f 06 03 02 3c 06  .....F.7.}....<.
	0x0020 5f 06 1f 06 4b 06 2e 06 55 06 4f 06 55 06 4e 06  _...K...U.O.U.N.
	0x0030 4b 06 27 06 4b 06 24 06 55 06 47 06 55 06 03 01  K.'.K.$.U.G.U...
	0x0040 50 06 23 02 03 00 01 01                          P.#.....
	rel 3+8 t=R_ADDR command-line-arguments.mimetype<1>+0
aux for command-line-arguments.mimetype<0> SDWARFFCN size=85
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6d 69 6d 65 74 79 70 65  guments.mimetype
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 02 00 00 00 4e 01 12 65 78 74 00 00 4e  .......N..ext..N
	0x0040 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 4e 00  .........~r0..N.
	0x0050 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:string<0>+0
	rel 33+8 t=R_ADDR command-line-arguments.mimetype<1>+0
	rel 41+8 t=R_ADDR command-line-arguments.mimetype<1>+107
	rel 64+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.string<0>+0
aux for command-line-arguments.typeSwitch<0> SDWARFLOC size=79
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 31 00 00 00 00 00 00 00  ........1.......
	0x0020 06 00 50 93 08 53 93 08 31 00 00 00 00 00 00 00  ..P..S..1.......
	0x0030 83 00 00 00 00 00 00 00 05 00 93 08 53 93 08 00  ............S...
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR command-line-arguments.typeSwitch<1>+0
aux for command-line-arguments.typeSwitch<0> SDWARFLINES size=74
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 06 03 e2  ................
	0x0010 00 14 06 76 06 2d 06 cd 2e 06 55 06 42 06 23 06  ...v.-....U.B.#.
	0x0020 1a 06 55 06 42 06 41 06 1e 06 55 06 42 06 41 06  ..U.B.A...U.B.A.
	0x0030 03 7f 15 06 55 06 60 06 41 06 1a 06 55 06 42 06  ....U.`.A...U.B.
	0x0040 41 06 1d 06 41 02 01 00 01 01                    A...A.....
	rel 3+8 t=R_ADDR command-line-arguments.typeSwitch<1>+0
aux for command-line-arguments.typeSwitch<0> SDWARFFCN size=85
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 74 79 70 65 53 77 69 74  guments.typeSwit
	0x0020 63 68 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ch..............
	0x0030 00 00 00 01 9c 02 00 00 00 68 01 12 78 00 00 68  .........h..x..h
	0x0040 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 68 00  .........~r0..h.
	0x0050 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.typeSwitch<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.typeSwitch<1>+131
	rel 64+4 t=R_DWARFSECREF go:info.interface {}<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.interfaceSwitch<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00  ........4.......
	0x0020 06 00 50 93 08 53 93 08 5f 00 00 00 00 00 00 00  ..P..S.._.......
	0x0030 66 00 00 00 00 00 00 00 05 00 50 93 08 93 08 72  f.........P....r
	0x0040 00 00 00 00 00 00 00 72 00 00 00 00 00 00 00 05  .......r........
	0x0050 00 93 08 53 93 08 00 00 00 00 00 00 00 00 00 00  ...S............
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.interfaceSwitch<1>+0
aux for command-line-arguments.interfaceSwitch<0> SDWARFLINES size=60
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 83 01  ................
	0x0010 14 0a 9b 06 37 06 9e 06 2d 06 03 01 be 06 41 06  ....7...-.....A.
	0x0020 03 7e 47 06 2d 06 02 24 f9 06 41 06 49 06 41 06  .~G.-..$..A.I.A.
	0x0030 03 7f 47 06 73 06 2d 02 14 00 01 01              ..G.s.-.....
	rel 3+8 t=R_ADDR command-line-arguments.interfaceSwitch<1>+0
aux for command-line-arguments.interfaceSwitch<0> SDWARFFCN size=93
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 69 6e 74 65 72 66 61 63  guments.interfac
	0x0020 65 53 77 69 74 63 68 00 00 00 00 00 00 00 00 00  eSwitch.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 89 01  ................
	0x0040 01 12 78 00 00 89 01 00 00 00 00 00 00 00 00 11  ..x.............
	0x0050 7e 72 30 00 01 89 01 00 00 00 00 00 00           ~r0..........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 40+8 t=R_ADDR command-line-arguments.interfaceSwitch<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.interfaceSwitch<1>+180
	rel 71+4 t=R_DWARFSECREF go:info.interface {}<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 87+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.interfaceSwitch2<0> SDWARFLOC size=79
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 29 00 00 00 00 00 00 00  ........).......
	0x0020 06 00 50 93 08 53 93 08 29 00 00 00 00 00 00 00  ..P..S..).......
	0x0030 38 00 00 00 00 00 00 00 05 00 50 93 08 93 08 00  8.........P.....
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR command-line-arguments.interfaceSwitch2<1>+0
aux for command-line-arguments.interfaceSwitch2<0> SDWARFLINES size=56
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 90 01  ................
	0x0010 14 0a 9b 06 37 06 9e 06 2d 06 03 01 e6 06 41 06  ....7...-.....A.
	0x0020 03 7e 47 06 2d 06 02 29 f9 06 41 06 49 06 41 06  .~G.-..)..A.I.A.
	0x0030 03 7f 47 02 1e 00 01 01                          ..G.....
	rel 3+8 t=R_ADDR command-line-arguments.interfaceSwitch2<1>+0
aux for command-line-arguments.interfaceSwitch2<0> SDWARFFCN size=94
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 69 6e 74 65 72 66 61 63  guments.interfac
	0x0020 65 53 77 69 74 63 68 32 00 00 00 00 00 00 00 00  eSwitch2........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 96  ................
	0x0040 01 01 12 78 00 00 96 01 00 00 00 00 00 00 00 00  ...x............
	0x0050 11 7e 72 30 00 01 96 01 00 00 00 00 00 00        .~r0..........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.interfaceSwitch2<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.interfaceSwitch2<1>+186
	rel 72+4 t=R_DWARFSECREF go:info.command-line-arguments.K<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 88+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.interfaceCast<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 2c 00 00 00 00 00 00 00  ........,.......
	0x0020 06 00 50 93 08 53 93 08 68 00 00 00 00 00 00 00  ..P..S..h.......
	0x0030 6f 00 00 00 00 00 00 00 05 00 50 93 08 93 08 7b  o.........P....{
	0x0040 00 00 00 00 00 00 00 9b 00 00 00 00 00 00 00 05  ................
	0x0050 00 93 08 53 93 08 00 00 00 00 00 00 00 00 00 00  ...S............
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.interfaceCast<1>+0
aux for command-line-arguments.interfaceCast<0> SDWARFLINES size=46
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 9d 01  ................
	0x0010 14 0a 73 06 37 06 76 06 2d 06 ec 06 41 06 4d 06  ..s.7.v.-...A.M.
	0x0020 41 06 48 06 2d 06 02 1b fc 02 1e 00 01 01        A.H.-.........
	rel 3+8 t=R_ADDR command-line-arguments.interfaceCast<1>+0
aux for command-line-arguments.interfaceCast<0> SDWARFFCN size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 69 6e 74 65 72 66 61 63  guments.interfac
	0x0020 65 43 61 73 74 00 00 00 00 00 00 00 00 00 00 00  eCast...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 a3 01 01 12  ................
	0x0040 78 00 00 a3 01 00 00 00 00 00 00 00 00 11 7e 72  x.............~r
	0x0050 30 00 01 a3 01 00 00 00 00 00 00                 0..........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.interfaceCast<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.interfaceCast<1>+155
	rel 69+4 t=R_DWARFSECREF go:info.interface {}<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.interfaceCast2<0> SDWARFLOC size=79
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00  ........!.......
	0x0020 06 00 50 93 08 53 93 08 21 00 00 00 00 00 00 00  ..P..S..!.......
	0x0030 30 00 00 00 00 00 00 00 05 00 50 93 08 93 08 00  0.........P.....
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR command-line-arguments.interfaceCast2<1>+0
aux for command-line-arguments.interfaceCast2<0> SDWARFLINES size=52
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 a6 01  ................
	0x0010 14 0a 73 06 37 06 76 06 2d 06 08 24 06 41 06 57  ..s.7.v.-..$.A.W
	0x0020 06 41 06 48 06 2d 06 02 1c fc 06 08 19 06 37 02  .A.H.-........7.
	0x0030 05 00 01 01                                      ....
	rel 3+8 t=R_ADDR command-line-arguments.interfaceCast2<1>+0
aux for command-line-arguments.interfaceCast2<0> SDWARFFCN size=92
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 69 6e 74 65 72 66 61 63  guments.interfac
	0x0020 65 43 61 73 74 32 00 00 00 00 00 00 00 00 00 00  eCast2..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 ac 01 01  ................
	0x0040 12 78 00 00 ac 01 00 00 00 00 00 00 00 00 11 7e  .x.............~
	0x0050 72 30 00 01 ac 01 00 00 00 00 00 00              r0..........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 39+8 t=R_ADDR command-line-arguments.interfaceCast2<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.interfaceCast2<1>+165
	rel 70+4 t=R_DWARFSECREF go:info.command-line-arguments.K<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 86+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.interfaceConv<0> SDWARFLOC size=199
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x0020 06 00 50 93 08 53 93 08 30 00 00 00 00 00 00 00  ..P..S..0.......
	0x0030 58 00 00 00 00 00 00 00 05 00 93 08 53 93 08 58  X...........S..X
	0x0040 00 00 00 00 00 00 00 5f 00 00 00 00 00 00 00 07  ......._........
	0x0050 00 50 93 08 91 08 93 08 5f 00 00 00 00 00 00 00  .P......_.......
	0x0060 62 00 00 00 00 00 00 00 06 00 93 08 91 08 93 08  b...............
	0x0070 62 00 00 00 00 00 00 00 6e 00 00 00 00 00 00 00  b.......n.......
	0x0080 06 00 93 08 91 08 93 08 6e 00 00 00 00 00 00 00  ........n.......
	0x0090 73 00 00 00 00 00 00 00 06 00 50 93 08 53 93 08  s.........P..S..
	0x00a0 73 00 00 00 00 00 00 00 94 00 00 00 00 00 00 00  s...............
	0x00b0 05 00 93 08 53 93 08 00 00 00 00 00 00 00 00 00  ....S...........
	0x00c0 00 00 00 00 00 00 00                             .......
	rel 8+8 t=R_ADDR command-line-arguments.interfaceConv<1>+0
aux for command-line-arguments.interfaceConv<0> SDWARFLINES size=42
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 af 01  ................
	0x0010 14 0a 73 06 37 06 76 06 2d 06 e1 06 69 06 02 24  ..s.7.v.-...i..$
	0x0020 fc 06 73 06 19 02 14 00 01 01                    ..s.......
	rel 3+8 t=R_ADDR command-line-arguments.interfaceConv<1>+0
aux for command-line-arguments.interfaceConv<0> SDWARFFCN size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 69 6e 74 65 72 66 61 63  guments.interfac
	0x0020 65 43 6f 6e 76 00 00 00 00 00 00 00 00 00 00 00  eConv...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 b5 01 01 12  ................
	0x0040 78 00 00 b5 01 00 00 00 00 00 00 00 00 11 7e 72  x.............~r
	0x0050 30 00 01 b5 01 00 00 00 00 00 00                 0..........
	rel 0+0 t=R_USETYPE type:command-line-arguments.I<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.interfaceConv<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.interfaceConv<1>+148
	rel 69+4 t=R_DWARFSECREF go:info.command-line-arguments.IJ<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.command-line-arguments.I<0>+0
aux for command-line-arguments.I.foo<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 91 06  ............s...
	0x0010 73 06 37 06 41 02 32 00 01 01                    s.7.A.2...
	rel 3+8 t=R_ADDR command-line-arguments.I.foo<1>+0
aux for command-line-arguments.I.foo<0> SDWARFFCN size=62
	0x0000 04 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 49 2e 66 6f 6f 00 00 00  guments.I.foo...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 01 11 7e 70 30 00 00 01 00 00 00 00 00 00        ..~p0.........
	rel 0+0 t=R_USETYPE type:command-line-arguments.I<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.I.foo<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.I.foo<1>+92
	rel 56+4 t=R_DWARFSECREF go:info.command-line-arguments.I<0>+0
aux for command-line-arguments.J.bar<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 91 06  ............s...
	0x0010 73 06 37 06 41 02 32 00 01 01                    s.7.A.2...
	rel 3+8 t=R_ADDR command-line-arguments.J.bar<1>+0
aux for command-line-arguments.J.bar<0> SDWARFFCN size=62
	0x0000 04 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4a 2e 62 61 72 00 00 00  guments.J.bar...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 01 11 7e 70 30 00 00 01 00 00 00 00 00 00        ..~p0.........
	rel 0+0 t=R_USETYPE type:command-line-arguments.J<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.J.bar<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.J.bar<1>+92
	rel 56+4 t=R_DWARFSECREF go:info.command-line-arguments.J<0>+0
aux for command-line-arguments.IJ.bar<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 91 06  ............s...
	0x0010 73 06 37 06 41 02 32 00 01 01                    s.7.A.2...
	rel 3+8 t=R_ADDR command-line-arguments.IJ.bar<1>+0
aux for command-line-arguments.IJ.bar<0> SDWARFFCN size=63
	0x0000 04 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 49 4a 2e 62 61 72 00 00  guments.IJ.bar..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 01 11 7e 70 30 00 00 01 00 00 00 00 00 00     ...~p0.........
	rel 0+0 t=R_USETYPE type:command-line-arguments.IJ<0>+0
	rel 31+8 t=R_ADDR command-line-arguments.IJ.bar<1>+0
	rel 39+8 t=R_ADDR command-line-arguments.IJ.bar<1>+92
	rel 57+4 t=R_DWARFSECREF go:info.command-line-arguments.IJ<0>+0
aux for command-line-arguments.IJ.foo<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 91 06  ............s...
	0x0010 73 06 37 06 41 02 32 00 01 01                    s.7.A.2...
	rel 3+8 t=R_ADDR command-line-arguments.IJ.foo<1>+0
aux for command-line-arguments.IJ.foo<0> SDWARFFCN size=63
	0x0000 04 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 49 4a 2e 66 6f 6f 00 00  guments.IJ.foo..
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0030 9c 01 11 7e 70 30 00 00 01 00 00 00 00 00 00     ...~p0.........
	rel 0+0 t=R_USETYPE type:command-line-arguments.IJ<0>+0
	rel 31+8 t=R_ADDR command-line-arguments.IJ.foo<1>+0
	rel 39+8 t=R_ADDR command-line-arguments.IJ.foo<1>+92
	rel 57+4 t=R_DWARFSECREF go:info.command-line-arguments.IJ<0>+0
aux for command-line-arguments.K.baz<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 91 06  ............s...
	0x0010 73 06 37 06 41 02 32 00 01 01                    s.7.A.2...
	rel 3+8 t=R_ADDR command-line-arguments.K.baz<1>+0
aux for command-line-arguments.K.baz<0> SDWARFFCN size=62
	0x0000 04 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4b 2e 62 61 7a 00 00 00  guments.K.baz...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 01 11 7e 70 30 00 00 01 00 00 00 00 00 00        ..~p0.........
	rel 0+0 t=R_USETYPE type:command-line-arguments.K<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.K.baz<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.K.baz<1>+92
	rel 56+4 t=R_DWARFSECREF go:info.command-line-arguments.K<0>+0
aux for type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1c 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 21 00 00 00 00  ...........!....
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1>+0
	rel 59+8 t=R_ADDR type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1>+0
aux for type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 06 2d 06 a5 06  ............-...
	0x0010 37 06 55 06 23 02 02 00 01 01                    7.U.#.....
	rel 3+8 t=R_ADDR type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1>+0
aux for type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0> SDWARFFCN size=139
	0x0000 03 74 79 70 65 3a 2e 65 71 2e 73 74 72 75 63 74  .type:.eq.struct
	0x0010 20 7b 20 43 61 63 68 65 20 75 6e 73 61 66 65 2e   { Cache unsafe.
	0x0020 50 6f 69 6e 74 65 72 3b 20 49 6e 74 65 72 20 75  Pointer; Inter u
	0x0030 6e 73 61 66 65 2e 50 6f 69 6e 74 65 72 3b 20 43  nsafe.Pointer; C
	0x0040 61 6e 46 61 69 6c 20 62 6f 6f 6c 20 7d 00 00 00  anFail bool }...
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0060 01 00 00 00 01 01 12 70 00 00 01 00 00 00 00 00  .......p........
	0x0070 00 00 00 12 71 00 00 01 00 00 00 00 00 00 00 00  ....q...........
	0x0080 11 72 00 01 01 00 00 00 00 00 00                 .r.........
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 78+8 t=R_ADDR type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1>+0
	rel 86+8 t=R_ADDR type:.eq.struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<1>+33
	rel 107+4 t=R_DWARFSECREF go:info.*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0>+0
	rel 111+4 t=R_DWARFSECREF <0>+0
	rel 120+4 t=R_DWARFSECREF go:info.*struct { Cache unsafe.Pointer; Inter unsafe.Pointer; CanFail bool }<0>+0
	rel 124+4 t=R_DWARFSECREF <0>+51
	rel 133+4 t=R_DWARFSECREF go:info.bool<0>+0
