# command-line-arguments
command-line-arguments.combine2string<1> STEXT size=134 args=0x28 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	TEXT	command-line-arguments.combine2string(SB), ABIInternal, $8-40
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	JLS	74
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	BX, command-line-arguments.a+24(FP)
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	DI, command-line-arguments.b+40(FP)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	FUNCDATA	$0, gclocals路hYXh8R94h8YSj6dF425rfQ==(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	FUNCDATA	$5, command-line-arguments.combine2string.arginfo1(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	FUNCDATA	$6, command-line-arguments.combine2string.argliveinfo(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PCDATA	$3, $1
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	MOVQ	CX, 8(AX)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	CMPL	runtime.writeBarrier(SB), $0
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	PCDATA	$0, $-2
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	JEQ	61
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	CALL	runtime.gcWriteBarrier4(SB)
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	MOVQ	BX, (R11)
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	MOVQ	(AX), CX
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	MOVQ	CX, 8(R11)
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:15)	MOVQ	DI, 16(R11)
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:15)	MOVQ	16(AX), CX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:15)	MOVQ	CX, 24(R11)
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:12)	MOVQ	BX, (AX)
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:15)	MOVQ	SI, 24(AX)
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:15)	MOVQ	DI, 16(AX)
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:16)	PCDATA	$0, $-1
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:16)	POPQ	BP
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:16)	RET
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:16)	NOP
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PCDATA	$1, $-1
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PCDATA	$0, $-2
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	AX, 8(SP)
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	BX, 16(SP)
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	CX, 24(SP)
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	DI, 32(SP)
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	SI, 40(SP)
	0x0063 00099 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	CALL	runtime.morestack_noctxt(SB)
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	PCDATA	$0, $-1
	0x0068 00104 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	8(SP), AX
	0x006d 00109 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	16(SP), BX
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	24(SP), CX
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	32(SP), DI
	0x007c 00124 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	MOVQ	40(SP), SI
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:9)	JMP	0
	0x0000 49 3b 66 10 76 44 55 48 89 e5 48 89 5c 24 18 48  I;f.vDUH..H.\$.H
	0x0010 89 7c 24 28 48 89 48 08 83 3d 00 00 00 00 00 90  .|$(H.H..=......
	0x0020 74 1b e8 00 00 00 00 49 89 1b 48 8b 08 49 89 4b  t......I..H..I.K
	0x0030 08 49 89 7b 10 48 8b 48 10 49 89 4b 18 48 89 18  .I.{.H.H.I.K.H..
	0x0040 48 89 70 18 48 89 78 10 5d c3 48 89 44 24 08 48  H.p.H.x.].H.D$.H
	0x0050 89 5c 24 10 48 89 4c 24 18 48 89 7c 24 20 48 89  .\$.H.L$.H.|$ H.
	0x0060 74 24 28 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c  t$(.....H.D$.H.\
	0x0070 24 10 48 8b 4c 24 18 48 8b 7c 24 20 48 8b 74 24  $.H.L$.H.|$ H.t$
	0x0080 28 e9 7a ff ff ff                                (.z...
	rel 26+4 t=R_PCREL runtime.writeBarrier<0>+-1
	rel 35+4 t=R_CALL runtime.gcWriteBarrier4<1>+0
	rel 100+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.combine4string<1> STEXT size=229 args=0x48 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	TEXT	command-line-arguments.combine4string(SB), ABIInternal, $8-72
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	JLS	129
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	BX, command-line-arguments.a+24(FP)
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	DI, command-line-arguments.b+40(FP)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	R8, command-line-arguments.c+56(FP)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	R10, command-line-arguments.d+72(FP)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	FUNCDATA	$0, gclocals路vXi8VFVnn6c0AV6oT7spEA==(SB)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	FUNCDATA	$5, command-line-arguments.combine4string.arginfo1(SB)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	FUNCDATA	$6, command-line-arguments.combine4string.argliveinfo(SB)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PCDATA	$3, $1
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	MOVQ	CX, 8(AX)
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	CMPL	runtime.writeBarrier(SB), $0
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	PCDATA	$0, $-2
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	JEQ	100
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:31)	MOVQ	R11, CX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	CALL	runtime.gcWriteBarrier8(SB)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	MOVQ	BX, (R11)
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	MOVQ	(AX), DX
	0x0039 00057 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	MOVQ	DX, 8(R11)
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:24)	MOVQ	DI, 16(R11)
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:24)	MOVQ	16(AX), DX
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:24)	MOVQ	DX, 24(R11)
	0x0049 00073 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:27)	MOVQ	R8, 32(R11)
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:27)	MOVQ	32(AX), DX
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:27)	MOVQ	DX, 40(R11)
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:30)	MOVQ	R10, 48(R11)
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:30)	MOVQ	48(AX), DX
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:30)	MOVQ	DX, 56(R11)
	0x0061 00097 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:30)	MOVQ	CX, R11
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:21)	MOVQ	BX, (AX)
	0x0067 00103 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:24)	MOVQ	SI, 24(AX)
	0x006b 00107 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:24)	MOVQ	DI, 16(AX)
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:27)	MOVQ	R9, 40(AX)
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:27)	MOVQ	R8, 32(AX)
	0x0077 00119 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:30)	MOVQ	R11, 56(AX)
	0x007b 00123 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:30)	MOVQ	R10, 48(AX)
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:31)	PCDATA	$0, $-1
	0x007f 00127 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:31)	POPQ	BP
	0x0080 00128 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:31)	RET
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:31)	NOP
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PCDATA	$1, $-1
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PCDATA	$0, $-2
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	AX, 8(SP)
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	BX, 16(SP)
	0x008b 00139 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	CX, 24(SP)
	0x0090 00144 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	DI, 32(SP)
	0x0095 00149 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	SI, 40(SP)
	0x009a 00154 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	R8, 48(SP)
	0x009f 00159 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	R9, 56(SP)
	0x00a4 00164 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	R10, 64(SP)
	0x00a9 00169 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	R11, 72(SP)
	0x00ae 00174 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	CALL	runtime.morestack_noctxt(SB)
	0x00b3 00179 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	PCDATA	$0, $-1
	0x00b3 00179 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	8(SP), AX
	0x00b8 00184 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	16(SP), BX
	0x00bd 00189 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	24(SP), CX
	0x00c2 00194 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	32(SP), DI
	0x00c7 00199 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	40(SP), SI
	0x00cc 00204 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	48(SP), R8
	0x00d1 00209 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	56(SP), R9
	0x00d6 00214 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	64(SP), R10
	0x00db 00219 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	MOVQ	72(SP), R11
	0x00e0 00224 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:18)	JMP	0
	0x0000 49 3b 66 10 76 7b 55 48 89 e5 48 89 5c 24 18 48  I;f.v{UH..H.\$.H
	0x0010 89 7c 24 28 4c 89 44 24 38 4c 89 54 24 48 48 89  .|$(L.D$8L.T$HH.
	0x0020 48 08 83 3d 00 00 00 00 00 74 39 4c 89 d9 e8 00  H..=.....t9L....
	0x0030 00 00 00 49 89 1b 48 8b 10 49 89 53 08 49 89 7b  ...I..H..I.S.I.{
	0x0040 10 48 8b 50 10 49 89 53 18 4d 89 43 20 48 8b 50  .H.P.I.S.M.C H.P
	0x0050 20 49 89 53 28 4d 89 53 30 48 8b 50 30 49 89 53   I.S(M.S0H.P0I.S
	0x0060 38 49 89 cb 48 89 18 48 89 70 18 48 89 78 10 4c  8I..H..H.p.H.x.L
	0x0070 89 48 28 4c 89 40 20 4c 89 58 38 4c 89 50 30 5d  .H(L.@ L.X8L.P0]
	0x0080 c3 48 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18  .H.D$.H.\$.H.L$.
	0x0090 48 89 7c 24 20 48 89 74 24 28 4c 89 44 24 30 4c  H.|$ H.t$(L.D$0L
	0x00a0 89 4c 24 38 4c 89 54 24 40 4c 89 5c 24 48 e8 00  .L$8L.T$@L.\$H..
	0x00b0 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48 8b 4c  ...H.D$.H.\$.H.L
	0x00c0 24 18 48 8b 7c 24 20 48 8b 74 24 28 4c 8b 44 24  $.H.|$ H.t$(L.D$
	0x00d0 30 4c 8b 4c 24 38 4c 8b 54 24 40 4c 8b 5c 24 48  0L.L$8L.T$@L.\$H
	0x00e0 e9 1b ff ff ff                                   .....
	rel 36+4 t=R_PCREL runtime.writeBarrier<0>+-1
	rel 47+4 t=R_CALL runtime.gcWriteBarrier8<1>+0
	rel 175+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.combine2slice<1> STEXT size=165 args=0x38 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	TEXT	command-line-arguments.combine2slice(SB), ABIInternal, $8-56
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	JLS	81
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	BX, command-line-arguments.a+24(FP)
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	SI, command-line-arguments.b+48(FP)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	FUNCDATA	$0, gclocals路rWjIF7y3DrTljMawkfzhcA==(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	FUNCDATA	$5, command-line-arguments.combine2slice.arginfo1(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	FUNCDATA	$6, command-line-arguments.combine2slice.argliveinfo(SB)
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PCDATA	$3, $1
	0x0014 00020 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	MOVQ	CX, 8(AX)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	MOVQ	DI, 16(AX)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	CMPL	runtime.writeBarrier(SB), $0
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	PCDATA	$0, $-2
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	JEQ	64
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	CALL	runtime.gcWriteBarrier4(SB)
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	MOVQ	BX, (R11)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	MOVQ	(AX), CX
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	MOVQ	CX, 8(R11)
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:39)	MOVQ	SI, 16(R11)
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:39)	MOVQ	24(AX), CX
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:39)	MOVQ	CX, 24(R11)
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:36)	MOVQ	BX, (AX)
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:39)	MOVQ	R8, 32(AX)
	0x0047 00071 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:39)	MOVQ	R9, 40(AX)
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:39)	MOVQ	SI, 24(AX)
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:40)	PCDATA	$0, $-1
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:40)	POPQ	BP
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:40)	RET
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:40)	NOP
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PCDATA	$1, $-1
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PCDATA	$0, $-2
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	AX, 8(SP)
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	BX, 16(SP)
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	CX, 24(SP)
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	DI, 32(SP)
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	SI, 40(SP)
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	R8, 48(SP)
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	R9, 56(SP)
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	CALL	runtime.morestack_noctxt(SB)
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	PCDATA	$0, $-1
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	8(SP), AX
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	16(SP), BX
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	24(SP), CX
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	32(SP), DI
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	40(SP), SI
	0x0092 00146 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	48(SP), R8
	0x0097 00151 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	MOVQ	56(SP), R9
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	NOP
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:33)	JMP	0
	0x0000 49 3b 66 10 76 4b 55 48 89 e5 48 89 5c 24 18 48  I;f.vKUH..H.\$.H
	0x0010 89 74 24 30 48 89 48 08 48 89 78 10 83 3d 00 00  .t$0H.H.H.x..=..
	0x0020 00 00 00 74 1b e8 00 00 00 00 49 89 1b 48 8b 08  ...t......I..H..
	0x0030 49 89 4b 08 49 89 73 10 48 8b 48 18 49 89 4b 18  I.K.I.s.H.H.I.K.
	0x0040 48 89 18 4c 89 40 20 4c 89 48 28 48 89 70 18 5d  H..L.@ L.H(H.p.]
	0x0050 c3 48 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18  .H.D$.H.\$.H.L$.
	0x0060 48 89 7c 24 20 48 89 74 24 28 4c 89 44 24 30 4c  H.|$ H.t$(L.D$0L
	0x0070 89 4c 24 38 e8 00 00 00 00 48 8b 44 24 08 48 8b  .L$8.....H.D$.H.
	0x0080 5c 24 10 48 8b 4c 24 18 48 8b 7c 24 20 48 8b 74  \$.H.L$.H.|$ H.t
	0x0090 24 28 4c 8b 44 24 30 4c 8b 4c 24 38 0f 1f 40 00  $(L.D$0L.L$8..@.
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 30+4 t=R_PCREL runtime.writeBarrier<0>+-1
	rel 38+4 t=R_CALL runtime.gcWriteBarrier4<1>+0
	rel 117+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.combine4slice<1> STEXT size=255 args=0x68 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	TEXT	command-line-arguments.combine4slice(SB), ABIInternal, $8-104
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	JLS	175
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PCDATA	$0, $-1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PUSHQ	BP
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	SP, BP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	BX, command-line-arguments.a+72(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	SI, command-line-arguments.b+96(FP)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	FUNCDATA	$0, gclocals路659RYQbt8kIeiewLUy9umg==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	FUNCDATA	$5, command-line-arguments.combine4slice.arginfo1(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	FUNCDATA	$6, command-line-arguments.combine4slice.argliveinfo(SB)
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PCDATA	$3, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	MOVQ	CX, 8(AX)
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	MOVQ	DI, 16(AX)
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	CMPL	runtime.writeBarrier(SB), $0
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	PCDATA	$0, $-2
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	JNE	53
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	command-line-arguments.c+16(SP), CX
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	command-line-arguments.d+40(SP), DX
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	JMP	114
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	CALL	runtime.gcWriteBarrier8(SB)
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	MOVQ	BX, (R11)
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	MOVQ	(AX), CX
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	MOVQ	CX, 8(R11)
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:48)	MOVQ	SI, 16(R11)
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:48)	MOVQ	24(AX), CX
	0x004c 00076 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:48)	MOVQ	CX, 24(R11)
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	command-line-arguments.c+16(SP), CX
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	CX, 32(R11)
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	48(AX), DX
	0x005d 00093 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	DX, 40(R11)
	0x0061 00097 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	command-line-arguments.d+40(SP), DX
	0x0066 00102 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	DX, 48(R11)
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	72(AX), DI
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	DI, 56(R11)
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:45)	MOVQ	BX, (AX)
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:48)	MOVQ	R8, 32(AX)
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:48)	MOVQ	R9, 40(AX)
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:48)	MOVQ	SI, 24(AX)
	0x0081 00129 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	command-line-arguments.c+24(SP), BX
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	BX, 56(AX)
	0x008a 00138 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	command-line-arguments.c+32(SP), BX
	0x008f 00143 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	BX, 64(AX)
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:51)	MOVQ	CX, 48(AX)
	0x0097 00151 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	command-line-arguments.d+48(SP), CX
	0x009c 00156 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	CX, 80(AX)
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	command-line-arguments.d+56(SP), CX
	0x00a5 00165 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	CX, 88(AX)
	0x00a9 00169 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:54)	MOVQ	DX, 72(AX)
	0x00ad 00173 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:55)	PCDATA	$0, $-1
	0x00ad 00173 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:55)	POPQ	BP
	0x00ae 00174 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:55)	RET
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:55)	NOP
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PCDATA	$1, $-1
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PCDATA	$0, $-2
	0x00af 00175 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	AX, 56(SP)
	0x00b4 00180 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	BX, 64(SP)
	0x00b9 00185 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	CX, 72(SP)
	0x00be 00190 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	DI, 80(SP)
	0x00c3 00195 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	SI, 88(SP)
	0x00c8 00200 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	R8, 96(SP)
	0x00cd 00205 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	R9, 104(SP)
	0x00d2 00210 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	CALL	runtime.morestack_noctxt(SB)
	0x00d7 00215 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	PCDATA	$0, $-1
	0x00d7 00215 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	56(SP), AX
	0x00dc 00220 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	64(SP), BX
	0x00e1 00225 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	72(SP), CX
	0x00e6 00230 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	80(SP), DI
	0x00eb 00235 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	88(SP), SI
	0x00f0 00240 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	96(SP), R8
	0x00f5 00245 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	MOVQ	104(SP), R9
	0x00fa 00250 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/writebarrier.go:42)	JMP	0
	0x0000 49 3b 66 10 0f 86 a5 00 00 00 55 48 89 e5 48 89  I;f.......UH..H.
	0x0010 5c 24 48 48 89 74 24 60 48 89 48 08 48 89 78 10  \$HH.t$`H.H.H.x.
	0x0020 83 3d 00 00 00 00 00 75 0c 48 8b 4c 24 10 48 8b  .=.....u.H.L$.H.
	0x0030 54 24 28 eb 3d e8 00 00 00 00 49 89 1b 48 8b 08  T$(.=.....I..H..
	0x0040 49 89 4b 08 49 89 73 10 48 8b 48 18 49 89 4b 18  I.K.I.s.H.H.I.K.
	0x0050 48 8b 4c 24 10 49 89 4b 20 48 8b 50 30 49 89 53  H.L$.I.K H.P0I.S
	0x0060 28 48 8b 54 24 28 49 89 53 30 48 8b 78 48 49 89  (H.T$(I.S0H.xHI.
	0x0070 7b 38 48 89 18 4c 89 40 20 4c 89 48 28 48 89 70  {8H..L.@ L.H(H.p
	0x0080 18 48 8b 5c 24 18 48 89 58 38 48 8b 5c 24 20 48  .H.\$.H.X8H.\$ H
	0x0090 89 58 40 48 89 48 30 48 8b 4c 24 30 48 89 48 50  .X@H.H0H.L$0H.HP
	0x00a0 48 8b 4c 24 38 48 89 48 58 48 89 50 48 5d c3 48  H.L$8H.HXH.PH].H
	0x00b0 89 44 24 38 48 89 5c 24 40 48 89 4c 24 48 48 89  .D$8H.\$@H.L$HH.
	0x00c0 7c 24 50 48 89 74 24 58 4c 89 44 24 60 4c 89 4c  |$PH.t$XL.D$`L.L
	0x00d0 24 68 e8 00 00 00 00 48 8b 44 24 38 48 8b 5c 24  $h.....H.D$8H.\$
	0x00e0 40 48 8b 4c 24 48 48 8b 7c 24 50 48 8b 74 24 58  @H.L$HH.|$PH.t$X
	0x00f0 4c 8b 44 24 60 4c 8b 4c 24 68 e9 01 ff ff ff     L.D$`L.L$h.....
	rel 34+4 t=R_PCREL runtime.writeBarrier<0>+-1
	rel 54+4 t=R_CALL runtime.gcWriteBarrier8<1>+0
	rel 211+4 t=R_CALL runtime.morestack_noctxt<0>+0
type:.eq.[2]string<1> STEXT dupok size=165 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[2]string(SB), DUPOK|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	130
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$32, SP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals路TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[2]string.arginfo1(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[2]string.argliveinfo(SB)
	0x000e 00014 (<autogenerated>:1)	PCDATA	$3, $1
	0x000e 00014 (<autogenerated>:1)	MOVQ	8(AX), DX
	0x0012 00018 (<autogenerated>:1)	CMPQ	8(BX), DX
	0x0016 00022 (<autogenerated>:1)	JNE	52
	0x0018 00024 (<autogenerated>:1)	MOVQ	24(AX), DX
	0x001c 00028 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	CMPQ	24(BX), DX
	0x0024 00036 (<autogenerated>:1)	JNE	52
	0x0026 00038 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.p+48(SP)
	0x002b 00043 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.q+56(SP)
	0x0030 00048 (<autogenerated>:1)	PCDATA	$3, $-1
	0x0030 00048 (<autogenerated>:1)	XORL	CX, CX
	0x0032 00050 (<autogenerated>:1)	JMP	78
	0x0034 00052 (<autogenerated>:1)	PCDATA	$3, $1
	0x0034 00052 (<autogenerated>:1)	XORL	AX, AX
	0x0036 00054 (<autogenerated>:1)	ADDQ	$32, SP
	0x003a 00058 (<autogenerated>:1)	POPQ	BP
	0x003b 00059 (<autogenerated>:1)	RET
	0x003c 00060 (<autogenerated>:1)	PCDATA	$3, $-1
	0x003c 00060 (<autogenerated>:1)	MOVQ	command-line-arguments..autotmp_9+24(SP), CX
	0x0041 00065 (<autogenerated>:1)	INCQ	CX
	0x0044 00068 (<autogenerated>:1)	MOVQ	command-line-arguments.p+48(SP), AX
	0x0049 00073 (<autogenerated>:1)	MOVQ	command-line-arguments.q+56(SP), BX
	0x004e 00078 (<autogenerated>:1)	CMPQ	CX, $2
	0x0052 00082 (<autogenerated>:1)	JGE	123
	0x0054 00084 (<autogenerated>:1)	MOVQ	CX, command-line-arguments..autotmp_9+24(SP)
	0x0059 00089 (<autogenerated>:1)	SHLQ	$4, CX
	0x005d 00093 (<autogenerated>:1)	MOVQ	(CX)(AX*1), SI
	0x0061 00097 (<autogenerated>:1)	MOVQ	(CX)(BX*1), DI
	0x0065 00101 (<autogenerated>:1)	MOVQ	8(AX)(CX*1), CX
	0x006a 00106 (<autogenerated>:1)	MOVQ	SI, AX
	0x006d 00109 (<autogenerated>:1)	MOVQ	DI, BX
	0x0070 00112 (<autogenerated>:1)	PCDATA	$1, $0
	0x0070 00112 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0075 00117 (<autogenerated>:1)	TESTB	AL, AL
	0x0077 00119 (<autogenerated>:1)	JNE	60
	0x0079 00121 (<autogenerated>:1)	JMP	52
	0x007b 00123 (<autogenerated>:1)	MOVL	$1, AX
	0x0080 00128 (<autogenerated>:1)	JMP	54
	0x0082 00130 (<autogenerated>:1)	NOP
	0x0082 00130 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0082 00130 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0082 00130 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0087 00135 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x008c 00140 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0091 00145 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0091 00145 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0096 00150 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x009b 00155 (<autogenerated>:1)	NOP
	0x00a0 00160 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 76 7c 55 48 89 e5 48 83 ec 20 48 8b  I;f.v|UH..H.. H.
	0x0010 50 08 48 39 53 08 75 1c 48 8b 50 18 0f 1f 40 00  P.H9S.u.H.P...@.
	0x0020 48 39 53 18 75 0e 48 89 44 24 30 48 89 5c 24 38  H9S.u.H.D$0H.\$8
	0x0030 31 c9 eb 1a 31 c0 48 83 c4 20 5d c3 48 8b 4c 24  1...1.H.. ].H.L$
	0x0040 18 48 ff c1 48 8b 44 24 30 48 8b 5c 24 38 48 83  .H..H.D$0H.\$8H.
	0x0050 f9 02 7d 27 48 89 4c 24 18 48 c1 e1 04 48 8b 34  ..}'H.L$.H...H.4
	0x0060 01 48 8b 3c 19 48 8b 4c 08 08 48 89 f0 48 89 fb  .H.<.H.L..H..H..
	0x0070 e8 00 00 00 00 84 c0 75 c3 eb b9 b8 01 00 00 00  .......u........
	0x0080 eb b4 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00  ..H.D$.H.\$.....
	0x0090 00 48 8b 44 24 08 48 8b 5c 24 10 0f 1f 44 00 00  .H.D$.H.\$...D..
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 113+4 t=R_CALL runtime.memequal<1>+0
	rel 141+4 t=R_CALL runtime.morestack_noctxt<0>+0
type:.eq.[4]string<1> STEXT dupok size=180 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[4]string(SB), DUPOK|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	150
	0x000a 00010 (<autogenerated>:1)	PCDATA	$0, $-1
	0x000a 00010 (<autogenerated>:1)	PUSHQ	BP
	0x000b 00011 (<autogenerated>:1)	MOVQ	SP, BP
	0x000e 00014 (<autogenerated>:1)	SUBQ	$32, SP
	0x0012 00018 (<autogenerated>:1)	FUNCDATA	$0, gclocals路TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0012 00018 (<autogenerated>:1)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0012 00018 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[4]string.arginfo1(SB)
	0x0012 00018 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[4]string.argliveinfo(SB)
	0x0012 00018 (<autogenerated>:1)	PCDATA	$3, $1
	0x0012 00018 (<autogenerated>:1)	MOVQ	8(AX), DX
	0x0016 00022 (<autogenerated>:1)	CMPQ	8(BX), DX
	0x001a 00026 (<autogenerated>:1)	JNE	72
	0x001c 00028 (<autogenerated>:1)	MOVQ	24(AX), DX
	0x0020 00032 (<autogenerated>:1)	CMPQ	24(BX), DX
	0x0024 00036 (<autogenerated>:1)	JNE	72
	0x0026 00038 (<autogenerated>:1)	MOVQ	40(BX), DX
	0x002a 00042 (<autogenerated>:1)	CMPQ	40(AX), DX
	0x002e 00046 (<autogenerated>:1)	JNE	72
	0x0030 00048 (<autogenerated>:1)	MOVQ	56(BX), DX
	0x0034 00052 (<autogenerated>:1)	CMPQ	56(AX), DX
	0x0038 00056 (<autogenerated>:1)	JNE	72
	0x003a 00058 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.p+48(SP)
	0x003f 00063 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.q+56(SP)
	0x0044 00068 (<autogenerated>:1)	PCDATA	$3, $-1
	0x0044 00068 (<autogenerated>:1)	XORL	CX, CX
	0x0046 00070 (<autogenerated>:1)	JMP	98
	0x0048 00072 (<autogenerated>:1)	PCDATA	$3, $1
	0x0048 00072 (<autogenerated>:1)	XORL	AX, AX
	0x004a 00074 (<autogenerated>:1)	ADDQ	$32, SP
	0x004e 00078 (<autogenerated>:1)	POPQ	BP
	0x004f 00079 (<autogenerated>:1)	RET
	0x0050 00080 (<autogenerated>:1)	PCDATA	$3, $-1
	0x0050 00080 (<autogenerated>:1)	MOVQ	command-line-arguments..autotmp_9+24(SP), CX
	0x0055 00085 (<autogenerated>:1)	INCQ	CX
	0x0058 00088 (<autogenerated>:1)	MOVQ	command-line-arguments.p+48(SP), AX
	0x005d 00093 (<autogenerated>:1)	MOVQ	command-line-arguments.q+56(SP), BX
	0x0062 00098 (<autogenerated>:1)	CMPQ	CX, $4
	0x0066 00102 (<autogenerated>:1)	JGE	143
	0x0068 00104 (<autogenerated>:1)	MOVQ	CX, command-line-arguments..autotmp_9+24(SP)
	0x006d 00109 (<autogenerated>:1)	SHLQ	$4, CX
	0x0071 00113 (<autogenerated>:1)	MOVQ	(CX)(AX*1), SI
	0x0075 00117 (<autogenerated>:1)	MOVQ	(CX)(BX*1), DI
	0x0079 00121 (<autogenerated>:1)	MOVQ	8(AX)(CX*1), CX
	0x007e 00126 (<autogenerated>:1)	MOVQ	SI, AX
	0x0081 00129 (<autogenerated>:1)	MOVQ	DI, BX
	0x0084 00132 (<autogenerated>:1)	PCDATA	$1, $0
	0x0084 00132 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0089 00137 (<autogenerated>:1)	TESTB	AL, AL
	0x008b 00139 (<autogenerated>:1)	JNE	80
	0x008d 00141 (<autogenerated>:1)	JMP	72
	0x008f 00143 (<autogenerated>:1)	MOVL	$1, AX
	0x0094 00148 (<autogenerated>:1)	JMP	74
	0x0096 00150 (<autogenerated>:1)	NOP
	0x0096 00150 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0096 00150 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0096 00150 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x009b 00155 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x00a0 00160 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00a5 00165 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00a5 00165 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x00aa 00170 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x00af 00175 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 0f 86 8c 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 20 48 8b 50 08 48 39 53 08 75 2c 48 8b 50 18  . H.P.H9S.u,H.P.
	0x0020 48 39 53 18 75 22 48 8b 53 28 48 39 50 28 75 18  H9S.u"H.S(H9P(u.
	0x0030 48 8b 53 38 48 39 50 38 75 0e 48 89 44 24 30 48  H.S8H9P8u.H.D$0H
	0x0040 89 5c 24 38 31 c9 eb 1a 31 c0 48 83 c4 20 5d c3  .\$81...1.H.. ].
	0x0050 48 8b 4c 24 18 48 ff c1 48 8b 44 24 30 48 8b 5c  H.L$.H..H.D$0H.\
	0x0060 24 38 48 83 f9 04 7d 27 48 89 4c 24 18 48 c1 e1  $8H...}'H.L$.H..
	0x0070 04 48 8b 34 01 48 8b 3c 19 48 8b 4c 08 08 48 89  .H.4.H.<.H.L..H.
	0x0080 f0 48 89 fb e8 00 00 00 00 84 c0 75 c3 eb b9 b8  .H.........u....
	0x0090 01 00 00 00 eb b4 48 89 44 24 08 48 89 5c 24 10  ......H.D$.H.\$.
	0x00a0 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 e9  .....H.D$.H.\$..
	0x00b0 4c ff ff ff                                      L...
	rel 133+4 t=R_CALL runtime.memequal<1>+0
	rel 161+4 t=R_CALL runtime.morestack_noctxt<0>+0
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
runtime.memequal64路f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*[2][]uint8-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 32 5d 5b 5d 75 69 6e 74 38           ..*[2][]uint8
runtime.gcbits.0900000000000000<0> SRODATA dupok size=8
	0x0000 09 00 00 00 00 00 00 00                          ........
type:.namedata.*[][]uint8-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 5d 5b 5d 75 69 6e 74 38              ..*[][]uint8
type:*[][]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f2 a3 9c cf 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64路f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[][]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[][]uint8<0>+0
type:[][]uint8<0> SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2a 2a 4f d6 02 08 08 17 00 00 00 00 00 00 00 00  **O.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[][]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[][]uint8<0>+0
	rel 48+8 t=R_ADDR type:[]uint8<0>+0
type:[2][]uint8<0> SRODATA dupok size=72
	0x0000 30 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  0....... .......
	0x0010 37 99 82 2e 02 08 08 11 00 00 00 00 00 00 00 00  7...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0900000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2][]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[2][]uint8<0>+0
	rel 48+8 t=R_ADDR type:[]uint8<0>+0
	rel 56+8 t=R_ADDR type:[][]uint8<0>+0
type:*[2][]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 af 3a be e6 08 08 08 36 00 00 00 00 00 00 00 00  .:.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64路f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2][]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[2][]uint8<0>+0
type:.namedata.*[2]string-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 32 5d 73 74 72 69 6e 67              ..*[2]string
type:.eqfunc.[2]string<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[2]string<1>+0
runtime.gcbits.0500000000000000<0> SRODATA dupok size=8
	0x0000 05 00 00 00 00 00 00 00                          ........
type:[2]string<0> SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00   ...............
	0x0010 56 96 d3 dd 02 08 08 11 00 00 00 00 00 00 00 00  V...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[2]string<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0500000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[2]string<0>+0
	rel 48+8 t=R_ADDR type:string<0>+0
	rel 56+8 t=R_ADDR type:[]string<0>+0
type:*[2]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d5 e5 67 a6 08 08 08 36 00 00 00 00 00 00 00 00  ..g....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64路f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]string-<0>+0
	rel 48+8 t=R_ADDR type:[2]string<0>+0
type:.namedata.*[4][]uint8-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 34 5d 5b 5d 75 69 6e 74 38           ..*[4][]uint8
runtime.gcbits.4902000000000000<0> SRODATA dupok size=8
	0x0000 49 02 00 00 00 00 00 00                          I.......
type:[4][]uint8<0> SRODATA dupok size=72
	0x0000 60 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  `.......P.......
	0x0010 b8 25 fd 70 02 08 08 11 00 00 00 00 00 00 00 00  .%.p............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.4902000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4][]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[4][]uint8<0>+0
	rel 48+8 t=R_ADDR type:[]uint8<0>+0
	rel 56+8 t=R_ADDR type:[][]uint8<0>+0
type:*[4][]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c5 6c 84 51 08 08 08 36 00 00 00 00 00 00 00 00  .l.Q...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64路f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4][]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[4][]uint8<0>+0
type:.namedata.*[4]string-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 34 5d 73 74 72 69 6e 67              ..*[4]string
type:.eqfunc.[4]string<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[4]string<1>+0
runtime.gcbits.5500000000000000<0> SRODATA dupok size=8
	0x0000 55 00 00 00 00 00 00 00                          U.......
type:[4]string<0> SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  @.......8.......
	0x0010 9e 41 ec 08 02 08 08 11 00 00 00 00 00 00 00 00  .A..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[4]string<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.5500000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[4]string<0>+0
	rel 48+8 t=R_ADDR type:string<0>+0
	rel 56+8 t=R_ADDR type:[]string<0>+0
type:*[4]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 72 41 95 a7 08 08 08 36 00 00 00 00 00 00 00 00  rA.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64路f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[4]string-<0>+0
	rel 48+8 t=R_ADDR type:[4]string<0>+0
gclocals路hYXh8R94h8YSj6dF425rfQ==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 04 00 00 00 0b 00                    ..........
gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.combine2string.arginfo1<0> SRODATA static dupok size=15
	0x0000 00 08 fe 08 08 10 08 fd fe 18 08 20 08 fd ff     ........... ...
command-line-arguments.combine2string.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路vXi8VFVnn6c0AV6oT7spEA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 08 00 00 00 ab 00                    ..........
command-line-arguments.combine4string.arginfo1<0> SRODATA static dupok size=27
	0x0000 00 08 fe 08 08 10 08 fd fe 18 08 20 08 fd fe 28  ........... ...(
	0x0010 08 30 08 fd fe 38 08 40 08 fd ff                 .0...8.@...
command-line-arguments.combine4string.argliveinfo<0> SRODATA static dupok size=3
	0x0000 00 00 00                                         ...
gclocals路rWjIF7y3DrTljMawkfzhcA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 05 00 00 00 13 00                    ..........
command-line-arguments.combine2slice.arginfo1<0> SRODATA static dupok size=19
	0x0000 00 08 fe 08 08 10 08 18 08 fd fe 20 08 28 08 30  ........... .(.0
	0x0010 08 fd ff                                         ...
command-line-arguments.combine2slice.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路659RYQbt8kIeiewLUy9umg==<0> SRODATA dupok size=12
	0x0000 02 00 00 00 0b 00 00 00 c9 04 00 00              ............
command-line-arguments.combine4slice.arginfo1<0> SRODATA static dupok size=28
	0x0000 30 08 fe 38 08 40 08 48 08 fd fe 50 08 58 08 60  0..8.@.H...P.X.`
	0x0010 08 fd fe 00 08 08 08 10 08 fd fc ff              ............
command-line-arguments.combine4slice.argliveinfo<0> SRODATA static dupok size=2
	0x0000 30 00                                            0.
gclocals路TjPuuCwdlCpTaRQGRKTrYw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
type:.eq.[2]string.arginfo1<0> SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[2]string.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
type:.eq.[4]string.arginfo1<0> SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[4]string.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.combine2string<0> SDWARFLOC size=186
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 86 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2d 00 00 00 00  ...........-....
	0x0050 00 00 00 06 00 53 93 08 52 93 08 2d 00 00 00 00  .....S..R..-....
	0x0060 00 00 00 86 00 00 00 00 00 00 00 05 00 53 93 08  .............S..
	0x0070 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 86 00 00 00 00 00  ................
	0x00a0 00 00 06 00 55 93 08 54 93 08 00 00 00 00 00 00  ....U..T........
	0x00b0 00 00 00 00 00 00 00 00 00 00                    ..........
	rel 8+8 t=R_ADDR command-line-arguments.combine2string<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.combine2string<1>+0
	rel 138+8 t=R_ADDR command-line-arguments.combine2string<1>+0
aux for command-line-arguments.combine2string<0> SDWARFLINES size=41
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 03 14  ................
	0x0010 0a 55 06 2d 06 76 06 37 08 1c 84 06 30 06 37 06  .U.-.v.7....0.7.
	0x0020 38 03 7d 1f 02 3c 00 01 01                       8.}..<...
	rel 3+8 t=R_ADDR command-line-arguments.combine2string<1>+0
aux for command-line-arguments.combine2string<0> SDWARFFCN size=103
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6d 62 69 6e 65 32  guments.combine2
	0x0020 73 74 72 69 6e 67 00 00 00 00 00 00 00 00 00 00  string..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 09 01 12  ................
	0x0040 70 00 00 09 00 00 00 00 00 00 00 00 12 61 00 00  p............a..
	0x0050 09 00 00 00 00 00 00 00 00 12 62 00 00 09 00 00  ..........b.....
	0x0060 00 00 00 00 00 00 00                             .......
	rel 39+8 t=R_ADDR command-line-arguments.combine2string<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.combine2string<1>+134
	rel 68+4 t=R_DWARFSECREF go:info.*[2]string<0>+0
	rel 72+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 98+4 t=R_DWARFSECREF <0>+130
aux for command-line-arguments.combine4string<0> SDWARFLOC size=321
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 e5 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2e 00 00 00 00  ................
	0x0050 00 00 00 06 00 53 93 08 52 93 08 2e 00 00 00 00  .....S..R.......
	0x0060 00 00 00 e5 00 00 00 00 00 00 00 05 00 53 93 08  .............S..
	0x0070 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 e5 00 00 00 00 00  ................
	0x00a0 00 00 06 00 55 93 08 54 93 08 00 00 00 00 00 00  ....U..T........
	0x00b0 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x00c0 ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 e5 00 00 00 00 00 00 00 06 00 58 93 08 59  ............X..Y
	0x00e0 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 36 00 00 00 00 00  ..........6.....
	0x0110 00 00 06 00 5a 93 08 5b 93 08 36 00 00 00 00 00  ....Z..[..6.....
	0x0120 00 00 e5 00 00 00 00 00 00 00 05 00 5a 93 08 93  ............Z...
	0x0130 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.combine4string<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.combine4string<1>+0
	rel 138+8 t=R_ADDR command-line-arguments.combine4string<1>+0
	rel 194+8 t=R_ADDR command-line-arguments.combine4string<1>+0
	rel 250+8 t=R_ADDR command-line-arguments.combine4string<1>+0
aux for command-line-arguments.combine4string<0> SDWARFLINES size=58
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 0c 14  ................
	0x0010 0a 55 06 2d 06 da 06 37 03 05 6e 03 7a 29 a8 8a  .U.-...7..n.z)..
	0x0020 8a 03 7b a1 06 30 06 37 06 3a 06 37 06 3a 06 37  ..{..0.7.:.7.:.7
	0x0030 06 38 03 77 1f 02 64 00 01 01                    .8.w..d...
	rel 3+8 t=R_ADDR command-line-arguments.combine4string<1>+0
aux for command-line-arguments.combine4string<0> SDWARFFCN size=129
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6d 62 69 6e 65 34  guments.combine4
	0x0020 73 74 72 69 6e 67 00 00 00 00 00 00 00 00 00 00  string..........
	0x0030 00 00 00 00 00 00 00 01 9c 02 00 00 00 12 01 12  ................
	0x0040 70 00 00 12 00 00 00 00 00 00 00 00 12 61 00 00  p............a..
	0x0050 12 00 00 00 00 00 00 00 00 12 62 00 00 12 00 00  ..........b.....
	0x0060 00 00 00 00 00 00 12 63 00 00 12 00 00 00 00 00  .......c........
	0x0070 00 00 00 12 64 00 00 12 00 00 00 00 00 00 00 00  ....d...........
	0x0080 00                                               .
	rel 39+8 t=R_ADDR command-line-arguments.combine4string<1>+0
	rel 47+8 t=R_ADDR command-line-arguments.combine4string<1>+229
	rel 68+4 t=R_DWARFSECREF go:info.*[4]string<0>+0
	rel 72+4 t=R_DWARFSECREF <0>+0
	rel 81+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 85+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 98+4 t=R_DWARFSECREF <0>+130
	rel 107+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 111+4 t=R_DWARFSECREF <0>+186
	rel 120+4 t=R_DWARFSECREF go:info.string<0>+0
	rel 124+4 t=R_DWARFSECREF <0>+242
aux for command-line-arguments.combine2slice<0> SDWARFLOC size=195
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 a5 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 30 00 00 00 00  ...........0....
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 30 00  .....S..R..U..0.
	0x0060 00 00 00 00 00 00 a5 00 00 00 00 00 00 00 08 00  ................
	0x0070 53 93 08 93 08 55 93 08 00 00 00 00 00 00 00 00  S....U..........
	0x0080 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 a5 00 00 00 00 00 00 00 09 00 54 93 08 58 93 08  ..........T..X..
	0x00b0 59 93 08 00 00 00 00 00 00 00 00 00 00 00 00 00  Y...............
	0x00c0 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.combine2slice<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.combine2slice<1>+0
	rel 144+8 t=R_ADDR command-line-arguments.combine2slice<1>+0
aux for command-line-arguments.combine2slice<0> SDWARFLINES size=47
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 1b 14  ................
	0x0010 0a 55 06 2d 06 76 06 37 08 3a 84 06 30 06 37 06  .U.-.v.7.:..0.7.
	0x0020 60 03 7d 1f 06 02 33 ff 06 37 02 05 00 01 01     `.}...3..7.....
	rel 3+8 t=R_ADDR command-line-arguments.combine2slice<1>+0
aux for command-line-arguments.combine2slice<0> SDWARFFCN size=102
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6d 62 69 6e 65 32  guments.combine2
	0x0020 73 6c 69 63 65 00 00 00 00 00 00 00 00 00 00 00  slice...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 21 01 12 70  ............!..p
	0x0040 00 00 21 00 00 00 00 00 00 00 00 12 61 00 00 21  ..!.........a..!
	0x0050 00 00 00 00 00 00 00 00 12 62 00 00 21 00 00 00  .........b..!...
	0x0060 00 00 00 00 00 00                                ......
	rel 38+8 t=R_ADDR command-line-arguments.combine2slice<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.combine2slice<1>+165
	rel 67+4 t=R_DWARFSECREF go:info.*[2][]uint8<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 97+4 t=R_DWARFSECREF <0>+136
aux for command-line-arguments.combine4slice<0> SDWARFLOC size=343
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2e 00 00 00 00  ................
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 2e 00  .....S..R..U....
	0x0060 00 00 00 00 00 00 6e 00 00 00 00 00 00 00 08 00  ......n.........
	0x0070 53 93 08 93 08 55 93 08 6e 00 00 00 00 00 00 00  S....U..n.......
	0x0080 86 00 00 00 00 00 00 00 07 00 53 93 08 93 08 93  ..........S.....
	0x0090 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00  ................
	0x00c0 00 09 00 54 93 08 58 93 08 59 93 08 00 00 00 00  ...T..X..Y......
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff  ................
	0x00e0 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 ff 00 00 00 00 00 00 00 0b 00 9c 93  ................
	0x0100 08 91 08 93 08 91 10 93 08 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff  ................
	0x0120 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 ff 00 00 00 00 00 00 00 0c 00 91 18 93 08 91  ................
	0x0140 20 93 08 91 28 93 08 00 00 00 00 00 00 00 00 00   ...(...........
	0x0150 00 00 00 00 00 00 00                             .......
	rel 8+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
	rel 169+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
	rel 228+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
	rel 289+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
aux for command-line-arguments.combine4slice<0> SDWARFLINES size=59
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 24 14  ..............$.
	0x0010 0a 7d 06 2d 06 76 06 37 03 01 96 44 03 7b 3d bc  .}.-.v.7...D.{=.
	0x0020 8a bc 03 7b b5 06 30 06 37 06 62 06 41 06 bc 06  ...{..0.7.b.A...
	0x0030 41 06 ba 03 77 1f 02 50 00 01 01                 A...w..P...
	rel 3+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
aux for command-line-arguments.combine4slice<0> SDWARFFCN size=128
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 63 6f 6d 62 69 6e 65 34  guments.combine4
	0x0020 73 6c 69 63 65 00 00 00 00 00 00 00 00 00 00 00  slice...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 2a 01 12 70  ............*..p
	0x0040 00 00 2a 00 00 00 00 00 00 00 00 12 61 00 00 2a  ..*.........a..*
	0x0050 00 00 00 00 00 00 00 00 12 62 00 00 2a 00 00 00  .........b..*...
	0x0060 00 00 00 00 00 12 63 00 00 2a 00 00 00 00 00 00  ......c..*......
	0x0070 00 00 12 64 00 00 2a 00 00 00 00 00 00 00 00 00  ...d..*.........
	rel 38+8 t=R_ADDR command-line-arguments.combine4slice<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.combine4slice<1>+255
	rel 67+4 t=R_DWARFSECREF go:info.*[4][]uint8<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 80+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 84+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 97+4 t=R_DWARFSECREF <0>+161
	rel 106+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 110+4 t=R_DWARFSECREF <0>+220
	rel 119+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 123+4 t=R_DWARFSECREF <0>+281
aux for type:.eq.[2]string<0> SDWARFLOC size=141
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00  ........4.......
	0x0020 01 00 50 3c 00 00 00 00 00 00 00 a5 00 00 00 00  ..P<............
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 34 00  ..............4.
	0x0060 00 00 00 00 00 00 01 00 53 3c 00 00 00 00 00 00  ........S<......
	0x0070 00 a5 00 00 00 00 00 00 00 02 00 91 08 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=R_ADDR type:.eq.[2]string<1>+0
	rel 78+8 t=R_ADDR type:.eq.[2]string<1>+0
aux for type:.eq.[2]string<0> SDWARFLINES size=37
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 5f 06  ............s._.
	0x0010 08 87 06 4b 06 c3 06 37 06 08 ff 06 08 19 06 41  ...K...7.......A
	0x0020 02 05 00 01 01                                   .....
	rel 3+8 t=R_ADDR type:.eq.[2]string<1>+0
aux for type:.eq.[2]string<0> SDWARFFCN size=81
	0x0000 03 74 79 70 65 3a 2e 65 71 2e 5b 32 5d 73 74 72  .type:.eq.[2]str
	0x0010 69 6e 67 00 00 00 00 00 00 00 00 00 00 00 00 00  ing.............
	0x0020 00 00 00 00 01 9c 01 00 00 00 01 01 12 70 00 00  .............p..
	0x0030 01 00 00 00 00 00 00 00 00 12 71 00 00 01 00 00  ..........q.....
	0x0040 00 00 00 00 00 00 11 72 00 01 01 00 00 00 00 00  .......r........
	0x0050 00                                               .
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 20+8 t=R_ADDR type:.eq.[2]string<1>+0
	rel 28+8 t=R_ADDR type:.eq.[2]string<1>+165
	rel 49+4 t=R_DWARFSECREF go:info.*[2]string<0>+0
	rel 53+4 t=R_DWARFSECREF <0>+0
	rel 62+4 t=R_DWARFSECREF go:info.*[2]string<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+70
	rel 75+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for type:.eq.[4]string<0> SDWARFLOC size=141
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  ........H.......
	0x0020 01 00 50 50 00 00 00 00 00 00 00 b4 00 00 00 00  ..PP............
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 48 00  ..............H.
	0x0060 00 00 00 00 00 00 01 00 53 50 00 00 00 00 00 00  ........SP......
	0x0070 00 b4 00 00 00 00 00 00 00 02 00 91 08 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=R_ADDR type:.eq.[4]string<1>+0
	rel 78+8 t=R_ADDR type:.eq.[4]string<1>+0
aux for type:.eq.[4]string<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 9b 06 5f 06  .............._.
	0x0010 02 1c ff 06 4b 06 c3 06 37 06 08 ff 02 1e 00 01  ....K...7.......
	0x0020 01                                               .
	rel 3+8 t=R_ADDR type:.eq.[4]string<1>+0
aux for type:.eq.[4]string<0> SDWARFFCN size=81
	0x0000 03 74 79 70 65 3a 2e 65 71 2e 5b 34 5d 73 74 72  .type:.eq.[4]str
	0x0010 69 6e 67 00 00 00 00 00 00 00 00 00 00 00 00 00  ing.............
	0x0020 00 00 00 00 01 9c 01 00 00 00 01 01 12 70 00 00  .............p..
	0x0030 01 00 00 00 00 00 00 00 00 12 71 00 00 01 00 00  ..........q.....
	0x0040 00 00 00 00 00 00 11 72 00 01 01 00 00 00 00 00  .......r........
	0x0050 00                                               .
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 20+8 t=R_ADDR type:.eq.[4]string<1>+0
	rel 28+8 t=R_ADDR type:.eq.[4]string<1>+180
	rel 49+4 t=R_DWARFSECREF go:info.*[4]string<0>+0
	rel 53+4 t=R_DWARFSECREF <0>+0
	rel 62+4 t=R_DWARFSECREF go:info.*[4]string<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+70
	rel 75+4 t=R_DWARFSECREF go:info.bool<0>+0
