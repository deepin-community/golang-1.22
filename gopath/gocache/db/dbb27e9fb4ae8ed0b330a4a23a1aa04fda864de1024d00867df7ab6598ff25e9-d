# command-line-arguments
command-line-arguments.AccessInt1<1> STEXT size=63 args=0x8 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	TEXT	command-line-arguments.AccessInt1(SB), ABIInternal, $32-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	JLS	46
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	FUNCDATA	$5, command-line-arguments.AccessInt1.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	FUNCDATA	$6, command-line-arguments.AccessInt1.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	MOVL	$5, CX
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	LEAQ	type:map[int]int(SB), AX
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	PCDATA	$1, $1
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	CALL	runtime.mapaccess1_fast64(SB)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	MOVQ	(AX), AX
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	ADDQ	$24, SP
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	POPQ	BP
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	RET
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:20)	NOP
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PCDATA	$1, $-1
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PCDATA	$0, $-2
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	MOVQ	AX, 8(SP)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	CALL	runtime.morestack_noctxt(SB)
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	PCDATA	$0, $-1
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	MOVQ	8(SP), AX
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:18)	JMP	0
	0x0000 49 3b 66 10 76 28 55 48 89 e5 48 83 ec 18 48 89  I;f.v(UH..H...H.
	0x0010 c3 b9 05 00 00 00 48 8d 05 00 00 00 00 0f 1f 00  ......H.........
	0x0020 e8 00 00 00 00 48 8b 00 48 83 c4 18 5d c3 48 89  .....H..H...].H.
	0x0030 44 24 08 e8 00 00 00 00 48 8b 44 24 08 eb c1     D$......H.D$...
	rel 25+4 t=R_PCREL type:map[int]int<0>+0
	rel 33+4 t=R_CALL runtime.mapaccess1_fast64<1>+0
	rel 52+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.AccessInt2<1> STEXT size=62 args=0x8 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	TEXT	command-line-arguments.AccessInt2(SB), ABIInternal, $32-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	JLS	45
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	SUBQ	$24, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	FUNCDATA	$5, command-line-arguments.AccessInt2.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	FUNCDATA	$6, command-line-arguments.AccessInt2.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:25)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:25)	MOVL	$5, CX
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:25)	LEAQ	type:map[int]int(SB), AX
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:25)	PCDATA	$1, $1
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:25)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:25)	CALL	runtime.mapaccess2_fast64(SB)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:26)	MOVL	BX, AX
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:26)	ADDQ	$24, SP
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:26)	POPQ	BP
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:26)	RET
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:26)	NOP
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PCDATA	$1, $-1
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PCDATA	$0, $-2
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	MOVQ	AX, 8(SP)
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	CALL	runtime.morestack_noctxt(SB)
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	PCDATA	$0, $-1
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	MOVQ	8(SP), AX
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:23)	JMP	0
	0x0000 49 3b 66 10 76 27 55 48 89 e5 48 83 ec 18 48 89  I;f.v'UH..H...H.
	0x0010 c3 b9 05 00 00 00 48 8d 05 00 00 00 00 0f 1f 00  ......H.........
	0x0020 e8 00 00 00 00 89 d8 48 83 c4 18 5d c3 48 89 44  .......H...].H.D
	0x0030 24 08 e8 00 00 00 00 48 8b 44 24 08 eb c2        $......H.D$...
	rel 25+4 t=R_PCREL type:map[int]int<0>+0
	rel 33+4 t=R_CALL runtime.mapaccess2_fast64<1>+0
	rel 51+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.AccessString1<1> STEXT size=67 args=0x8 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	TEXT	command-line-arguments.AccessString1(SB), ABIInternal, $40-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	JLS	50
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	SUBQ	$32, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	FUNCDATA	$5, command-line-arguments.AccessString1.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	FUNCDATA	$6, command-line-arguments.AccessString1.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	LEAQ	go:string."abc"(SB), CX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	MOVL	$3, DI
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	LEAQ	type:map[string]int(SB), AX
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	PCDATA	$1, $1
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	CALL	runtime.mapaccess1_faststr(SB)
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	MOVQ	(AX), AX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	ADDQ	$32, SP
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	POPQ	BP
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	RET
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:31)	NOP
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PCDATA	$1, $-1
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PCDATA	$0, $-2
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	MOVQ	AX, 8(SP)
	0x0037 00055 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	CALL	runtime.morestack_noctxt(SB)
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	PCDATA	$0, $-1
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	MOVQ	8(SP), AX
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:29)	JMP	0
	0x0000 49 3b 66 10 76 2c 55 48 89 e5 48 83 ec 20 48 89  I;f.v,UH..H.. H.
	0x0010 c3 48 8d 0d 00 00 00 00 bf 03 00 00 00 48 8d 05  .H...........H..
	0x0020 00 00 00 00 e8 00 00 00 00 48 8b 00 48 83 c4 20  .........H..H.. 
	0x0030 5d c3 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  ].H.D$......H.D$
	0x0040 08 eb bd                                         ...
	rel 20+4 t=R_PCREL go:string."abc"<0>+0
	rel 32+4 t=R_PCREL type:map[string]int<0>+0
	rel 37+4 t=R_CALL runtime.mapaccess1_faststr<1>+0
	rel 56+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.AccessString2<1> STEXT size=66 args=0x8 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	TEXT	command-line-arguments.AccessString2(SB), ABIInternal, $40-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	JLS	49
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	SUBQ	$32, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	FUNCDATA	$5, command-line-arguments.AccessString2.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	FUNCDATA	$6, command-line-arguments.AccessString2.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:36)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:36)	LEAQ	go:string."abc"(SB), CX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:36)	MOVL	$3, DI
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:36)	LEAQ	type:map[string]int(SB), AX
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:36)	PCDATA	$1, $1
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:36)	CALL	runtime.mapaccess2_faststr(SB)
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:37)	MOVL	BX, AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:37)	ADDQ	$32, SP
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:37)	POPQ	BP
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:37)	RET
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:37)	NOP
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PCDATA	$1, $-1
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PCDATA	$0, $-2
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	MOVQ	AX, 8(SP)
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	CALL	runtime.morestack_noctxt(SB)
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	PCDATA	$0, $-1
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	MOVQ	8(SP), AX
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:34)	JMP	0
	0x0000 49 3b 66 10 76 2b 55 48 89 e5 48 83 ec 20 48 89  I;f.v+UH..H.. H.
	0x0010 c3 48 8d 0d 00 00 00 00 bf 03 00 00 00 48 8d 05  .H...........H..
	0x0020 00 00 00 00 e8 00 00 00 00 89 d8 48 83 c4 20 5d  ...........H.. ]
	0x0030 c3 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 08  .H.D$......H.D$.
	0x0040 eb be                                            ..
	rel 20+4 t=R_PCREL go:string."abc"<0>+0
	rel 32+4 t=R_PCREL type:map[string]int<0>+0
	rel 37+4 t=R_CALL runtime.mapaccess2_faststr<1>+0
	rel 55+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.LookupStringConversionSimple<1> STEXT size=98 args=0x20 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	TEXT	command-line-arguments.LookupStringConversionSimple(SB), ABIInternal, $40-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	JLS	49
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	SUBQ	$32, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	BX, command-line-arguments.bytes+56(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	FUNCDATA	$5, command-line-arguments.LookupStringConversionSimple.arginfo1(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	FUNCDATA	$6, command-line-arguments.LookupStringConversionSimple.argliveinfo(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PCDATA	$3, $1
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	MOVQ	CX, DI
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	MOVQ	BX, CX
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	MOVQ	AX, BX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	LEAQ	type:map[string]int(SB), AX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	PCDATA	$1, $1
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	CALL	runtime.mapaccess1_faststr(SB)
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	MOVQ	(AX), AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	ADDQ	$32, SP
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	POPQ	BP
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	RET
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:46)	NOP
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PCDATA	$1, $-1
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PCDATA	$0, $-2
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	AX, 8(SP)
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	BX, 16(SP)
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	CX, 24(SP)
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	DI, 32(SP)
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	CALL	runtime.morestack_noctxt(SB)
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	PCDATA	$0, $-1
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	8(SP), AX
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	16(SP), BX
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	24(SP), CX
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	MOVQ	32(SP), DI
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:44)	JMP	0
	0x0000 49 3b 66 10 76 2b 55 48 89 e5 48 83 ec 20 48 89  I;f.v+UH..H.. H.
	0x0010 5c 24 38 48 89 cf 48 89 d9 48 89 c3 48 8d 05 00  \$8H..H..H..H...
	0x0020 00 00 00 e8 00 00 00 00 48 8b 00 48 83 c4 20 5d  ........H..H.. ]
	0x0030 c3 48 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18  .H.D$.H.\$.H.L$.
	0x0040 48 89 7c 24 20 e8 00 00 00 00 48 8b 44 24 08 48  H.|$ .....H.D$.H
	0x0050 8b 5c 24 10 48 8b 4c 24 18 48 8b 7c 24 20 66 90  .\$.H.L$.H.|$ f.
	0x0060 eb 9e                                            ..
	rel 31+4 t=R_PCREL type:map[string]int<0>+0
	rel 36+4 t=R_CALL runtime.mapaccess1_faststr<1>+0
	rel 70+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.LookupStringConversionStructLit<1> STEXT size=98 args=0x20 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	TEXT	command-line-arguments.LookupStringConversionStructLit(SB), ABIInternal, $40-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	JLS	49
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	SUBQ	$32, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	BX, command-line-arguments.bytes+56(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	FUNCDATA	$5, command-line-arguments.LookupStringConversionStructLit.arginfo1(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	FUNCDATA	$6, command-line-arguments.LookupStringConversionStructLit.argliveinfo(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PCDATA	$3, $1
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	MOVQ	CX, DI
	0x0016 00022 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	MOVQ	BX, CX
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	MOVQ	AX, BX
	0x001c 00028 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	LEAQ	type:map[struct { command-line-arguments.string = string }]int(SB), AX
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	PCDATA	$1, $1
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	CALL	runtime.mapaccess1_faststr(SB)
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	MOVQ	(AX), AX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	ADDQ	$32, SP
	0x002f 00047 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	POPQ	BP
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	RET
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:51)	NOP
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PCDATA	$1, $-1
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PCDATA	$0, $-2
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	AX, 8(SP)
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	BX, 16(SP)
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	CX, 24(SP)
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	DI, 32(SP)
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	CALL	runtime.morestack_noctxt(SB)
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	PCDATA	$0, $-1
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	8(SP), AX
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	16(SP), BX
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	24(SP), CX
	0x0059 00089 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	MOVQ	32(SP), DI
	0x005e 00094 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:49)	JMP	0
	0x0000 49 3b 66 10 76 2b 55 48 89 e5 48 83 ec 20 48 89  I;f.v+UH..H.. H.
	0x0010 5c 24 38 48 89 cf 48 89 d9 48 89 c3 48 8d 05 00  \$8H..H..H..H...
	0x0020 00 00 00 e8 00 00 00 00 48 8b 00 48 83 c4 20 5d  ........H..H.. ]
	0x0030 c3 48 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18  .H.D$.H.\$.H.L$.
	0x0040 48 89 7c 24 20 e8 00 00 00 00 48 8b 44 24 08 48  H.|$ .....H.D$.H
	0x0050 8b 5c 24 10 48 8b 4c 24 18 48 8b 7c 24 20 66 90  .\$.H.L$.H.|$ f.
	0x0060 eb 9e                                            ..
	rel 31+4 t=R_PCREL type:map[struct { command-line-arguments.string = string }]int<0>+0
	rel 36+4 t=R_CALL runtime.mapaccess1_faststr<1>+0
	rel 70+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.LookupStringConversionArrayLit<1> STEXT size=127 args=0x20 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	TEXT	command-line-arguments.LookupStringConversionArrayLit(SB), ABIInternal, $64-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	JLS	80
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	SUBQ	$56, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	BX, command-line-arguments.bytes+80(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	FUNCDATA	$1, gclocals·EXTrhv4b3ahawRWAszmcVw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	FUNCDATA	$2, command-line-arguments.LookupStringConversionArrayLit.stkobj(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	FUNCDATA	$5, command-line-arguments.LookupStringConversionArrayLit.arginfo1(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	FUNCDATA	$6, command-line-arguments.LookupStringConversionArrayLit.argliveinfo(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PCDATA	$3, $1
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVUPS	X15, command-line-arguments..autotmp_3+24(SP)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVUPS	X15, command-line-arguments..autotmp_3+40(SP)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVQ	BX, command-line-arguments..autotmp_3+24(SP)
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVQ	CX, command-line-arguments..autotmp_3+32(SP)
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVQ	BX, command-line-arguments..autotmp_3+40(SP)
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVQ	CX, command-line-arguments..autotmp_3+48(SP)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVQ	AX, BX
	0x0036 00054 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	LEAQ	command-line-arguments..autotmp_3+24(SP), CX
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	LEAQ	type:map[[2]string]int(SB), AX
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	PCDATA	$1, $1
	0x0042 00066 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	CALL	runtime.mapaccess1(SB)
	0x0047 00071 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	MOVQ	(AX), AX
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	ADDQ	$56, SP
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	POPQ	BP
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	RET
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:56)	NOP
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PCDATA	$1, $-1
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PCDATA	$0, $-2
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	AX, 8(SP)
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	BX, 16(SP)
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	CX, 24(SP)
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	DI, 32(SP)
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	PCDATA	$0, $-1
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	8(SP), AX
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	16(SP), BX
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	24(SP), CX
	0x0078 00120 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	MOVQ	32(SP), DI
	0x007d 00125 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:54)	JMP	0
	0x0000 49 3b 66 10 76 4a 55 48 89 e5 48 83 ec 38 48 89  I;f.vJUH..H..8H.
	0x0010 5c 24 50 44 0f 11 7c 24 18 44 0f 11 7c 24 28 48  \$PD..|$.D..|$(H
	0x0020 89 5c 24 18 48 89 4c 24 20 48 89 5c 24 28 48 89  .\$.H.L$ H.\$(H.
	0x0030 4c 24 30 48 89 c3 48 8d 4c 24 18 48 8d 05 00 00  L$0H..H.L$.H....
	0x0040 00 00 e8 00 00 00 00 48 8b 00 48 83 c4 38 5d c3  .......H..H..8].
	0x0050 48 89 44 24 08 48 89 5c 24 10 48 89 4c 24 18 48  H.D$.H.\$.H.L$.H
	0x0060 89 7c 24 20 e8 00 00 00 00 48 8b 44 24 08 48 8b  .|$ .....H.D$.H.
	0x0070 5c 24 10 48 8b 4c 24 18 48 8b 7c 24 20 eb 81     \$.H.L$.H.|$ ..
	rel 62+4 t=R_PCREL type:map[[2]string]int<0>+0
	rel 67+4 t=R_CALL runtime.mapaccess1<1>+0
	rel 101+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.LookupStringConversionNestedLit<1> STEXT size=117 args=0x20 locals=0x38 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	TEXT	command-line-arguments.LookupStringConversionNestedLit(SB), ABIInternal, $56-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	JLS	70
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	SUBQ	$48, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	BX, command-line-arguments.bytes+72(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	FUNCDATA	$1, gclocals·AzW08EQV0LVfnDEAZer1Nw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	FUNCDATA	$2, command-line-arguments.LookupStringConversionNestedLit.stkobj(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	FUNCDATA	$5, command-line-arguments.LookupStringConversionNestedLit.arginfo1(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	FUNCDATA	$6, command-line-arguments.LookupStringConversionNestedLit.argliveinfo(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PCDATA	$3, $1
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVUPS	X15, command-line-arguments..autotmp_3+32(SP)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	CX, command-line-arguments..autotmp_3+40(SP)
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	BX, command-line-arguments..autotmp_3+32(SP)
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	command-line-arguments..autotmp_3+32(SP), DX
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	AX, BX
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	CX, DI
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	LEAQ	type:map[[1]struct { command-line-arguments.s [1]string }]int(SB), AX
	0x0035 00053 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	DX, CX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	PCDATA	$1, $1
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	CALL	runtime.mapaccess1_faststr(SB)
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	MOVQ	(AX), AX
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	ADDQ	$48, SP
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	POPQ	BP
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	RET
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:61)	NOP
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PCDATA	$1, $-1
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PCDATA	$0, $-2
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	AX, 8(SP)
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	BX, 16(SP)
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	CX, 24(SP)
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	DI, 32(SP)
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	CALL	runtime.morestack_noctxt(SB)
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	PCDATA	$0, $-1
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	8(SP), AX
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	16(SP), BX
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	24(SP), CX
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	MOVQ	32(SP), DI
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:59)	JMP	0
	0x0000 49 3b 66 10 76 40 55 48 89 e5 48 83 ec 30 48 89  I;f.v@UH..H..0H.
	0x0010 5c 24 48 44 0f 11 7c 24 20 48 89 4c 24 28 48 89  \$HD..|$ H.L$(H.
	0x0020 5c 24 20 48 8b 54 24 20 48 89 c3 48 89 cf 48 8d  \$ H.T$ H..H..H.
	0x0030 05 00 00 00 00 48 89 d1 e8 00 00 00 00 48 8b 00  .....H.......H..
	0x0040 48 83 c4 30 5d c3 48 89 44 24 08 48 89 5c 24 10  H..0].H.D$.H.\$.
	0x0050 48 89 4c 24 18 48 89 7c 24 20 e8 00 00 00 00 48  H.L$.H.|$ .....H
	0x0060 8b 44 24 08 48 8b 5c 24 10 48 8b 4c 24 18 48 8b  .D$.H.\$.H.L$.H.
	0x0070 7c 24 20 eb 8b                                   |$ ..
	rel 49+4 t=R_PCREL type:map[[1]struct { command-line-arguments.s [1]string }]int<0>+0
	rel 57+4 t=R_CALL runtime.mapaccess1_faststr<1>+0
	rel 91+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.LookupStringConversionKeyedArrayLit<1> STEXT size=117 args=0x20 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	TEXT	command-line-arguments.LookupStringConversionKeyedArrayLit(SB), ABIInternal, $64-32
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	JLS	70
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	SUBQ	$56, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	BX, command-line-arguments.bytes+80(FP)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	FUNCDATA	$1, gclocals·EXTrhv4b3ahawRWAszmcVw==(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	FUNCDATA	$2, command-line-arguments.LookupStringConversionKeyedArrayLit.stkobj(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	FUNCDATA	$5, command-line-arguments.LookupStringConversionKeyedArrayLit.arginfo1(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	FUNCDATA	$6, command-line-arguments.LookupStringConversionKeyedArrayLit.argliveinfo(SB)
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PCDATA	$3, $1
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	MOVUPS	X15, command-line-arguments..autotmp_3+24(SP)
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	MOVUPS	X15, command-line-arguments..autotmp_3+40(SP)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	MOVQ	BX, command-line-arguments..autotmp_3+24(SP)
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	MOVQ	CX, command-line-arguments..autotmp_3+32(SP)
	0x0029 00041 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	MOVQ	AX, BX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	LEAQ	command-line-arguments..autotmp_3+24(SP), CX
	0x0031 00049 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	LEAQ	type:map[[2]string]int(SB), AX
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	PCDATA	$1, $1
	0x0038 00056 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	CALL	runtime.mapaccess1(SB)
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	MOVQ	(AX), AX
	0x0040 00064 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	ADDQ	$56, SP
	0x0044 00068 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	POPQ	BP
	0x0045 00069 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	RET
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:66)	NOP
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PCDATA	$1, $-1
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PCDATA	$0, $-2
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	AX, 8(SP)
	0x004b 00075 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	BX, 16(SP)
	0x0050 00080 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	CX, 24(SP)
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	DI, 32(SP)
	0x005a 00090 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	CALL	runtime.morestack_noctxt(SB)
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	PCDATA	$0, $-1
	0x005f 00095 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	8(SP), AX
	0x0064 00100 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	16(SP), BX
	0x0069 00105 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	24(SP), CX
	0x006e 00110 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	MOVQ	32(SP), DI
	0x0073 00115 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:64)	JMP	0
	0x0000 49 3b 66 10 76 40 55 48 89 e5 48 83 ec 38 48 89  I;f.v@UH..H..8H.
	0x0010 5c 24 50 44 0f 11 7c 24 18 44 0f 11 7c 24 28 48  \$PD..|$.D..|$(H
	0x0020 89 5c 24 18 48 89 4c 24 20 48 89 c3 48 8d 4c 24  .\$.H.L$ H..H.L$
	0x0030 18 48 8d 05 00 00 00 00 e8 00 00 00 00 48 8b 00  .H...........H..
	0x0040 48 83 c4 38 5d c3 48 89 44 24 08 48 89 5c 24 10  H..8].H.D$.H.\$.
	0x0050 48 89 4c 24 18 48 89 7c 24 20 e8 00 00 00 00 48  H.L$.H.|$ .....H
	0x0060 8b 44 24 08 48 8b 5c 24 10 48 8b 4c 24 18 48 8b  .D$.H.\$.H.L$.H.
	0x0070 7c 24 20 eb 8b                                   |$ ..
	rel 52+4 t=R_PCREL type:map[[2]string]int<0>+0
	rel 57+4 t=R_CALL runtime.mapaccess1<1>+0
	rel 91+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapClearReflexive<1> STEXT size=52 args=0x8 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	TEXT	command-line-arguments.MapClearReflexive(SB), ABIInternal, $24-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	JLS	35
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	SUBQ	$16, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	FUNCDATA	$5, command-line-arguments.MapClearReflexive.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	FUNCDATA	$6, command-line-arguments.MapClearReflexive.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:78)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:78)	LEAQ	type:map[int]int(SB), AX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:78)	PCDATA	$1, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:78)	CALL	runtime.mapclear(SB)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:81)	ADDQ	$16, SP
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:81)	POPQ	BP
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:81)	RET
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:81)	NOP
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PCDATA	$1, $-1
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PCDATA	$0, $-2
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	MOVQ	AX, 8(SP)
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	CALL	runtime.morestack_noctxt(SB)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	PCDATA	$0, $-1
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	MOVQ	8(SP), AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:75)	JMP	0
	0x0000 49 3b 66 10 76 1d 55 48 89 e5 48 83 ec 10 48 89  I;f.v.UH..H...H.
	0x0010 c3 48 8d 05 00 00 00 00 e8 00 00 00 00 48 83 c4  .H...........H..
	0x0020 10 5d c3 48 89 44 24 08 e8 00 00 00 00 48 8b 44  .].H.D$......H.D
	0x0030 24 08 eb cc                                      $...
	rel 20+4 t=R_PCREL type:map[int]int<0>+0
	rel 25+4 t=R_CALL runtime.mapclear<1>+0
	rel 41+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapClearIndirect<1> STEXT size=52 args=0x8 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	TEXT	command-line-arguments.MapClearIndirect(SB), ABIInternal, $24-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	JLS	35
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	SUBQ	$16, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	FUNCDATA	$5, command-line-arguments.MapClearIndirect.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	FUNCDATA	$6, command-line-arguments.MapClearIndirect.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:87)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:87)	LEAQ	type:map[int]int(SB), AX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:87)	PCDATA	$1, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:87)	CALL	runtime.mapclear(SB)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:90)	ADDQ	$16, SP
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:90)	POPQ	BP
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:90)	RET
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:90)	NOP
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PCDATA	$1, $-1
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PCDATA	$0, $-2
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	MOVQ	AX, 8(SP)
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	CALL	runtime.morestack_noctxt(SB)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	PCDATA	$0, $-1
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	MOVQ	8(SP), AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:83)	JMP	0
	0x0000 49 3b 66 10 76 1d 55 48 89 e5 48 83 ec 10 48 89  I;f.v.UH..H...H.
	0x0010 c3 48 8d 05 00 00 00 00 e8 00 00 00 00 48 83 c4  .H...........H..
	0x0020 10 5d c3 48 89 44 24 08 e8 00 00 00 00 48 8b 44  .].H.D$......H.D
	0x0030 24 08 eb cc                                      $...
	rel 20+4 t=R_PCREL type:map[int]int<0>+0
	rel 25+4 t=R_CALL runtime.mapclear<1>+0
	rel 41+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapClearPointer<1> STEXT size=52 args=0x8 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	TEXT	command-line-arguments.MapClearPointer(SB), ABIInternal, $24-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	JLS	35
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	SUBQ	$16, SP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	FUNCDATA	$5, command-line-arguments.MapClearPointer.arginfo1(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	FUNCDATA	$6, command-line-arguments.MapClearPointer.argliveinfo(SB)
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PCDATA	$3, $1
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:95)	MOVQ	AX, BX
	0x0011 00017 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:95)	LEAQ	type:map[*uint8]int(SB), AX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:95)	PCDATA	$1, $1
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:95)	CALL	runtime.mapclear(SB)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:98)	ADDQ	$16, SP
	0x0021 00033 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:98)	POPQ	BP
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:98)	RET
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:98)	NOP
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PCDATA	$1, $-1
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PCDATA	$0, $-2
	0x0023 00035 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	MOVQ	AX, 8(SP)
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	CALL	runtime.morestack_noctxt(SB)
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	PCDATA	$0, $-1
	0x002d 00045 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	MOVQ	8(SP), AX
	0x0032 00050 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:92)	JMP	0
	0x0000 49 3b 66 10 76 1d 55 48 89 e5 48 83 ec 10 48 89  I;f.v.UH..H...H.
	0x0010 c3 48 8d 05 00 00 00 00 e8 00 00 00 00 48 83 c4  .H...........H..
	0x0020 10 5d c3 48 89 44 24 08 e8 00 00 00 00 48 8b 44  .].H.D$......H.D
	0x0030 24 08 eb cc                                      $...
	rel 20+4 t=R_PCREL type:map[*uint8]int<0>+0
	rel 25+4 t=R_CALL runtime.mapclear<1>+0
	rel 41+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapClearNotReflexive<1> STEXT size=165 args=0x8 locals=0x88 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	TEXT	command-line-arguments.MapClearNotReflexive(SB), ABIInternal, $136-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	LEAQ	-8(SP), R12
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	CMPQ	R12, 16(R14)
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PCDATA	$0, $-2
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	JLS	142
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PCDATA	$0, $-1
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PUSHQ	BP
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	MOVQ	SP, BP
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	ADDQ	$-128, SP
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	FUNCDATA	$0, gclocals·m/6RUmNv6NBhMUL8eleFFA==(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	FUNCDATA	$1, gclocals·u0rpM4ibS2JfD5tEjI8DlA==(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	FUNCDATA	$2, command-line-arguments.MapClearNotReflexive.stkobj(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	FUNCDATA	$5, command-line-arguments.MapClearNotReflexive.arginfo1(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	FUNCDATA	$6, command-line-arguments.MapClearNotReflexive.argliveinfo(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PCDATA	$3, $1
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	MOVQ	AX, command-line-arguments.m+144(SP)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	PCDATA	$3, $-1
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	LEAQ	command-line-arguments..autotmp_3+32(SP), DI
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	PCDATA	$0, $-2
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	LEAQ	-32(DI), DI
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	DUFFZERO	$331
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	PCDATA	$0, $-1
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	MOVQ	AX, BX
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	LEAQ	command-line-arguments..autotmp_3+32(SP), CX
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	LEAQ	type:map[float64]int(SB), AX
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	PCDATA	$1, $1
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	CALL	runtime.mapiterinit(SB)
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	JMP	126
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	MOVSD	(DX), X0
	0x0055 00085 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:104)	MOVSD	X0, command-line-arguments..autotmp_4+24(SP)
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:104)	LEAQ	type:map[float64]int(SB), AX
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:104)	MOVQ	command-line-arguments.m+144(SP), BX
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:104)	LEAQ	command-line-arguments..autotmp_4+24(SP), CX
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:104)	CALL	runtime.mapdelete(SB)
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	LEAQ	command-line-arguments..autotmp_3+32(SP), AX
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	CALL	runtime.mapiternext(SB)
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	MOVQ	command-line-arguments..autotmp_3+32(SP), DX
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	TESTQ	DX, DX
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:103)	JNE	81
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:106)	SUBQ	$-128, SP
	0x008c 00140 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:106)	POPQ	BP
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:106)	RET
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:106)	NOP
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PCDATA	$1, $-1
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PCDATA	$0, $-2
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	MOVQ	AX, 8(SP)
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	CALL	runtime.morestack_noctxt(SB)
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	PCDATA	$0, $-1
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	MOVQ	8(SP), AX
	0x009d 00157 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	NOP
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:100)	JMP	0
	0x0000 4c 8d 64 24 f8 4d 3b 66 10 0f 86 7f 00 00 00 55  L.d$.M;f.......U
	0x0010 48 89 e5 48 83 c4 80 48 89 84 24 90 00 00 00 48  H..H...H..$....H
	0x0020 8d 7c 24 20 48 8d 7f e0 48 89 6c 24 f0 48 8d 6c  .|$ H...H.l$.H.l
	0x0030 24 f0 e8 00 00 00 00 48 8b 6d 00 48 89 c3 48 8d  $......H.m.H..H.
	0x0040 4c 24 20 48 8d 05 00 00 00 00 e8 00 00 00 00 eb  L$ H............
	0x0050 2d f2 0f 10 02 f2 0f 11 44 24 18 48 8d 05 00 00  -.......D$.H....
	0x0060 00 00 48 8b 9c 24 90 00 00 00 48 8d 4c 24 18 e8  ..H..$....H.L$..
	0x0070 00 00 00 00 48 8d 44 24 20 e8 00 00 00 00 48 8b  ....H.D$ .....H.
	0x0080 54 24 20 48 85 d2 75 c9 48 83 ec 80 5d c3 48 89  T$ H..u.H...].H.
	0x0090 44 24 08 e8 00 00 00 00 48 8b 44 24 08 0f 1f 00  D$......H.D$....
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 51+4 t=R_CALL runtime.duffzero<1>+331
	rel 70+4 t=R_PCREL type:map[float64]int<0>+0
	rel 75+4 t=R_CALL runtime.mapiterinit<1>+0
	rel 94+4 t=R_PCREL type:map[float64]int<0>+0
	rel 112+4 t=R_CALL runtime.mapdelete<1>+0
	rel 122+4 t=R_CALL runtime.mapiternext<1>+0
	rel 148+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapClearInterface<1> STEXT size=175 args=0x8 locals=0x90 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	TEXT	command-line-arguments.MapClearInterface(SB), ABIInternal, $144-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	LEAQ	-16(SP), R12
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	CMPQ	R12, 16(R14)
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PCDATA	$0, $-2
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	JLS	155
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PCDATA	$0, $-1
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PUSHQ	BP
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	MOVQ	SP, BP
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	SUBQ	$136, SP
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	FUNCDATA	$0, gclocals·m/6RUmNv6NBhMUL8eleFFA==(SB)
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	FUNCDATA	$1, gclocals·ARY8XWBpjuEursOwYhv9rw==(SB)
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	FUNCDATA	$2, command-line-arguments.MapClearInterface.stkobj(SB)
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	FUNCDATA	$5, command-line-arguments.MapClearInterface.arginfo1(SB)
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	FUNCDATA	$6, command-line-arguments.MapClearInterface.argliveinfo(SB)
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PCDATA	$3, $1
	0x001a 00026 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	MOVQ	AX, command-line-arguments.m+152(SP)
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	PCDATA	$3, $-1
	0x0022 00034 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	LEAQ	command-line-arguments..autotmp_3+40(SP), DI
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	PCDATA	$0, $-2
	0x0027 00039 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	LEAQ	-32(DI), DI
	0x002b 00043 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	DUFFZERO	$331
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	PCDATA	$0, $-1
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	MOVQ	AX, BX
	0x0041 00065 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	LEAQ	command-line-arguments..autotmp_3+40(SP), CX
	0x0046 00070 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	LEAQ	type:map[interface {}]int(SB), AX
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	PCDATA	$1, $1
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	CALL	runtime.mapiterinit(SB)
	0x0052 00082 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	JMP	136
	0x0054 00084 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	MOVQ	(DX), SI
	0x0057 00087 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	MOVQ	8(DX), DX
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:112)	MOVQ	SI, command-line-arguments..autotmp_4+24(SP)
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:112)	MOVQ	DX, command-line-arguments..autotmp_4+32(SP)
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:112)	LEAQ	type:map[interface {}]int(SB), AX
	0x006c 00108 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:112)	MOVQ	command-line-arguments.m+152(SP), BX
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:112)	LEAQ	command-line-arguments..autotmp_4+24(SP), CX
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:112)	CALL	runtime.mapdelete(SB)
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	LEAQ	command-line-arguments..autotmp_3+40(SP), AX
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	CALL	runtime.mapiternext(SB)
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	MOVQ	command-line-arguments..autotmp_3+40(SP), DX
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	TESTQ	DX, DX
	0x0090 00144 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:111)	JNE	84
	0x0092 00146 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:114)	ADDQ	$136, SP
	0x0099 00153 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:114)	POPQ	BP
	0x009a 00154 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:114)	RET
	0x009b 00155 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:114)	NOP
	0x009b 00155 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PCDATA	$1, $-1
	0x009b 00155 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PCDATA	$0, $-2
	0x009b 00155 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	MOVQ	AX, 8(SP)
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	CALL	runtime.morestack_noctxt(SB)
	0x00a5 00165 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	PCDATA	$0, $-1
	0x00a5 00165 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	MOVQ	8(SP), AX
	0x00aa 00170 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:108)	JMP	0
	0x0000 4c 8d 64 24 f0 4d 3b 66 10 0f 86 8c 00 00 00 55  L.d$.M;f.......U
	0x0010 48 89 e5 48 81 ec 88 00 00 00 48 89 84 24 98 00  H..H......H..$..
	0x0020 00 00 48 8d 7c 24 28 48 8d 7f e0 48 89 6c 24 f0  ..H.|$(H...H.l$.
	0x0030 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 89  H.l$......H.m.H.
	0x0040 c3 48 8d 4c 24 28 48 8d 05 00 00 00 00 e8 00 00  .H.L$(H.........
	0x0050 00 00 eb 34 48 8b 32 48 8b 52 08 48 89 74 24 18  ...4H.2H.R.H.t$.
	0x0060 48 89 54 24 20 48 8d 05 00 00 00 00 48 8b 9c 24  H.T$ H......H..$
	0x0070 98 00 00 00 48 8d 4c 24 18 e8 00 00 00 00 48 8d  ....H.L$......H.
	0x0080 44 24 28 e8 00 00 00 00 48 8b 54 24 28 48 85 d2  D$(.....H.T$(H..
	0x0090 75 c2 48 81 c4 88 00 00 00 5d c3 48 89 44 24 08  u.H......].H.D$.
	0x00a0 e8 00 00 00 00 48 8b 44 24 08 e9 51 ff ff ff     .....H.D$..Q...
	rel 54+4 t=R_CALL runtime.duffzero<1>+331
	rel 73+4 t=R_PCREL type:map[interface {}]int<0>+0
	rel 78+4 t=R_CALL runtime.mapiterinit<1>+0
	rel 104+4 t=R_PCREL type:map[interface {}]int<0>+0
	rel 122+4 t=R_CALL runtime.mapdelete<1>+0
	rel 132+4 t=R_CALL runtime.mapiternext<1>+0
	rel 161+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapClearSideEffect<1> STEXT size=165 args=0x8 locals=0x88 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	TEXT	command-line-arguments.MapClearSideEffect(SB), ABIInternal, $136-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	LEAQ	-8(SP), R12
	0x0005 00005 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	CMPQ	R12, 16(R14)
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PCDATA	$0, $-2
	0x0009 00009 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	JLS	142
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PCDATA	$0, $-1
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PUSHQ	BP
	0x0010 00016 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	MOVQ	SP, BP
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	ADDQ	$-128, SP
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	FUNCDATA	$0, gclocals·m/6RUmNv6NBhMUL8eleFFA==(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	FUNCDATA	$1, gclocals·u0rpM4ibS2JfD5tEjI8DlA==(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	FUNCDATA	$2, command-line-arguments.MapClearSideEffect.stkobj(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	FUNCDATA	$5, command-line-arguments.MapClearSideEffect.arginfo1(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	FUNCDATA	$6, command-line-arguments.MapClearSideEffect.argliveinfo(SB)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PCDATA	$3, $1
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	MOVQ	AX, command-line-arguments.m+144(SP)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	PCDATA	$3, $-1
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	LEAQ	command-line-arguments..autotmp_4+32(SP), DI
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	PCDATA	$0, $-2
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	LEAQ	-32(DI), DI
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	DUFFZERO	$331
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	PCDATA	$0, $-1
	0x003b 00059 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	MOVQ	AX, BX
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	LEAQ	command-line-arguments..autotmp_4+32(SP), CX
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	LEAQ	type:map[int]int(SB), AX
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	PCDATA	$1, $1
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	CALL	runtime.mapiterinit(SB)
	0x004f 00079 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	XORL	AX, AX
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	JMP	126
	0x0053 00083 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	MOVQ	(DX), CX
	0x0056 00086 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	MOVQ	CX, command-line-arguments.k+24(SP)
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:121)	LEAQ	type:map[int]int(SB), AX
	0x0062 00098 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:121)	MOVQ	command-line-arguments.m+144(SP), BX
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:121)	CALL	runtime.mapdelete_fast64(SB)
	0x006f 00111 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	LEAQ	command-line-arguments..autotmp_4+32(SP), AX
	0x0074 00116 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	CALL	runtime.mapiternext(SB)
	0x0079 00121 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:123)	MOVQ	command-line-arguments.k+24(SP), AX
	0x007e 00126 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	MOVQ	command-line-arguments..autotmp_4+32(SP), DX
	0x0083 00131 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	TESTQ	DX, DX
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:120)	JNE	83
	0x0088 00136 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:123)	SUBQ	$-128, SP
	0x008c 00140 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:123)	POPQ	BP
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:123)	RET
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:123)	NOP
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PCDATA	$1, $-1
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PCDATA	$0, $-2
	0x008e 00142 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	MOVQ	AX, 8(SP)
	0x0093 00147 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	CALL	runtime.morestack_noctxt(SB)
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	PCDATA	$0, $-1
	0x0098 00152 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	MOVQ	8(SP), AX
	0x009d 00157 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	NOP
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:116)	JMP	0
	0x0000 4c 8d 64 24 f8 4d 3b 66 10 0f 86 7f 00 00 00 55  L.d$.M;f.......U
	0x0010 48 89 e5 48 83 c4 80 48 89 84 24 90 00 00 00 48  H..H...H..$....H
	0x0020 8d 7c 24 20 48 8d 7f e0 48 89 6c 24 f0 48 8d 6c  .|$ H...H.l$.H.l
	0x0030 24 f0 e8 00 00 00 00 48 8b 6d 00 48 89 c3 48 8d  $......H.m.H..H.
	0x0040 4c 24 20 48 8d 05 00 00 00 00 e8 00 00 00 00 31  L$ H...........1
	0x0050 c0 eb 2b 48 8b 0a 48 89 4c 24 18 48 8d 05 00 00  ..+H..H.L$.H....
	0x0060 00 00 48 8b 9c 24 90 00 00 00 e8 00 00 00 00 48  ..H..$.........H
	0x0070 8d 44 24 20 e8 00 00 00 00 48 8b 44 24 18 48 8b  .D$ .....H.D$.H.
	0x0080 54 24 20 48 85 d2 75 cb 48 83 ec 80 5d c3 48 89  T$ H..u.H...].H.
	0x0090 44 24 08 e8 00 00 00 00 48 8b 44 24 08 0f 1f 00  D$......H.D$....
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 51+4 t=R_CALL runtime.duffzero<1>+331
	rel 70+4 t=R_PCREL type:map[int]int<0>+0
	rel 75+4 t=R_CALL runtime.mapiterinit<1>+0
	rel 94+4 t=R_PCREL type:map[int]int<0>+0
	rel 107+4 t=R_CALL runtime.mapdelete_fast64<1>+0
	rel 117+4 t=R_CALL runtime.mapiternext<1>+0
	rel 148+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.MapLiteralSizing<1> STEXT size=266 args=0x8 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	TEXT	command-line-arguments.MapLiteralSizing(SB), ABIInternal, $64-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	JLS	253
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PCDATA	$0, $-1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PUSHQ	BP
	0x000b 00011 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	MOVQ	SP, BP
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	SUBQ	$56, SP
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	FUNCDATA	$0, gclocals·ykHN0vawYuq1dUW4zEe2gA==(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	FUNCDATA	$1, gclocals·sQxO+jiYy+d9ldxoWSePwQ==(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	FUNCDATA	$5, command-line-arguments.MapLiteralSizing.arginfo1(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	FUNCDATA	$6, command-line-arguments.MapLiteralSizing.argliveinfo(SB)
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PCDATA	$3, $1
	0x0012 00018 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	LEAQ	type:map[int]int(SB), AX
	0x0019 00025 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVL	$33, BX
	0x001e 00030 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	XORL	CX, CX
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	PCDATA	$1, $0
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	CALL	runtime.makemap(SB)
	0x0025 00037 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	AX, command-line-arguments.m+48(SP)
	0x002a 00042 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	XORL	CX, CX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	JMP	128
	0x002e 00046 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	CX, command-line-arguments..autotmp_13+32(SP)
	0x0033 00051 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	LEAQ	command-line-arguments..stmp_1(SB), DX
	0x003a 00058 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	(DX)(CX*8), SI
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	SI, command-line-arguments..autotmp_14+24(SP)
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	LEAQ	command-line-arguments..stmp_0(SB), DI
	0x004a 00074 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	(DI)(CX*8), R8
	0x004e 00078 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	AX, BX
	0x0051 00081 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	LEAQ	type:map[int]int(SB), AX
	0x0058 00088 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	R8, CX
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	PCDATA	$1, $1
	0x005b 00091 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	NOP
	0x0060 00096 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	CALL	runtime.mapassign_fast64(SB)
	0x0065 00101 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	command-line-arguments..autotmp_14+24(SP), DX
	0x006a 00106 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	DX, (AX)
	0x006d 00109 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	command-line-arguments..autotmp_13+32(SP), CX
	0x0072 00114 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	INCQ	CX
	0x0075 00117 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	MOVQ	command-line-arguments.m+48(SP), AX
	0x007a 00122 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	NOP
	0x0080 00128 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	CMPQ	CX, $33
	0x0084 00132 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:129)	JLT	46
	0x0086 00134 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	LEAQ	type:map[int]int(SB), AX
	0x008d 00141 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVL	$33, BX
	0x0092 00146 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	XORL	CX, CX
	0x0094 00148 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	CALL	runtime.makemap(SB)
	0x0099 00153 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	AX, command-line-arguments.n+40(SP)
	0x009e 00158 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	XORL	CX, CX
	0x00a0 00160 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	JMP	233
	0x00a2 00162 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	CX, command-line-arguments..autotmp_13+32(SP)
	0x00a7 00167 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	LEAQ	command-line-arguments..stmp_3(SB), DX
	0x00ae 00174 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	(DX)(CX*8), SI
	0x00b2 00178 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	SI, command-line-arguments..autotmp_14+24(SP)
	0x00b7 00183 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	LEAQ	command-line-arguments..stmp_2(SB), DI
	0x00be 00190 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	(DI)(CX*8), R8
	0x00c2 00194 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	AX, BX
	0x00c5 00197 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	LEAQ	type:map[int]int(SB), AX
	0x00cc 00204 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	R8, CX
	0x00cf 00207 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	PCDATA	$1, $2
	0x00cf 00207 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	CALL	runtime.mapassign_fast64(SB)
	0x00d4 00212 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	command-line-arguments..autotmp_14+24(SP), DX
	0x00d9 00217 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	DX, (AX)
	0x00dc 00220 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	command-line-arguments..autotmp_13+32(SP), CX
	0x00e1 00225 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	INCQ	CX
	0x00e4 00228 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	MOVQ	command-line-arguments.n+40(SP), AX
	0x00e9 00233 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	CMPQ	CX, $33
	0x00ed 00237 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:165)	JLT	162
	0x00ef 00239 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:200)	MOVQ	AX, BX
	0x00f2 00242 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:200)	MOVQ	command-line-arguments.m+48(SP), AX
	0x00f7 00247 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:200)	ADDQ	$56, SP
	0x00fb 00251 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:200)	POPQ	BP
	0x00fc 00252 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:200)	RET
	0x00fd 00253 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:200)	NOP
	0x00fd 00253 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PCDATA	$1, $-1
	0x00fd 00253 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PCDATA	$0, $-2
	0x00fd 00253 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	NOP
	0x0100 00256 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	CALL	runtime.morestack_noctxt(SB)
	0x0105 00261 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	PCDATA	$0, $-1
	0x0105 00261 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/maps.go:126)	JMP	0
	0x0000 49 3b 66 10 0f 86 f3 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 38 48 8d 05 00 00 00 00 bb 21 00 00 00 31 c9  .8H.......!...1.
	0x0020 e8 00 00 00 00 48 89 44 24 30 31 c9 eb 52 48 89  .....H.D$01..RH.
	0x0030 4c 24 20 48 8d 15 00 00 00 00 48 8b 34 ca 48 89  L$ H......H.4.H.
	0x0040 74 24 18 48 8d 3d 00 00 00 00 4c 8b 04 cf 48 89  t$.H.=....L...H.
	0x0050 c3 48 8d 05 00 00 00 00 4c 89 c1 0f 1f 44 00 00  .H......L....D..
	0x0060 e8 00 00 00 00 48 8b 54 24 18 48 89 10 48 8b 4c  .....H.T$.H..H.L
	0x0070 24 20 48 ff c1 48 8b 44 24 30 66 0f 1f 44 00 00  $ H..H.D$0f..D..
	0x0080 48 83 f9 21 7c a8 48 8d 05 00 00 00 00 bb 21 00  H..!|.H.......!.
	0x0090 00 00 31 c9 e8 00 00 00 00 48 89 44 24 28 31 c9  ..1......H.D$(1.
	0x00a0 eb 47 48 89 4c 24 20 48 8d 15 00 00 00 00 48 8b  .GH.L$ H......H.
	0x00b0 34 ca 48 89 74 24 18 48 8d 3d 00 00 00 00 4c 8b  4.H.t$.H.=....L.
	0x00c0 04 cf 48 89 c3 48 8d 05 00 00 00 00 4c 89 c1 e8  ..H..H......L...
	0x00d0 00 00 00 00 48 8b 54 24 18 48 89 10 48 8b 4c 24  ....H.T$.H..H.L$
	0x00e0 20 48 ff c1 48 8b 44 24 28 48 83 f9 21 7c b3 48   H..H.D$(H..!|.H
	0x00f0 89 c3 48 8b 44 24 30 48 83 c4 38 5d c3 0f 1f 00  ..H.D$0H..8]....
	0x0100 e8 00 00 00 00 e9 f6 fe ff ff                    ..........
	rel 21+4 t=R_PCREL type:map[int]int<0>+0
	rel 33+4 t=R_CALL runtime.makemap<1>+0
	rel 54+4 t=R_PCREL command-line-arguments..stmp_1<0>+0
	rel 70+4 t=R_PCREL command-line-arguments..stmp_0<0>+0
	rel 84+4 t=R_PCREL type:map[int]int<0>+0
	rel 97+4 t=R_CALL runtime.mapassign_fast64<1>+0
	rel 137+4 t=R_PCREL type:map[int]int<0>+0
	rel 149+4 t=R_CALL runtime.makemap<1>+0
	rel 170+4 t=R_PCREL command-line-arguments..stmp_3<0>+0
	rel 186+4 t=R_PCREL command-line-arguments..stmp_2<0>+0
	rel 200+4 t=R_PCREL type:map[int]int<0>+0
	rel 208+4 t=R_CALL runtime.mapassign_fast64<1>+0
	rel 257+4 t=R_CALL runtime.morestack_noctxt<0>+0
type:.eq.[2]string<1> STEXT dupok size=165 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[2]string(SB), DUPOK|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	130
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$32, SP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals·TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[2]string.arginfo1(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[2]string.argliveinfo(SB)
	0x000e 00014 (<autogenerated>:1)	PCDATA	$3, $1
	0x000e 00014 (<autogenerated>:1)	MOVQ	8(AX), DX
	0x0012 00018 (<autogenerated>:1)	CMPQ	8(BX), DX
	0x0016 00022 (<autogenerated>:1)	JNE	52
	0x0018 00024 (<autogenerated>:1)	MOVQ	24(AX), DX
	0x001c 00028 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	CMPQ	24(BX), DX
	0x0024 00036 (<autogenerated>:1)	JNE	52
	0x0026 00038 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.p+48(SP)
	0x002b 00043 (<autogenerated>:1)	MOVQ	BX, command-line-arguments.q+56(SP)
	0x0030 00048 (<autogenerated>:1)	PCDATA	$3, $-1
	0x0030 00048 (<autogenerated>:1)	XORL	CX, CX
	0x0032 00050 (<autogenerated>:1)	JMP	78
	0x0034 00052 (<autogenerated>:1)	PCDATA	$3, $1
	0x0034 00052 (<autogenerated>:1)	XORL	AX, AX
	0x0036 00054 (<autogenerated>:1)	ADDQ	$32, SP
	0x003a 00058 (<autogenerated>:1)	POPQ	BP
	0x003b 00059 (<autogenerated>:1)	RET
	0x003c 00060 (<autogenerated>:1)	PCDATA	$3, $-1
	0x003c 00060 (<autogenerated>:1)	MOVQ	command-line-arguments..autotmp_9+24(SP), CX
	0x0041 00065 (<autogenerated>:1)	INCQ	CX
	0x0044 00068 (<autogenerated>:1)	MOVQ	command-line-arguments.p+48(SP), AX
	0x0049 00073 (<autogenerated>:1)	MOVQ	command-line-arguments.q+56(SP), BX
	0x004e 00078 (<autogenerated>:1)	CMPQ	CX, $2
	0x0052 00082 (<autogenerated>:1)	JGE	123
	0x0054 00084 (<autogenerated>:1)	MOVQ	CX, command-line-arguments..autotmp_9+24(SP)
	0x0059 00089 (<autogenerated>:1)	SHLQ	$4, CX
	0x005d 00093 (<autogenerated>:1)	MOVQ	(CX)(AX*1), SI
	0x0061 00097 (<autogenerated>:1)	MOVQ	(CX)(BX*1), DI
	0x0065 00101 (<autogenerated>:1)	MOVQ	8(AX)(CX*1), CX
	0x006a 00106 (<autogenerated>:1)	MOVQ	SI, AX
	0x006d 00109 (<autogenerated>:1)	MOVQ	DI, BX
	0x0070 00112 (<autogenerated>:1)	PCDATA	$1, $0
	0x0070 00112 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0075 00117 (<autogenerated>:1)	TESTB	AL, AL
	0x0077 00119 (<autogenerated>:1)	JNE	60
	0x0079 00121 (<autogenerated>:1)	JMP	52
	0x007b 00123 (<autogenerated>:1)	MOVL	$1, AX
	0x0080 00128 (<autogenerated>:1)	JMP	54
	0x0082 00130 (<autogenerated>:1)	NOP
	0x0082 00130 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0082 00130 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0082 00130 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0087 00135 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x008c 00140 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0091 00145 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0091 00145 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0096 00150 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x009b 00155 (<autogenerated>:1)	NOP
	0x00a0 00160 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 76 7c 55 48 89 e5 48 83 ec 20 48 8b  I;f.v|UH..H.. H.
	0x0010 50 08 48 39 53 08 75 1c 48 8b 50 18 0f 1f 40 00  P.H9S.u.H.P...@.
	0x0020 48 39 53 18 75 0e 48 89 44 24 30 48 89 5c 24 38  H9S.u.H.D$0H.\$8
	0x0030 31 c9 eb 1a 31 c0 48 83 c4 20 5d c3 48 8b 4c 24  1...1.H.. ].H.L$
	0x0040 18 48 ff c1 48 8b 44 24 30 48 8b 5c 24 38 48 83  .H..H.D$0H.\$8H.
	0x0050 f9 02 7d 27 48 89 4c 24 18 48 c1 e1 04 48 8b 34  ..}'H.L$.H...H.4
	0x0060 01 48 8b 3c 19 48 8b 4c 08 08 48 89 f0 48 89 fb  .H.<.H.L..H..H..
	0x0070 e8 00 00 00 00 84 c0 75 c3 eb b9 b8 01 00 00 00  .......u........
	0x0080 eb b4 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00  ..H.D$.H.\$.....
	0x0090 00 48 8b 44 24 08 48 8b 5c 24 10 0f 1f 44 00 00  .H.D$.H.\$...D..
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 113+4 t=R_CALL runtime.memequal<1>+0
	rel 141+4 t=R_CALL runtime.morestack_noctxt<0>+0
type:.hash.[2]string<1> STEXT dupok size=106 args=0x10 locals=0x20 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.hash.[2]string(SB), DUPOK|ABIInternal, $32-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	79
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$24, SP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$5, type:.hash.[2]string.arginfo1(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$6, type:.hash.[2]string.argliveinfo(SB)
	0x000e 00014 (<autogenerated>:1)	PCDATA	$3, $1
	0x000e 00014 (<autogenerated>:1)	MOVQ	AX, command-line-arguments.p+40(SP)
	0x0013 00019 (<autogenerated>:1)	PCDATA	$3, $2
	0x0013 00019 (<autogenerated>:1)	XORL	CX, CX
	0x0015 00021 (<autogenerated>:1)	JMP	64
	0x0017 00023 (<autogenerated>:1)	MOVQ	CX, command-line-arguments..autotmp_5+16(SP)
	0x001c 00028 (<autogenerated>:1)	SHLQ	$4, CX
	0x0020 00032 (<autogenerated>:1)	ADDQ	AX, CX
	0x0023 00035 (<autogenerated>:1)	MOVQ	CX, AX
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x002b 00043 (<autogenerated>:1)	MOVQ	command-line-arguments..autotmp_5+16(SP), CX
	0x0030 00048 (<autogenerated>:1)	INCQ	CX
	0x0033 00051 (<autogenerated>:1)	MOVQ	AX, BX
	0x0036 00054 (<autogenerated>:1)	MOVQ	command-line-arguments.p+40(SP), AX
	0x003b 00059 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CMPQ	CX, $2
	0x0044 00068 (<autogenerated>:1)	JLT	23
	0x0046 00070 (<autogenerated>:1)	MOVQ	BX, AX
	0x0049 00073 (<autogenerated>:1)	ADDQ	$24, SP
	0x004d 00077 (<autogenerated>:1)	POPQ	BP
	0x004e 00078 (<autogenerated>:1)	RET
	0x004f 00079 (<autogenerated>:1)	NOP
	0x004f 00079 (<autogenerated>:1)	PCDATA	$1, $-1
	0x004f 00079 (<autogenerated>:1)	PCDATA	$0, $-2
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0059 00089 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0063 00099 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x0068 00104 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 76 49 55 48 89 e5 48 83 ec 18 48 89  I;f.vIUH..H...H.
	0x0010 44 24 28 31 c9 eb 29 48 89 4c 24 10 48 c1 e1 04  D$(1..)H.L$.H...
	0x0020 48 01 c1 48 89 c8 e8 00 00 00 00 48 8b 4c 24 10  H..H.......H.L$.
	0x0030 48 ff c1 48 89 c3 48 8b 44 24 28 0f 1f 44 00 00  H..H..H.D$(..D..
	0x0040 48 83 f9 02 7c d1 48 89 d8 48 83 c4 18 5d c3 48  H...|.H..H...].H
	0x0050 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00 48 8b  .D$.H.\$......H.
	0x0060 44 24 08 48 8b 5c 24 10 eb 96                    D$.H.\$...
	rel 39+4 t=R_CALL runtime.strhash<1>+0
	rel 90+4 t=R_CALL runtime.morestack_noctxt<0>+0
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*map[*uint8]int-<0> SRODATA dupok size=17
	0x0000 00 0f 2a 6d 61 70 5b 2a 75 69 6e 74 38 5d 69 6e  ..*map[*uint8]in
	0x0010 74                                               t
type:*map[*uint8]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 77 14 e2 b2 08 08 08 36 00 00 00 00 00 00 00 00  w......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[*uint8]int-<0>+0
	rel 48+8 t=R_ADDR type:map[*uint8]int<0>+0
type:.namedata.*map.bucket[*uint8]int-<0> SRODATA dupok size=24
	0x0000 00 16 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 2a 75  ..*map.bucket[*u
	0x0010 69 6e 74 38 5d 69 6e 74                          int8]int
type:*map.bucket[*uint8]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 3e c0 2d 67 08 08 08 36 00 00 00 00 00 00 00 00  >.-g...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[*uint8]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[*uint8]int<0>+0
runtime.gcbits.fe01020000000000<0> SRODATA dupok size=8
	0x0000 fe 01 02 00 00 00 00 00                          ........
type:.namedata.*[8]uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 38 5d 75 69 6e 74 38                 ..*[8]uint8
type:*[8]uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f8 9a 95 1a 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]uint8-<0>+0
	rel 48+8 t=R_ADDR type:[8]uint8<0>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:[8]uint8<0> SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 89 18 9c b4 0a 01 01 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]uint8<0>+0
	rel 48+8 t=R_ADDR type:uint8<0>+0
	rel 56+8 t=R_ADDR type:[]uint8<0>+0
type:.namedata.*[8]*uint8-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 38 5d 2a 75 69 6e 74 38              ..*[8]*uint8
type:*[8]*uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 60 86 d7 63 08 08 08 36 00 00 00 00 00 00 00 00  `..c...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]*uint8-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8]*uint8<0>+0
runtime.gcbits.ff00000000000000<0> SRODATA dupok size=8
	0x0000 ff 00 00 00 00 00 00 00                          ........
type:.namedata.*[]*uint8-<0> SRODATA dupok size=11
	0x0000 00 09 2a 5b 5d 2a 75 69 6e 74 38                 ..*[]*uint8
type:*[]*uint8<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 67 fe fa 66 08 08 08 36 00 00 00 00 00 00 00 00  g..f...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]*uint8-<0>+0
	rel 48+8 t=R_ADDR type:[]*uint8<0>+0
type:[]*uint8<0> SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 10 e5 81 e8 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]*uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[]*uint8<0>+0
	rel 48+8 t=R_ADDR type:*uint8<0>+0
type:noalg.[8]*uint8<0> SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  @.......@.......
	0x0010 1c 2e 65 6a 02 08 08 11 00 00 00 00 00 00 00 00  ..ej............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.ff00000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]*uint8-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]*uint8<0>+0
	rel 48+8 t=R_ADDR type:*uint8<0>+0
	rel 56+8 t=R_ADDR type:[]*uint8<0>+0
type:.namedata.*[8]int-<0> SRODATA dupok size=9
	0x0000 00 07 2a 5b 38 5d 69 6e 74                       ..*[8]int
type:*[8]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b2 24 38 0a 08 08 08 36 00 00 00 00 00 00 00 00  .$8....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8]int<0>+0
type:noalg.[8]int<0> SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 94 48 d7 e9 02 08 08 11 00 00 00 00 00 00 00 00  .H..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
	rel 56+8 t=R_ADDR type:[]int<0>+0
type:.importpath..<0> SRODATA dupok size=2
	0x0000 00 00                                            ..
type:.namedata.topbits-<0> SRODATA dupok size=9
	0x0000 00 07 74 6f 70 62 69 74 73                       ..topbits
type:.namedata.keys-<0> SRODATA dupok size=6
	0x0000 00 04 6b 65 79 73                                ..keys
type:.namedata.elems-<0> SRODATA dupok size=7
	0x0000 00 05 65 6c 65 6d 73                             ..elems
type:.namedata.overflow-<0> SRODATA dupok size=10
	0x0000 00 08 6f 76 65 72 66 6c 6f 77                    ..overflow
type:noalg.map.bucket[*uint8]int<0> SRODATA dupok size=176
	0x0000 90 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0010 8f cc df 80 02 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00a0 00 00 00 00 00 00 00 00 88 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.fe01020000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[*uint8]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[*uint8]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[*uint8]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8]*uint8<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:unsafe.Pointer<0>+0
runtime.memhash64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memhash64<1>+0
type:map[*uint8]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 21 c6 fc c2 02 08 08 35 00 00 00 00 00 00 00 00  !......5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 08 90 00 04 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[*uint8]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[*uint8]int<0>+0
	rel 48+8 t=R_ADDR type:*uint8<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[*uint8]int<0>+0
	rel 72+8 t=R_ADDR runtime.memhash64·f<0>+0
type:.namedata.*map[[1]struct { s [1]string }]int-<0> SRODATA dupok size=36
	0x0000 00 22 2a 6d 61 70 5b 5b 31 5d 73 74 72 75 63 74  ."*map[[1]struct
	0x0010 20 7b 20 73 20 5b 31 5d 73 74 72 69 6e 67 20 7d   { s [1]string }
	0x0020 5d 69 6e 74                                      ]int
type:*map[[1]struct { command-line-arguments.s [1]string }]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ea 2f 4d 22 08 08 08 36 00 00 00 00 00 00 00 00  ./M"...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[[1]struct { s [1]string }]int-<0>+0
	rel 48+8 t=R_ADDR type:map[[1]struct { command-line-arguments.s [1]string }]int<0>+0
runtime.strequal·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.strequal<1>+0
type:.namedata.*[1]struct { s [1]string }-<0> SRODATA dupok size=28
	0x0000 00 1a 2a 5b 31 5d 73 74 72 75 63 74 20 7b 20 73  ..*[1]struct { s
	0x0010 20 5b 31 5d 73 74 72 69 6e 67 20 7d               [1]string }
type:*[1]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a8 b3 56 53 08 08 08 36 00 00 00 00 00 00 00 00  ..VS...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]struct { s [1]string }-<0>+0
	rel 48+8 t=R_ADDR type:[1]struct { command-line-arguments.s [1]string }<0>+0
type:.namedata.*struct { s [1]string }-<0> SRODATA dupok size=25
	0x0000 00 17 2a 73 74 72 75 63 74 20 7b 20 73 20 5b 31  ..*struct { s [1
	0x0010 5d 73 74 72 69 6e 67 20 7d                       ]string }
type:*struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 28 42 36 0b 08 08 08 36 00 00 00 00 00 00 00 00  (B6....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { s [1]string }-<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.s [1]string }<0>+0
type:.namedata.*[1]string-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 31 5d 73 74 72 69 6e 67              ..*[1]string
type:*[1]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 71 d9 f3 ae 08 08 08 36 00 00 00 00 00 00 00 00  q......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]string-<0>+0
	rel 48+8 t=R_ADDR type:[1]string<0>+0
type:[1]string<0> SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1f 6b 63 d1 02 08 08 11 00 00 00 00 00 00 00 00  .kc.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.strequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[1]string<0>+0
	rel 48+8 t=R_ADDR type:string<0>+0
	rel 56+8 t=R_ADDR type:[]string<0>+0
type:.importpath.command-line-arguments.<0> SRODATA dupok size=24
	0x0000 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61  ..command-line-a
	0x0010 72 67 75 6d 65 6e 74 73                          rguments
type:.namedata.s-<0> SRODATA dupok size=3
	0x0000 00 01 73                                         ..s
type:struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=104
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 29 40 7c 0b 02 08 08 19 00 00 00 00 00 00 00 00  )@|.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.strequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { s [1]string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*struct { command-line-arguments.s [1]string }<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:struct { command-line-arguments.s [1]string }<0>+80
	rel 80+8 t=R_ADDR type:.namedata.s-<0>+0
	rel 88+8 t=R_ADDR type:[1]string<0>+0
type:.namedata.*[]struct { s [1]string }-<0> SRODATA dupok size=27
	0x0000 00 19 2a 5b 5d 73 74 72 75 63 74 20 7b 20 73 20  ..*[]struct { s 
	0x0010 5b 31 5d 73 74 72 69 6e 67 20 7d                 [1]string }
type:*[]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 72 51 1b 67 08 08 08 36 00 00 00 00 00 00 00 00  rQ.g...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]struct { s [1]string }-<0>+0
	rel 48+8 t=R_ADDR type:[]struct { command-line-arguments.s [1]string }<0>+0
type:[]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 84 f9 e7 b1 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]struct { s [1]string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[]struct { command-line-arguments.s [1]string }<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.s [1]string }<0>+0
type:[1]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 29 11 c3 de 02 08 08 11 00 00 00 00 00 00 00 00  )...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.strequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]struct { s [1]string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[1]struct { command-line-arguments.s [1]string }<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.s [1]string }<0>+0
	rel 56+8 t=R_ADDR type:[]struct { command-line-arguments.s [1]string }<0>+0
type:.namedata.*map.bucket[[1]struct { s [1]string }]int-<0> SRODATA dupok size=43
	0x0000 00 29 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 5b 31  .)*map.bucket[[1
	0x0010 5d 73 74 72 75 63 74 20 7b 20 73 20 5b 31 5d 73  ]struct { s [1]s
	0x0020 74 72 69 6e 67 20 7d 5d 69 6e 74                 tring }]int
type:*map.bucket[[1]struct { command-line-arguments.s [1]string }]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 57 08 1c 87 08 08 08 36 00 00 00 00 00 00 00 00  W......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[[1]struct { s [1]string }]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[[1]struct { command-line-arguments.s [1]string }]int<0>+0
runtime.gcbits.aaaa000200000000<0> SRODATA dupok size=8
	0x0000 aa aa 00 02 00 00 00 00                          ........
type:.namedata.*[8][1]struct { s [1]string }-<0> SRODATA dupok size=31
	0x0000 00 1d 2a 5b 38 5d 5b 31 5d 73 74 72 75 63 74 20  ..*[8][1]struct 
	0x0010 7b 20 73 20 5b 31 5d 73 74 72 69 6e 67 20 7d     { s [1]string }
type:*[8][1]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 3c 4b 45 76 08 08 08 36 00 00 00 00 00 00 00 00  <KEv...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8][1]struct { s [1]string }-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8][1]struct { command-line-arguments.s [1]string }<0>+0
runtime.gcbits.5555000000000000<0> SRODATA dupok size=8
	0x0000 55 55 00 00 00 00 00 00                          UU......
type:.namedata.*[][1]struct { s [1]string }-<0> SRODATA dupok size=30
	0x0000 00 1c 2a 5b 5d 5b 31 5d 73 74 72 75 63 74 20 7b  ..*[][1]struct {
	0x0010 20 73 20 5b 31 5d 73 74 72 69 6e 67 20 7d         s [1]string }
type:*[][1]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b4 a1 2a e9 08 08 08 36 00 00 00 00 00 00 00 00  ..*....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[][1]struct { s [1]string }-<0>+0
	rel 48+8 t=R_ADDR type:[][1]struct { command-line-arguments.s [1]string }<0>+0
type:[][1]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 84 0c 7a 99 02 08 08 17 00 00 00 00 00 00 00 00  ..z.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[][1]struct { s [1]string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[][1]struct { command-line-arguments.s [1]string }<0>+0
	rel 48+8 t=R_ADDR type:[1]struct { command-line-arguments.s [1]string }<0>+0
type:noalg.[8][1]struct { command-line-arguments.s [1]string }<0> SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 07 e2 bd 85 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.5555000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8][1]struct { s [1]string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8][1]struct { command-line-arguments.s [1]string }<0>+0
	rel 48+8 t=R_ADDR type:[1]struct { command-line-arguments.s [1]string }<0>+0
	rel 56+8 t=R_ADDR type:[][1]struct { command-line-arguments.s [1]string }<0>+0
type:noalg.map.bucket[[1]struct { command-line-arguments.s [1]string }]int<0> SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 32 7c 67 81 02 08 08 19 00 00 00 00 00 00 00 00  2|g.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 88 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 c8 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.aaaa000200000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[[1]struct { s [1]string }]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[[1]struct { command-line-arguments.s [1]string }]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[[1]struct { command-line-arguments.s [1]string }]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8][1]struct { command-line-arguments.s [1]string }<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:unsafe.Pointer<0>+0
runtime.strhash·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.strhash<1>+0
type:map[[1]struct { command-line-arguments.s [1]string }]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 34 32 42 ad 02 08 08 35 00 00 00 00 00 00 00 00  42B....5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[[1]struct { s [1]string }]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[[1]struct { command-line-arguments.s [1]string }]int<0>+0
	rel 48+8 t=R_ADDR type:[1]struct { command-line-arguments.s [1]string }<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[[1]struct { command-line-arguments.s [1]string }]int<0>+0
	rel 72+8 t=R_ADDR runtime.strhash·f<0>+0
type:.namedata.*map[[2]string]int-<0> SRODATA dupok size=20
	0x0000 00 12 2a 6d 61 70 5b 5b 32 5d 73 74 72 69 6e 67  ..*map[[2]string
	0x0010 5d 69 6e 74                                      ]int
type:*map[[2]string]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bc 3a b5 0a 08 08 08 36 00 00 00 00 00 00 00 00  .:.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[[2]string]int-<0>+0
	rel 48+8 t=R_ADDR type:map[[2]string]int<0>+0
type:.eqfunc.[2]string<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[2]string<1>+0
type:.namedata.*[2]string-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 32 5d 73 74 72 69 6e 67              ..*[2]string
type:*[2]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d5 e5 67 a6 08 08 08 36 00 00 00 00 00 00 00 00  ..g....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]string-<0>+0
	rel 48+8 t=R_ADDR type:[2]string<0>+0
runtime.gcbits.0500000000000000<0> SRODATA dupok size=8
	0x0000 05 00 00 00 00 00 00 00                          ........
type:[2]string<0> SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00   ...............
	0x0010 56 96 d3 dd 02 08 08 11 00 00 00 00 00 00 00 00  V...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[2]string<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0500000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[2]string<0>+0
	rel 48+8 t=R_ADDR type:string<0>+0
	rel 56+8 t=R_ADDR type:[]string<0>+0
type:.namedata.*map.bucket[[2]string]int-<0> SRODATA dupok size=27
	0x0000 00 19 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 5b 32  ..*map.bucket[[2
	0x0010 5d 73 74 72 69 6e 67 5d 69 6e 74                 ]string]int
type:*map.bucket[[2]string]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 61 f9 57 4d 08 08 08 36 00 00 00 00 00 00 00 00  a.WM...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[[2]string]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[[2]string]int<0>+0
runtime.gcbits.aaaaaaaa00020000<0> SRODATA dupok size=8
	0x0000 aa aa aa aa 00 02 00 00                          ........
type:.namedata.*[8][2]string-<0> SRODATA dupok size=15
	0x0000 00 0d 2a 5b 38 5d 5b 32 5d 73 74 72 69 6e 67     ..*[8][2]string
type:*[8][2]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 48 b5 59 dd 08 08 08 36 00 00 00 00 00 00 00 00  H.Y....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8][2]string-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8][2]string<0>+0
runtime.gcbits.5555555500000000<0> SRODATA dupok size=8
	0x0000 55 55 55 55 00 00 00 00                          UUUU....
type:.namedata.*[][2]string-<0> SRODATA dupok size=14
	0x0000 00 0c 2a 5b 5d 5b 32 5d 73 74 72 69 6e 67        ..*[][2]string
type:*[][2]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 81 90 69 d4 08 08 08 36 00 00 00 00 00 00 00 00  ..i....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[][2]string-<0>+0
	rel 48+8 t=R_ADDR type:[][2]string<0>+0
type:[][2]string<0> SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 35 9f 27 c6 02 08 08 17 00 00 00 00 00 00 00 00  5.'.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[][2]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[][2]string<0>+0
	rel 48+8 t=R_ADDR type:[2]string<0>+0
type:noalg.[8][2]string<0> SRODATA dupok size=72
	0x0000 00 01 00 00 00 00 00 00 f8 00 00 00 00 00 00 00  ................
	0x0010 be c1 2a b6 02 08 08 11 00 00 00 00 00 00 00 00  ..*.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.5555555500000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8][2]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8][2]string<0>+0
	rel 48+8 t=R_ADDR type:[2]string<0>+0
	rel 56+8 t=R_ADDR type:[][2]string<0>+0
type:noalg.map.bucket[[2]string]int<0> SRODATA dupok size=176
	0x0000 50 01 00 00 00 00 00 00 50 01 00 00 00 00 00 00  P.......P.......
	0x0010 3a b9 cf 88 02 08 08 19 00 00 00 00 00 00 00 00  :...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 08 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 48 01 00 00 00 00 00 00  ........H.......
	rel 32+8 t=R_ADDR runtime.gcbits.aaaaaaaa00020000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[[2]string]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[[2]string]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[[2]string]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8][2]string<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:unsafe.Pointer<0>+0
type:.hashfunc.[2]string<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.hash.[2]string<1>+0
type:map[[2]string]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 04 13 a2 59 02 08 08 35 00 00 00 00 00 00 00 00  ...Y...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 20 08 50 01 0c 00 00 00                           .P.....
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[[2]string]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[[2]string]int<0>+0
	rel 48+8 t=R_ADDR type:[2]string<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[[2]string]int<0>+0
	rel 72+8 t=R_ADDR type:.hashfunc.[2]string<0>+0
type:.namedata.*map[float64]int-<0> SRODATA dupok size=18
	0x0000 00 10 2a 6d 61 70 5b 66 6c 6f 61 74 36 34 5d 69  ..*map[float64]i
	0x0010 6e 74                                            nt
type:*map[float64]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 32 6c cf 05 08 08 08 36 00 00 00 00 00 00 00 00  2l.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[float64]int-<0>+0
	rel 48+8 t=R_ADDR type:map[float64]int<0>+0
type:.namedata.*map.bucket[float64]int-<0> SRODATA dupok size=25
	0x0000 00 17 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 66 6c  ..*map.bucket[fl
	0x0010 6f 61 74 36 34 5d 69 6e 74                       oat64]int
type:*map.bucket[float64]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 eb ca 62 d7 08 08 08 36 00 00 00 00 00 00 00 00  ..b....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[float64]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[float64]int<0>+0
type:.namedata.*[8]float64-<0> SRODATA dupok size=13
	0x0000 00 0b 2a 5b 38 5d 66 6c 6f 61 74 36 34           ..*[8]float64
type:*[8]float64<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 de 38 15 8e 08 08 08 36 00 00 00 00 00 00 00 00  .8.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]float64-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8]float64<0>+0
type:noalg.[8]float64<0> SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 94 ec e4 ae 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]float64-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]float64<0>+0
	rel 48+8 t=R_ADDR type:float64<0>+0
	rel 56+8 t=R_ADDR type:[]float64<0>+0
type:noalg.map.bucket[float64]int<0> SRODATA dupok size=176
	0x0000 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 04 c4 22 74 02 08 08 19 00 00 00 00 00 00 00 00  .."t............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00a0 00 00 00 00 00 00 00 00 88 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[float64]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[float64]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[float64]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8]float64<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:uintptr<0>+0
runtime.f64hash·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.f64hash<1>+0
type:map[float64]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fd 05 7a 6e 02 08 08 35 00 00 00 00 00 00 00 00  ..zn...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 08 90 00 08 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[float64]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[float64]int<0>+0
	rel 48+8 t=R_ADDR type:float64<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[float64]int<0>+0
	rel 72+8 t=R_ADDR runtime.f64hash·f<0>+0
type:.namedata.*map[int]int-<0> SRODATA dupok size=14
	0x0000 00 0c 2a 6d 61 70 5b 69 6e 74 5d 69 6e 74        ..*map[int]int
type:*map[int]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 74 ae 48 51 08 08 08 36 00 00 00 00 00 00 00 00  t.HQ...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[int]int-<0>+0
	rel 48+8 t=R_ADDR type:map[int]int<0>+0
type:.namedata.*map.bucket[int]int-<0> SRODATA dupok size=21
	0x0000 00 13 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 69 6e  ..*map.bucket[in
	0x0010 74 5d 69 6e 74                                   t]int
type:*map.bucket[int]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fa 47 83 b9 08 08 08 36 00 00 00 00 00 00 00 00  .G.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[int]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[int]int<0>+0
type:noalg.map.bucket[int]int<0> SRODATA dupok size=176
	0x0000 90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 95 ac 1c dd 02 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00a0 00 00 00 00 00 00 00 00 88 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[int]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[int]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[int]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:uintptr<0>+0
type:map[int]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9e 66 a5 a2 02 08 08 35 00 00 00 00 00 00 00 00  .f.....5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 08 90 00 04 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[int]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[int]int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[int]int<0>+0
	rel 72+8 t=R_ADDR runtime.memhash64·f<0>+0
type:.namedata.*map[interface {}]int-<0> SRODATA dupok size=23
	0x0000 00 15 2a 6d 61 70 5b 69 6e 74 65 72 66 61 63 65  ..*map[interface
	0x0010 20 7b 7d 5d 69 6e 74                              {}]int
type:*map[interface {}]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 78 f3 ae 24 08 08 08 36 00 00 00 00 00 00 00 00  x..$...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[interface {}]int-<0>+0
	rel 48+8 t=R_ADDR type:map[interface {}]int<0>+0
type:.namedata.*map.bucket[interface {}]int-<0> SRODATA dupok size=30
	0x0000 00 1c 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 69 6e  ..*map.bucket[in
	0x0010 74 65 72 66 61 63 65 20 7b 7d 5d 69 6e 74        terface {}]int
type:*map.bucket[interface {}]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 48 39 6b c7 08 08 08 36 00 00 00 00 00 00 00 00  H9k....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[interface {}]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[interface {}]int<0>+0
runtime.gcbits.5455010200000000<0> SRODATA dupok size=8
	0x0000 54 55 01 02 00 00 00 00                          TU......
type:.namedata.*[8]interface {}-<0> SRODATA dupok size=18
	0x0000 00 10 2a 5b 38 5d 69 6e 74 65 72 66 61 63 65 20  ..*[8]interface 
	0x0010 7b 7d                                            {}
type:*[8]interface {}<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 87 f5 0a 47 08 08 08 36 00 00 00 00 00 00 00 00  ...G...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]interface {}-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8]interface {}<0>+0
runtime.gcbits.aaaa000000000000<0> SRODATA dupok size=8
	0x0000 aa aa 00 00 00 00 00 00                          ........
type:noalg.[8]interface {}<0> SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0010 e8 ee 24 73 02 08 08 11 00 00 00 00 00 00 00 00  ..$s............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.aaaa000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]interface {}-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]interface {}<0>+0
	rel 48+8 t=R_ADDR type:interface {}<0>+0
	rel 56+8 t=R_ADDR type:[]interface {}<0>+0
type:noalg.map.bucket[interface {}]int<0> SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 f0 36 a0 a6 02 08 08 19 00 00 00 00 00 00 00 00  .6..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 88 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 c8 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.5455010200000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[interface {}]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[interface {}]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[interface {}]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8]interface {}<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:unsafe.Pointer<0>+0
runtime.nilinterhash·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.nilinterhash<1>+0
type:map[interface {}]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 46 8e 52 38 02 08 08 35 00 00 00 00 00 00 00 00  F.R8...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 18 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[interface {}]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[interface {}]int<0>+0
	rel 48+8 t=R_ADDR type:interface {}<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[interface {}]int<0>+0
	rel 72+8 t=R_ADDR runtime.nilinterhash·f<0>+0
type:.namedata.*map[string]int-<0> SRODATA dupok size=17
	0x0000 00 0f 2a 6d 61 70 5b 73 74 72 69 6e 67 5d 69 6e  ..*map[string]in
	0x0010 74                                               t
type:*map[string]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 71 fe f3 d3 08 08 08 36 00 00 00 00 00 00 00 00  q......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[string]int-<0>+0
	rel 48+8 t=R_ADDR type:map[string]int<0>+0
type:.namedata.*map.bucket[string]int-<0> SRODATA dupok size=24
	0x0000 00 16 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 73 74  ..*map.bucket[st
	0x0010 72 69 6e 67 5d 69 6e 74                          ring]int
type:*map.bucket[string]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1b 82 81 a9 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[string]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[string]int<0>+0
type:.namedata.*[8]string-<0> SRODATA dupok size=12
	0x0000 00 0a 2a 5b 38 5d 73 74 72 69 6e 67              ..*[8]string
type:*[8]string<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e3 bf d7 63 08 08 08 36 00 00 00 00 00 00 00 00  ...c...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]string-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8]string<0>+0
type:noalg.[8]string<0> SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 0c 1c ff 04 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.5555000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]string-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]string<0>+0
	rel 48+8 t=R_ADDR type:string<0>+0
	rel 56+8 t=R_ADDR type:[]string<0>+0
type:noalg.map.bucket[string]int<0> SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 58 b8 d1 2e 02 08 08 19 00 00 00 00 00 00 00 00  X...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 88 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 c8 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.aaaa000200000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[string]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[string]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[string]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8]string<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:unsafe.Pointer<0>+0
type:map[string]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 3d f1 1f ce 02 08 08 35 00 00 00 00 00 00 00 00  =......5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[string]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[string]int<0>+0
	rel 48+8 t=R_ADDR type:string<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[string]int<0>+0
	rel 72+8 t=R_ADDR runtime.strhash·f<0>+0
type:.namedata.*map[struct { string }]int-<0> SRODATA dupok size=28
	0x0000 00 1a 2a 6d 61 70 5b 73 74 72 75 63 74 20 7b 20  ..*map[struct { 
	0x0010 73 74 72 69 6e 67 20 7d 5d 69 6e 74              string }]int
type:*map[struct { command-line-arguments.string = string }]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bf 3a e7 15 08 08 08 36 00 00 00 00 00 00 00 00  .:.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[struct { string }]int-<0>+0
	rel 48+8 t=R_ADDR type:map[struct { command-line-arguments.string = string }]int<0>+0
type:.namedata.*struct { string }-<0> SRODATA dupok size=20
	0x0000 00 12 2a 73 74 72 75 63 74 20 7b 20 73 74 72 69  ..*struct { stri
	0x0010 6e 67 20 7d                                      ng }
type:*struct { command-line-arguments.string = string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 11 40 2a 3c 08 08 08 36 00 00 00 00 00 00 00 00  .@*<...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { string }-<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.string = string }<0>+0
type:.namedata.string-.embedded<0> SRODATA dupok size=8
	0x0000 08 06 73 74 72 69 6e 67                          ..string
type:struct { command-line-arguments.string = string }<0> SRODATA dupok size=104
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bb 30 be ee 02 08 08 19 00 00 00 00 00 00 00 00  .0..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.strequal·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*struct { command-line-arguments.string = string }<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:struct { command-line-arguments.string = string }<0>+80
	rel 80+8 t=R_ADDR type:.namedata.string-.embedded<0>+0
	rel 88+8 t=R_ADDR type:string<0>+0
type:.namedata.*map.bucket[struct { string }]int-<0> SRODATA dupok size=35
	0x0000 00 21 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 73 74  .!*map.bucket[st
	0x0010 72 75 63 74 20 7b 20 73 74 72 69 6e 67 20 7d 5d  ruct { string }]
	0x0020 69 6e 74                                         int
type:*map.bucket[struct { command-line-arguments.string = string }]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1f ec 60 f0 08 08 08 36 00 00 00 00 00 00 00 00  ..`....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[struct { string }]int-<0>+0
	rel 48+8 t=R_ADDR type:noalg.map.bucket[struct { command-line-arguments.string = string }]int<0>+0
type:.namedata.*[8]struct { string }-<0> SRODATA dupok size=23
	0x0000 00 15 2a 5b 38 5d 73 74 72 75 63 74 20 7b 20 73  ..*[8]struct { s
	0x0010 74 72 69 6e 67 20 7d                             tring }
type:*[8]struct { command-line-arguments.string = string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e9 15 3e 1a 08 08 08 36 00 00 00 00 00 00 00 00  ..>....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]struct { string }-<0>+0
	rel 48+8 t=R_ADDR type:noalg.[8]struct { command-line-arguments.string = string }<0>+0
type:.namedata.*[]struct { string }-<0> SRODATA dupok size=22
	0x0000 00 14 2a 5b 5d 73 74 72 75 63 74 20 7b 20 73 74  ..*[]struct { st
	0x0010 72 69 6e 67 20 7d                                ring }
type:*[]struct { command-line-arguments.string = string }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1d ed 5d 15 08 08 08 36 00 00 00 00 00 00 00 00  ..]....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]struct { string }-<0>+0
	rel 48+8 t=R_ADDR type:[]struct { command-line-arguments.string = string }<0>+0
type:[]struct { command-line-arguments.string = string }<0> SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 08 85 c4 f7 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]struct { string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[]struct { command-line-arguments.string = string }<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.string = string }<0>+0
type:noalg.[8]struct { command-line-arguments.string = string }<0> SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 4c c6 42 a6 02 08 08 11 00 00 00 00 00 00 00 00  L.B.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.5555000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[8]struct { string }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[8]struct { command-line-arguments.string = string }<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.string = string }<0>+0
	rel 56+8 t=R_ADDR type:[]struct { command-line-arguments.string = string }<0>+0
type:noalg.map.bucket[struct { command-line-arguments.string = string }]int<0> SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 b4 05 4d b3 02 08 08 19 00 00 00 00 00 00 00 00  ..M.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 88 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 c8 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.aaaa000200000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map.bucket[struct { string }]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map.bucket[struct { command-line-arguments.string = string }]int<0>+0
	rel 48+8 t=R_ADDR type:.importpath..<0>+0
	rel 56+8 t=R_ADDR type:noalg.map.bucket[struct { command-line-arguments.string = string }]int<0>+80
	rel 80+8 t=R_ADDR type:.namedata.topbits-<0>+0
	rel 88+8 t=R_ADDR type:[8]uint8<0>+0
	rel 104+8 t=R_ADDR type:.namedata.keys-<0>+0
	rel 112+8 t=R_ADDR type:noalg.[8]struct { command-line-arguments.string = string }<0>+0
	rel 128+8 t=R_ADDR type:.namedata.elems-<0>+0
	rel 136+8 t=R_ADDR type:noalg.[8]int<0>+0
	rel 152+8 t=R_ADDR type:.namedata.overflow-<0>+0
	rel 160+8 t=R_ADDR type:unsafe.Pointer<0>+0
type:map[struct { command-line-arguments.string = string }]int<0> SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 64 a5 cf 34 02 08 08 35 00 00 00 00 00 00 00 00  d..4...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*map[struct { string }]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*map[struct { command-line-arguments.string = string }]int<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.string = string }<0>+0
	rel 56+8 t=R_ADDR type:int<0>+0
	rel 64+8 t=R_ADDR type:noalg.map.bucket[struct { command-line-arguments.string = string }]int<0>+0
	rel 72+8 t=R_ADDR runtime.strhash·f<0>+0
go:string."abc"<0> SRODATA dupok size=3
	0x0000 61 62 63                                         abc
command-line-arguments..stmp_0<0> SRODATA static size=264
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 04 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0030 06 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 0a 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0060 0c 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0070 0e 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0080 10 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 13 00 00 00 00 00 00 00  ................
	0x00a0 14 00 00 00 00 00 00 00 15 00 00 00 00 00 00 00  ................
	0x00b0 16 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00  ................
	0x00d0 1a 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
	0x00e0 1c 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x00f0 1e 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00  ................
	0x0100 20 00 00 00 00 00 00 00                           .......
type:.eqfunc264<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 08 01 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:.namedata.*[33]int-<0> SRODATA dupok size=10
	0x0000 00 08 2a 5b 33 33 5d 69 6e 74                    ..*[33]int
type:*[33]int<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 87 ce 15 4f 08 08 08 36 00 00 00 00 00 00 00 00  ...O...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[33]int-<0>+0
	rel 48+8 t=R_ADDR type:[33]int<0>+0
type:[33]int<0> SRODATA dupok size=72
	0x0000 08 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 5f 84 49 c0 0a 08 08 11 00 00 00 00 00 00 00 00  _.I.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 21 00 00 00 00 00 00 00                          !.......
	rel 24+8 t=R_ADDR type:.eqfunc264<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[33]int-<0>+0
	rel 44+4 t=RelocType(-32763) type:*[33]int<0>+0
	rel 48+8 t=R_ADDR type:int<0>+0
	rel 56+8 t=R_ADDR type:[]int<0>+0
command-line-arguments..stmp_1<0> SRODATA static size=264
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 04 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0030 06 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 0a 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0060 0c 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0070 0e 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0080 10 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 13 00 00 00 00 00 00 00  ................
	0x00a0 14 00 00 00 00 00 00 00 15 00 00 00 00 00 00 00  ................
	0x00b0 16 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00  ................
	0x00d0 1a 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
	0x00e0 1c 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x00f0 1e 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0100 20 00 00 00 00 00 00 00                           .......
command-line-arguments..stmp_2<0> SRODATA static size=264
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 04 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0030 06 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 0a 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0060 0c 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0070 0e 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0080 10 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 13 00 00 00 00 00 00 00  ................
	0x00a0 14 00 00 00 00 00 00 00 15 00 00 00 00 00 00 00  ................
	0x00b0 16 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00  ................
	0x00d0 1a 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
	0x00e0 1c 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x00f0 1e 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00  ................
	0x0100 20 00 00 00 00 00 00 00                           .......
command-line-arguments..stmp_3<0> SRODATA static size=264
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 02 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 04 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0030 06 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 0a 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0060 0c 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0070 0e 00 00 00 00 00 00 00 0f 00 00 00 00 00 00 00  ................
	0x0080 10 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
	0x0090 12 00 00 00 00 00 00 00 13 00 00 00 00 00 00 00  ................
	0x00a0 14 00 00 00 00 00 00 00 15 00 00 00 00 00 00 00  ................
	0x00b0 16 00 00 00 00 00 00 00 17 00 00 00 00 00 00 00  ................
	0x00c0 18 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00  ................
	0x00d0 1a 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
	0x00e0 1c 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x00f0 1e 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0100 20 00 00 00 00 00 00 00                           .......
type:.namedata.*struct { m map[int]int }-<0> SRODATA dupok size=27
	0x0000 00 19 2a 73 74 72 75 63 74 20 7b 20 6d 20 6d 61  ..*struct { m ma
	0x0010 70 5b 69 6e 74 5d 69 6e 74 20 7d                 p[int]int }
type:*struct { command-line-arguments.m map[int]int }<0> SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 46 a3 e0 28 08 08 08 36 00 00 00 00 00 00 00 00  F..(...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { m map[int]int }-<0>+0
	rel 48+8 t=R_ADDR type:struct { command-line-arguments.m map[int]int }<0>+0
type:.namedata.m-<0> SRODATA dupok size=3
	0x0000 00 01 6d                                         ..m
type:struct { command-line-arguments.m map[int]int }<0> SRODATA dupok size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bc c8 a6 87 02 08 08 39 00 00 00 00 00 00 00 00  .......9........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*struct { m map[int]int }-<0>+0
	rel 44+4 t=RelocType(-32763) type:*struct { command-line-arguments.m map[int]int }<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:struct { command-line-arguments.m map[int]int }<0>+80
	rel 80+8 t=R_ADDR type:.namedata.m-<0>+0
	rel 88+8 t=R_ADDR type:map[int]int<0>+0
runtime.gcbits.0200000000000000<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.AccessInt1.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.AccessInt1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.AccessInt2.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.AccessInt2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.AccessString1.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.AccessString1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.AccessString2.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.AccessString2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·TjPuuCwdlCpTaRQGRKTrYw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
command-line-arguments.LookupStringConversionSimple.arginfo1<0> SRODATA static dupok size=11
	0x0000 00 08 fe 08 08 10 08 18 08 fd ff                 ...........
command-line-arguments.LookupStringConversionSimple.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.LookupStringConversionStructLit.arginfo1<0> SRODATA static dupok size=11
	0x0000 00 08 fe 08 08 10 08 18 08 fd ff                 ...........
command-line-arguments.LookupStringConversionStructLit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·EXTrhv4b3ahawRWAszmcVw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 04 00 00 00 00 00                    ..........
command-line-arguments.LookupStringConversionArrayLit.stkobj<0> SRODATA static size=24
	0x0000 01 00 00 00 00 00 00 00 e0 ff ff ff 20 00 00 00  ............ ...
	0x0010 18 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.0500000000000000<0>+0
command-line-arguments.LookupStringConversionArrayLit.arginfo1<0> SRODATA static dupok size=11
	0x0000 00 08 fe 08 08 10 08 18 08 fd ff                 ...........
command-line-arguments.LookupStringConversionArrayLit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·AzW08EQV0LVfnDEAZer1Nw==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 00 00                    ..........
command-line-arguments.LookupStringConversionNestedLit.stkobj<0> SRODATA static size=24
	0x0000 01 00 00 00 00 00 00 00 f0 ff ff ff 10 00 00 00  ................
	0x0010 08 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.0100000000000000<0>+0
command-line-arguments.LookupStringConversionNestedLit.arginfo1<0> SRODATA static dupok size=11
	0x0000 00 08 fe 08 08 10 08 18 08 fd ff                 ...........
command-line-arguments.LookupStringConversionNestedLit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.LookupStringConversionKeyedArrayLit.stkobj<0> SRODATA static size=24
	0x0000 01 00 00 00 00 00 00 00 e0 ff ff ff 20 00 00 00  ............ ...
	0x0010 18 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.0500000000000000<0>+0
command-line-arguments.LookupStringConversionKeyedArrayLit.arginfo1<0> SRODATA static dupok size=11
	0x0000 00 08 fe 08 08 10 08 18 08 fd ff                 ...........
command-line-arguments.LookupStringConversionKeyedArrayLit.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.MapClearReflexive.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapClearReflexive.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.MapClearIndirect.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapClearIndirect.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.MapClearPointer.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapClearPointer.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·m/6RUmNv6NBhMUL8eleFFA==<0> SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 01 00                 ...........
gclocals·u0rpM4ibS2JfD5tEjI8DlA==<0> SRODATA dupok size=14
	0x0000 03 00 00 00 0c 00 00 00 00 00 ff 00 00 00        ..............
command-line-arguments.MapClearNotReflexive.stkobj<0> SRODATA static size=24
	0x0000 01 00 00 00 00 00 00 00 a0 ff ff ff 60 00 00 00  ............`...
	0x0010 40 00 00 00 00 00 00 00                          @.......
	rel 20+4 t=R_ADDROFF runtime.gcbits.ff00000000000000<0>+0
command-line-arguments.MapClearNotReflexive.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapClearNotReflexive.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·ARY8XWBpjuEursOwYhv9rw==<0> SRODATA dupok size=14
	0x0000 03 00 00 00 0e 00 00 00 00 00 fc 03 00 00        ..............
command-line-arguments.MapClearInterface.stkobj<0> SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 90 ff ff ff 10 00 00 00  ................
	0x0010 10 00 00 00 00 00 00 00 a0 ff ff ff 60 00 00 00  ............`...
	0x0020 40 00 00 00 00 00 00 00                          @.......
	rel 20+4 t=R_ADDROFF runtime.gcbits.0200000000000000<0>+0
	rel 36+4 t=R_ADDROFF runtime.gcbits.ff00000000000000<0>+0
command-line-arguments.MapClearInterface.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapClearInterface.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.MapClearSideEffect.stkobj<0> SRODATA static size=24
	0x0000 01 00 00 00 00 00 00 00 a0 ff ff ff 60 00 00 00  ............`...
	0x0010 40 00 00 00 00 00 00 00                          @.......
	rel 20+4 t=R_ADDROFF runtime.gcbits.ff00000000000000<0>+0
command-line-arguments.MapClearSideEffect.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapClearSideEffect.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·ykHN0vawYuq1dUW4zEe2gA==<0> SRODATA dupok size=8
	0x0000 03 00 00 00 00 00 00 00                          ........
gclocals·sQxO+jiYy+d9ldxoWSePwQ==<0> SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 02 03                 ...........
command-line-arguments.MapLiteralSizing.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.MapLiteralSizing.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
type:.eq.[2]string.arginfo1<0> SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[2]string.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
type:.hash.[2]string.arginfo1<0> SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.hash.[2]string.argliveinfo<0> SRODATA static dupok size=3
	0x0000 00 00 01                                         ...
aux for command-line-arguments.AccessInt1<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.AccessInt1<1>+0
aux for command-line-arguments.AccessInt1<0> SDWARFLINES size=29
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 0c 14  ................
	0x0010 0a 73 39 06 2d 06 08 3f 02 11 00 01 01           .s9.-..?.....
	rel 3+8 t=R_ADDR command-line-arguments.AccessInt1<1>+0
aux for command-line-arguments.AccessInt1<0> SDWARFFCN size=85
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 49 6e  guments.AccessIn
	0x0020 74 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t1..............
	0x0030 00 00 00 01 9c 02 00 00 00 12 01 12 6d 00 00 12  ............m...
	0x0040 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 12 00  .........~r0....
	0x0050 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.AccessInt1<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.AccessInt1<1>+63
	rel 64+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.AccessInt2<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 25 00 00 00 00 00 00 00 3e 00 00 00 00  ...%.......>....
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.AccessInt2<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.AccessInt2<1>+0
aux for command-line-arguments.AccessInt2<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 11 14  ................
	0x0010 0a 73 39 06 2d 06 d8 06 23 06 48 02 11 00 01 01  .s9.-...#.H.....
	rel 3+8 t=R_ADDR command-line-arguments.AccessInt2<1>+0
aux for command-line-arguments.AccessInt2<0> SDWARFFCN size=98
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 49 6e  guments.AccessIn
	0x0020 74 32 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t2..............
	0x0030 00 00 00 01 9c 02 00 00 00 17 01 12 6d 00 00 17  ............m...
	0x0040 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 17 00  .........~r0....
	0x0050 00 00 00 00 0d 6f 6b 00 19 00 00 00 00 00 00 00  .....ok.........
	0x0060 00 00                                            ..
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.AccessInt2<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.AccessInt2<1>+62
	rel 64+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 89+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 93+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.AccessString1<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 24 00 00 00 00 00 00 00  ........$.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.AccessString1<1>+0
aux for command-line-arguments.AccessString1<0> SDWARFLINES size=29
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 17 14  ................
	0x0010 0a 73 39 06 2d 06 08 67 02 11 00 01 01           .s9.-..g.....
	rel 3+8 t=R_ADDR command-line-arguments.AccessString1<1>+0
aux for command-line-arguments.AccessString1<0> SDWARFFCN size=88
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 53 74  guments.AccessSt
	0x0020 72 69 6e 67 31 00 00 00 00 00 00 00 00 00 00 00  ring1...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 1d 01 12 6d  ...............m
	0x0040 00 00 1d 00 00 00 00 00 00 00 00 11 7e 72 30 00  ............~r0.
	0x0050 01 1d 00 00 00 00 00 00                          ........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.AccessString1<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.AccessString1<1>+67
	rel 67+4 t=R_DWARFSECREF go:info.map[string]int<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.AccessString2<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 24 00 00 00 00 00 00 00  ........$.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 29 00 00 00 00 00 00 00 42 00 00 00 00  ...).......B....
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.AccessString2<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.AccessString2<1>+0
aux for command-line-arguments.AccessString2<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 1c 14  ................
	0x0010 0a 73 39 06 2d 06 08 10 06 23 06 48 02 11 00 01  .s9.-....#.H....
	0x0020 01                                               .
	rel 3+8 t=R_ADDR command-line-arguments.AccessString2<1>+0
aux for command-line-arguments.AccessString2<0> SDWARFFCN size=101
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 41 63 63 65 73 73 53 74  guments.AccessSt
	0x0020 72 69 6e 67 32 00 00 00 00 00 00 00 00 00 00 00  ring2...........
	0x0030 00 00 00 00 00 00 01 9c 02 00 00 00 22 01 12 6d  ............"..m
	0x0040 00 00 22 00 00 00 00 00 00 00 00 11 7e 72 30 00  ..".........~r0.
	0x0050 01 22 00 00 00 00 00 0d 6f 6b 00 24 00 00 00 00  ."......ok.$....
	0x0060 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 38+8 t=R_ADDR command-line-arguments.AccessString2<1>+0
	rel 46+8 t=R_ADDR command-line-arguments.AccessString2<1>+66
	rel 67+4 t=R_DWARFSECREF go:info.map[string]int<0>+0
	rel 71+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 92+4 t=R_DWARFSECREF go:info.bool<0>+0
	rel 96+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.LookupStringConversionSimple<0> SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 23 00 00 00 00 00 00 00  ........#.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 16 00 00 00 00  ................
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 16 00  .....S..R..U....
	0x0060 00 00 00 00 00 00 19 00 00 00 00 00 00 00 08 00  ................
	0x0070 53 93 08 52 93 08 93 08 19 00 00 00 00 00 00 00  S..R............
	0x0080 1c 00 00 00 00 00 00 00 07 00 53 93 08 93 08 93  ..........S.....
	0x0090 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.LookupStringConversionSimple<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.LookupStringConversionSimple<1>+0
aux for command-line-arguments.LookupStringConversionSimple<0> SDWARFLINES size=37
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 26 14  ..............&.
	0x0010 0a 73 06 37 06 43 06 2d 06 08 2b 06 08 e1 06 23  .s.7.C.-..+....#
	0x0020 02 02 00 01 01                                   .....
	rel 3+8 t=R_ADDR command-line-arguments.LookupStringConversionSimple<1>+0
aux for command-line-arguments.LookupStringConversionSimple<0> SDWARFFCN size=120
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 53 69  ringConversionSi
	0x0030 6d 70 6c 65 00 00 00 00 00 00 00 00 00 00 00 00  mple............
	0x0040 00 00 00 00 00 01 9c 02 00 00 00 2c 01 12 6d 00  ...........,..m.
	0x0050 00 2c 00 00 00 00 00 00 00 00 12 62 79 74 65 73  .,.........bytes
	0x0060 00 00 2c 00 00 00 00 00 00 00 00 11 7e 72 30 00  ..,.........~r0.
	0x0070 01 2c 00 00 00 00 00 00                          .,......
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 53+8 t=R_ADDR command-line-arguments.LookupStringConversionSimple<1>+0
	rel 61+8 t=R_ADDR command-line-arguments.LookupStringConversionSimple<1>+98
	rel 82+4 t=R_DWARFSECREF go:info.map[string]int<0>+0
	rel 86+4 t=R_DWARFSECREF <0>+0
	rel 99+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 103+4 t=R_DWARFSECREF <0>+51
	rel 114+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.LookupStringConversionStructLit<0> SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 23 00 00 00 00 00 00 00  ........#.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 16 00 00 00 00  ................
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 16 00  .....S..R..U....
	0x0060 00 00 00 00 00 00 19 00 00 00 00 00 00 00 08 00  ................
	0x0070 53 93 08 52 93 08 93 08 19 00 00 00 00 00 00 00  S..R............
	0x0080 1c 00 00 00 00 00 00 00 07 00 53 93 08 93 08 93  ..........S.....
	0x0090 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.LookupStringConversionStructLit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.LookupStringConversionStructLit<1>+0
aux for command-line-arguments.LookupStringConversionStructLit<0> SDWARFLINES size=37
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 2b 14  ..............+.
	0x0010 0a 73 06 37 06 43 06 2d 06 08 2b 06 08 e1 06 23  .s.7.C.-..+....#
	0x0020 02 02 00 01 01                                   .....
	rel 3+8 t=R_ADDR command-line-arguments.LookupStringConversionStructLit<1>+0
aux for command-line-arguments.LookupStringConversionStructLit<0> SDWARFFCN size=123
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 53 74  ringConversionSt
	0x0030 72 75 63 74 4c 69 74 00 00 00 00 00 00 00 00 00  ructLit.........
	0x0040 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 31 01  ..............1.
	0x0050 12 6d 00 00 31 00 00 00 00 00 00 00 00 12 62 79  .m..1.........by
	0x0060 74 65 73 00 00 31 00 00 00 00 00 00 00 00 11 7e  tes..1.........~
	0x0070 72 30 00 01 31 00 00 00 00 00 00                 r0..1......
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 56+8 t=R_ADDR command-line-arguments.LookupStringConversionStructLit<1>+0
	rel 64+8 t=R_ADDR command-line-arguments.LookupStringConversionStructLit<1>+98
	rel 85+4 t=R_DWARFSECREF go:info.map[struct { command-line-arguments.string = string }]int<0>+0
	rel 89+4 t=R_DWARFSECREF <0>+0
	rel 102+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+51
	rel 117+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.LookupStringConversionArrayLit<0> SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 42 00 00 00 00 00 00 00  ........B.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 36 00 00 00 00  ...........6....
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 36 00  .....S..R..U..6.
	0x0060 00 00 00 00 00 00 3b 00 00 00 00 00 00 00 08 00  ......;.........
	0x0070 93 08 52 93 08 55 93 08 3b 00 00 00 00 00 00 00  ..R..U..;.......
	0x0080 47 00 00 00 00 00 00 00 07 00 93 08 93 08 55 93  G.............U.
	0x0090 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.LookupStringConversionArrayLit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.LookupStringConversionArrayLit<1>+0
aux for command-line-arguments.LookupStringConversionArrayLit<0> SDWARFLINES size=33
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 30 14  ..............0.
	0x0010 0a 73 06 37 06 43 06 4b 06 02 1f fd 02 2f 00 01  .s.7.C.K...../..
	0x0020 01                                               .
	rel 3+8 t=R_ADDR command-line-arguments.LookupStringConversionArrayLit<1>+0
aux for command-line-arguments.LookupStringConversionArrayLit<0> SDWARFFCN size=122
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 41 72  ringConversionAr
	0x0030 72 61 79 4c 69 74 00 00 00 00 00 00 00 00 00 00  rayLit..........
	0x0040 00 00 00 00 00 00 00 01 9c 02 00 00 00 36 01 12  .............6..
	0x0050 6d 00 00 36 00 00 00 00 00 00 00 00 12 62 79 74  m..6.........byt
	0x0060 65 73 00 00 36 00 00 00 00 00 00 00 00 11 7e 72  es..6.........~r
	0x0070 30 00 01 36 00 00 00 00 00 00                    0..6......
	rel 0+0 t=R_USETYPE type:[2]string<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 55+8 t=R_ADDR command-line-arguments.LookupStringConversionArrayLit<1>+0
	rel 63+8 t=R_ADDR command-line-arguments.LookupStringConversionArrayLit<1>+127
	rel 84+4 t=R_DWARFSECREF go:info.map[[2]string]int<0>+0
	rel 88+4 t=R_DWARFSECREF <0>+0
	rel 101+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 105+4 t=R_DWARFSECREF <0>+51
	rel 116+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.LookupStringConversionNestedLit<0> SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 35 00 00 00 00 00 00 00  ........5.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2b 00 00 00 00  ...........+....
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 2b 00  .....S..R..U..+.
	0x0060 00 00 00 00 00 00 2e 00 00 00 00 00 00 00 08 00  ................
	0x0070 93 08 52 93 08 55 93 08 2e 00 00 00 00 00 00 00  ..R..U..........
	0x0080 38 00 00 00 00 00 00 00 07 00 93 08 52 93 08 93  8...........R...
	0x0090 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.LookupStringConversionNestedLit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.LookupStringConversionNestedLit<1>+0
aux for command-line-arguments.LookupStringConversionNestedLit<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 35 14  ..............5.
	0x0010 0a 73 06 37 06 43 06 4b 06 08 df 02 2f 00 01 01  .s.7.C.K..../...
	rel 3+8 t=R_ADDR command-line-arguments.LookupStringConversionNestedLit<1>+0
aux for command-line-arguments.LookupStringConversionNestedLit<0> SDWARFFCN size=123
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 4e 65  ringConversionNe
	0x0030 73 74 65 64 4c 69 74 00 00 00 00 00 00 00 00 00  stedLit.........
	0x0040 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 3b 01  ..............;.
	0x0050 12 6d 00 00 3b 00 00 00 00 00 00 00 00 12 62 79  .m..;.........by
	0x0060 74 65 73 00 00 3b 00 00 00 00 00 00 00 00 11 7e  tes..;.........~
	0x0070 72 30 00 01 3b 00 00 00 00 00 00                 r0..;......
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 0+0 t=R_USETYPE type:string<0>+0
	rel 56+8 t=R_ADDR command-line-arguments.LookupStringConversionNestedLit<1>+0
	rel 64+8 t=R_ADDR command-line-arguments.LookupStringConversionNestedLit<1>+117
	rel 85+4 t=R_DWARFSECREF go:info.map[[1]struct { command-line-arguments.s [1]string }]int<0>+0
	rel 89+4 t=R_DWARFSECREF <0>+0
	rel 102+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+51
	rel 117+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.LookupStringConversionKeyedArrayLit<0> SDWARFLOC size=161
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  ........8.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 2c 00 00 00 00  ...........,....
	0x0050 00 00 00 09 00 53 93 08 52 93 08 55 93 08 2c 00  .....S..R..U..,.
	0x0060 00 00 00 00 00 00 31 00 00 00 00 00 00 00 08 00  ......1.........
	0x0070 93 08 52 93 08 55 93 08 31 00 00 00 00 00 00 00  ..R..U..1.......
	0x0080 3d 00 00 00 00 00 00 00 07 00 93 08 93 08 55 93  =.............U.
	0x0090 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.LookupStringConversionKeyedArrayLit<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.LookupStringConversionKeyedArrayLit<1>+0
aux for command-line-arguments.LookupStringConversionKeyedArrayLit<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 3a 14  ..............:.
	0x0010 0a 73 06 37 06 43 06 4b 06 08 df 02 2f 00 01 01  .s.7.C.K..../...
	rel 3+8 t=R_ADDR command-line-arguments.LookupStringConversionKeyedArrayLit<1>+0
aux for command-line-arguments.LookupStringConversionKeyedArrayLit<0> SDWARFFCN size=127
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4c 6f 6f 6b 75 70 53 74  guments.LookupSt
	0x0020 72 69 6e 67 43 6f 6e 76 65 72 73 69 6f 6e 4b 65  ringConversionKe
	0x0030 79 65 64 41 72 72 61 79 4c 69 74 00 00 00 00 00  yedArrayLit.....
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00  ................
	0x0050 00 00 40 01 12 6d 00 00 40 00 00 00 00 00 00 00  ..@..m..@.......
	0x0060 00 12 62 79 74 65 73 00 00 40 00 00 00 00 00 00  ..bytes..@......
	0x0070 00 00 11 7e 72 30 00 01 40 00 00 00 00 00 00     ...~r0..@......
	rel 0+0 t=R_USETYPE type:[2]string<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 60+8 t=R_ADDR command-line-arguments.LookupStringConversionKeyedArrayLit<1>+0
	rel 68+8 t=R_ADDR command-line-arguments.LookupStringConversionKeyedArrayLit<1>+117
	rel 89+4 t=R_DWARFSECREF go:info.map[[2]string]int<0>+0
	rel 93+4 t=R_DWARFSECREF <0>+0
	rel 106+4 t=R_DWARFSECREF go:info.[]uint8<0>+0
	rel 110+4 t=R_DWARFSECREF <0>+51
	rel 121+4 t=R_DWARFSECREF go:info.int<0>+0
aux for command-line-arguments.MapClearReflexive<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.MapClearReflexive<1>+0
aux for command-line-arguments.MapClearReflexive<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 c5 00  ................
	0x0010 14 0a 73 3a 06 2d 06 8a 03 7e 47 02 11 00 01 01  ..s:.-...~G.....
	rel 3+8 t=R_ADDR command-line-arguments.MapClearReflexive<1>+0
aux for command-line-arguments.MapClearReflexive<0> SDWARFFCN size=80
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 52 65 66 6c 65 78 69 76 65 00 00 00 00 00 00 00  Reflexive.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 4b 01 12 6d 00 00 4b 00 00 00 00 00 00 00 00 00  K..m..K.........
	rel 42+8 t=R_ADDR command-line-arguments.MapClearReflexive<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.MapClearReflexive<1>+52
	rel 71+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.MapClearIndirect<0> SDWARFLOC size=102
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 18 00 00 00 00  ................
	0x0050 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00  .....P..........
	0x0060 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.MapClearIndirect<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.MapClearIndirect<1>+0
aux for command-line-arguments.MapClearIndirect<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 cd 00  ................
	0x0010 14 0a 73 3b 06 2d 06 8a 03 7d 47 02 11 00 01 01  ..s;.-...}G.....
	rel 3+8 t=R_ADDR command-line-arguments.MapClearIndirect<1>+0
aux for command-line-arguments.MapClearIndirect<0> SDWARFFCN size=91
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 49 6e 64 69 72 65 63 74 00 00 00 00 00 00 00 00  Indirect........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 53  ...............S
	0x0040 01 12 6d 00 00 53 00 00 00 00 00 00 00 00 0d 73  ..m..S.........s
	0x0050 00 54 00 00 00 00 00 00 00 00 00                 .T.........
	rel 41+8 t=R_ADDR command-line-arguments.MapClearIndirect<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.MapClearIndirect<1>+52
	rel 70+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 82+4 t=R_DWARFSECREF go:info.struct { command-line-arguments.m map[int]int }<0>+0
	rel 86+4 t=R_DWARFSECREF <0>+51
aux for command-line-arguments.MapClearPointer<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.MapClearPointer<1>+0
aux for command-line-arguments.MapClearPointer<0> SDWARFLINES size=32
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 d6 00  ................
	0x0010 14 0a 73 3a 06 2d 06 8a 03 7e 47 02 11 00 01 01  ..s:.-...~G.....
	rel 3+8 t=R_ADDR command-line-arguments.MapClearPointer<1>+0
aux for command-line-arguments.MapClearPointer<0> SDWARFFCN size=78
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 50 6f 69 6e 74 65 72 00 00 00 00 00 00 00 00 00  Pointer.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 5c 01  ..............\.
	0x0040 12 6d 00 00 5c 00 00 00 00 00 00 00 00 00        .m..\.........
	rel 40+8 t=R_ADDR command-line-arguments.MapClearPointer<1>+0
	rel 48+8 t=R_ADDR command-line-arguments.MapClearPointer<1>+52
	rel 69+4 t=R_DWARFSECREF go:info.map[*uint8]int<0>+0
	rel 73+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.MapClearNotReflexive<0> SDWARFLOC size=121
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 4a 00 00 00 00 00 00 00  ........J.......
	0x0020 01 00 50 4a 00 00 00 00 00 00 00 a5 00 00 00 00  ..PJ............
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 55 00 00 00 00 00 00 00 74 00  ......U.......t.
	0x0060 00 00 00 00 00 00 01 00 61 00 00 00 00 00 00 00  ........a.......
	0x0070 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+0
	rel 78+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+0
aux for command-line-arguments.MapClearNotReflexive<0> SDWARFLINES size=47
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 de 00  ................
	0x0010 14 0a cd 3a 06 5f 06 02 1f f6 06 4b 06 d7 40 06  ...:._.....K..@.
	0x0020 a5 06 44 03 7e 47 06 a5 06 2d 02 05 00 01 01     ..D.~G...-.....
	rel 3+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+0
aux for command-line-arguments.MapClearNotReflexive<0> SDWARFFCN size=113
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 4e 6f 74 52 65 66 6c 65 78 69 76 65 00 00 00 00  NotReflexive....
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 02  ................
	0x0040 00 00 00 64 01 12 6d 00 00 64 00 00 00 00 00 00  ...d..m..d......
	0x0050 00 00 17 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 0d 6b 00 67 00 00 00 00 00 00 00 00 00  ....k.g.........
	0x0070 00                                               .
	rel 0+0 t=R_USETYPE type:runtime.hiter<0>+0
	rel 45+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+0
	rel 53+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+165
	rel 74+4 t=R_DWARFSECREF go:info.map[float64]int<0>+0
	rel 78+4 t=R_DWARFSECREF <0>+0
	rel 83+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+23
	rel 91+8 t=R_ADDR command-line-arguments.MapClearNotReflexive<1>+136
	rel 103+4 t=R_DWARFSECREF go:info.float64<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+70
aux for command-line-arguments.MapClearInterface<0> SDWARFLOC size=149
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 4d 00 00 00 00 00 00 00  ........M.......
	0x0020 01 00 50 4d 00 00 00 00 00 00 00 af 00 00 00 00  ..PM............
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 57 00 00 00 00 00 00 00 5b 00  ......W.......[.
	0x0060 00 00 00 00 00 00 05 00 54 93 08 93 08 5b 00 00  ........T....[..
	0x0070 00 00 00 00 00 7e 00 00 00 00 00 00 00 06 00 54  .....~.........T
	0x0080 93 08 51 93 08 00 00 00 00 00 00 00 00 00 00 00  ..Q.............
	0x0090 00 00 00 00 00                                   .....
	rel 8+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+0
	rel 78+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+0
aux for command-line-arguments.MapClearInterface<0> SDWARFLINES size=44
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 e6 00  ................
	0x0010 14 0a cd 58 06 5f 06 02 22 f6 06 41 06 08 19 40  ...X._.."..A...@
	0x0020 06 a5 06 44 03 7e 65 02 14 00 01 01              ...D.~e.....
	rel 3+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+0
aux for command-line-arguments.MapClearInterface<0> SDWARFFCN size=110
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 49 6e 74 65 72 66 61 63 65 00 00 00 00 00 00 00  Interface.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00  ................
	0x0040 6c 01 12 6d 00 00 6c 00 00 00 00 00 00 00 00 17  l..m..l.........
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 0d 6b 00 6f 00 00 00 00 00 00 00 00 00 00        .k.o..........
	rel 0+0 t=R_USETYPE type:runtime.hiter<0>+0
	rel 42+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+0
	rel 50+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+175
	rel 71+4 t=R_DWARFSECREF go:info.map[interface {}]int<0>+0
	rel 75+4 t=R_DWARFSECREF <0>+0
	rel 80+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+26
	rel 88+8 t=R_ADDR command-line-arguments.MapClearInterface<1>+146
	rel 100+4 t=R_DWARFSECREF go:info.interface {}<0>+0
	rel 104+4 t=R_DWARFSECREF <0>+70
aux for command-line-arguments.MapClearSideEffect<0> SDWARFLOC size=182
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 4a 00 00 00 00 00 00 00  ........J.......
	0x0020 01 00 50 4a 00 00 00 00 00 00 00 a5 00 00 00 00  ..PJ............
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 56 00 00 00 00 00 00 00 62 00  ......V.......b.
	0x0060 00 00 00 00 00 00 01 00 50 62 00 00 00 00 00 00  ........Pb......
	0x0070 00 6f 00 00 00 00 00 00 00 03 00 91 88 7f 6f 00  .o............o.
	0x0080 00 00 00 00 00 00 7e 00 00 00 00 00 00 00 03 00  ......~.........
	0x0090 91 88 7f 7e 00 00 00 00 00 00 00 a5 00 00 00 00  ...~............
	0x00a0 00 00 00 01 00 50 00 00 00 00 00 00 00 00 00 00  .....P..........
	0x00b0 00 00 00 00 00 00                                ......
	rel 8+8 t=R_ADDR command-line-arguments.MapClearSideEffect<1>+0
	rel 78+8 t=R_ADDR command-line-arguments.MapClearSideEffect<1>+0
aux for command-line-arguments.MapClearSideEffect<0> SDWARFLINES size=51
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 ee 00  ................
	0x0010 14 0a cd 3b 06 5f 06 02 25 f6 06 55 06 5f 40 06  ...;._..%..U._@.
	0x0020 76 06 3e 06 41 06 44 03 7d 47 06 a5 06 2d 02 05  v.>.A.D.}G...-..
	0x0030 00 01 01                                         ...
	rel 3+8 t=R_ADDR command-line-arguments.MapClearSideEffect<1>+0
aux for command-line-arguments.MapClearSideEffect<0> SDWARFFCN size=105
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 43 6c 65 61 72  guments.MapClear
	0x0020 53 69 64 65 45 66 66 65 63 74 00 00 00 00 00 00  SideEffect......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 01 9c 02 00 00  ................
	0x0040 00 74 01 12 6d 00 00 74 00 00 00 00 00 00 00 00  .t..m..t........
	0x0050 11 7e 72 30 00 01 74 00 00 00 00 00 0d 6b 00 75  .~r0..t......k.u
	0x0060 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 0+0 t=R_USETYPE type:runtime.hiter<0>+0
	rel 43+8 t=R_ADDR command-line-arguments.MapClearSideEffect<1>+0
	rel 51+8 t=R_ADDR command-line-arguments.MapClearSideEffect<1>+165
	rel 72+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+0
	rel 87+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 96+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 100+4 t=R_DWARFSECREF <0>+70
aux for command-line-arguments.MapLiteralSizing<0> SDWARFLOC size=193
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 19 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 25 00 00 00 00 00 00 00 58 00 00 00 00  ...%.......X....
	0x0050 00 00 00 01 00 50 58 00 00 00 00 00 00 00 0a 01  .....PX.........
	0x0060 00 00 00 00 00 00 02 00 91 68 00 00 00 00 00 00  .........h......
	0x0070 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff  ................
	0x0080 ff ff 00 00 00 00 00 00 00 00 99 00 00 00 00 00  ................
	0x0090 00 00 cc 00 00 00 00 00 00 00 01 00 50 cc 00 00  ............P...
	0x00a0 00 00 00 00 00 0a 01 00 00 00 00 00 00 02 00 91  ................
	0x00b0 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x00c0 00                                               .
	rel 8+8 t=R_ADDR command-line-arguments.MapLiteralSizing<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.MapLiteralSizing<1>+0
	rel 130+8 t=R_ADDR command-line-arguments.MapLiteralSizing<1>+0
aux for command-line-arguments.MapLiteralSizing<0> SDWARFLINES size=61
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 f8 00  ................
	0x0010 14 0a 9b 3a 06 55 06 02 4f ff 06 37 06 03 1f 28  ...:.U..O..7...(
	0x0020 06 55 06 55 06 41 06 02 38 ff 06 37 06 03 1e 28  .U.U.A..8..7...(
	0x0030 06 2d 03 ba 7f 79 06 2d 02 0a 00 01 01           .-...y.-.....
	rel 3+8 t=R_ADDR command-line-arguments.MapLiteralSizing<1>+0
aux for command-line-arguments.MapLiteralSizing<0> SDWARFFCN size=129
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 4d 61 70 4c 69 74 65 72  guments.MapLiter
	0x0020 61 6c 53 69 7a 69 6e 67 00 00 00 00 00 00 00 00  alSizing........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 02 00 00 00 7e  ...............~
	0x0040 01 12 78 00 00 7e 00 00 00 00 00 00 00 00 11 7e  ..x..~.........~
	0x0050 72 30 00 01 7e 00 00 00 00 00 11 7e 72 31 00 01  r0..~......~r1..
	0x0060 7e 00 00 00 00 00 0d 6d 00 81 01 00 00 00 00 00  ~......m........
	0x0070 00 00 00 0d 6e 00 a5 01 00 00 00 00 00 00 00 00  ....n...........
	0x0080 00                                               .
	rel 0+0 t=R_USETYPE type:map[int]int<0>+0
	rel 41+8 t=R_ADDR command-line-arguments.MapLiteralSizing<1>+0
	rel 49+8 t=R_ADDR command-line-arguments.MapLiteralSizing<1>+266
	rel 70+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 74+4 t=R_DWARFSECREF <0>+0
	rel 85+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 97+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 107+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 111+4 t=R_DWARFSECREF <0>+51
	rel 120+4 t=R_DWARFSECREF go:info.map[int]int<0>+0
	rel 124+4 t=R_DWARFSECREF <0>+122
aux for type:.eq.[2]string<0> SDWARFLOC size=141
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00  ........4.......
	0x0020 01 00 50 3c 00 00 00 00 00 00 00 a5 00 00 00 00  ..P<............
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 34 00  ..............4.
	0x0060 00 00 00 00 00 00 01 00 53 3c 00 00 00 00 00 00  ........S<......
	0x0070 00 a5 00 00 00 00 00 00 00 02 00 91 08 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00           .............
	rel 8+8 t=R_ADDR type:.eq.[2]string<1>+0
	rel 78+8 t=R_ADDR type:.eq.[2]string<1>+0
aux for type:.eq.[2]string<0> SDWARFLINES size=37
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 5f 06  ............s._.
	0x0010 08 87 06 4b 06 c3 06 37 06 08 ff 06 08 19 06 41  ...K...7.......A
	0x0020 02 05 00 01 01                                   .....
	rel 3+8 t=R_ADDR type:.eq.[2]string<1>+0
aux for type:.eq.[2]string<0> SDWARFFCN size=81
	0x0000 03 74 79 70 65 3a 2e 65 71 2e 5b 32 5d 73 74 72  .type:.eq.[2]str
	0x0010 69 6e 67 00 00 00 00 00 00 00 00 00 00 00 00 00  ing.............
	0x0020 00 00 00 00 01 9c 01 00 00 00 01 01 12 70 00 00  .............p..
	0x0030 01 00 00 00 00 00 00 00 00 12 71 00 00 01 00 00  ..........q.....
	0x0040 00 00 00 00 00 00 11 72 00 01 01 00 00 00 00 00  .......r........
	0x0050 00                                               .
	rel 0+0 t=R_USETYPE type:bool<0>+0
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 20+8 t=R_ADDR type:.eq.[2]string<1>+0
	rel 28+8 t=R_ADDR type:.eq.[2]string<1>+165
	rel 49+4 t=R_DWARFSECREF go:info.*[2]string<0>+0
	rel 53+4 t=R_DWARFSECREF <0>+0
	rel 62+4 t=R_DWARFSECREF go:info.*[2]string<0>+0
	rel 66+4 t=R_DWARFSECREF <0>+70
	rel 75+4 t=R_DWARFSECREF go:info.bool<0>+0
aux for type:.hash.[2]string<0> SDWARFLOC size=159
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00  ........&.......
	0x0020 01 00 50 26 00 00 00 00 00 00 00 6a 00 00 00 00  ..P&.......j....
	0x0030 00 00 00 01 00 9c 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2b 00  ..............+.
	0x0060 00 00 00 00 00 00 01 00 53 2b 00 00 00 00 00 00  ........S+......
	0x0070 00 40 00 00 00 00 00 00 00 01 00 50 40 00 00 00  .@.........P@...
	0x0080 00 00 00 00 6a 00 00 00 00 00 00 00 01 00 53 00  ....j.........S.
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
	rel 8+8 t=R_ADDR type:.hash.[2]string<1>+0
	rel 78+8 t=R_ADDR type:.hash.[2]string<1>+0
aux for type:.hash.[2]string<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 0a 73 06 69 06  ............s.i.
	0x0010 08 e1 06 37 06 23 06 2d 06 4b 02 1b 00 01 01     ...7.#.-.K.....
	rel 3+8 t=R_ADDR type:.hash.[2]string<1>+0
aux for type:.hash.[2]string<0> SDWARFFCN size=85
	0x0000 03 74 79 70 65 3a 2e 68 61 73 68 2e 5b 32 5d 73  .type:.hash.[2]s
	0x0010 74 72 69 6e 67 00 00 00 00 00 00 00 00 00 00 00  tring...........
	0x0020 00 00 00 00 00 00 01 9c 01 00 00 00 01 01 12 70  ...............p
	0x0030 00 00 01 00 00 00 00 00 00 00 00 12 68 00 00 01  ............h...
	0x0040 00 00 00 00 00 00 00 00 11 7e 72 30 00 01 01 00  .........~r0....
	0x0050 00 00 00 00 00                                   .....
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 0+0 t=R_USETYPE type:uintptr<0>+0
	rel 22+8 t=R_ADDR type:.hash.[2]string<1>+0
	rel 30+8 t=R_ADDR type:.hash.[2]string<1>+106
	rel 51+4 t=R_DWARFSECREF go:info.*[2]string<0>+0
	rel 55+4 t=R_DWARFSECREF <0>+0
	rel 64+4 t=R_DWARFSECREF go:info.uintptr<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+70
	rel 79+4 t=R_DWARFSECREF go:info.uintptr<0>+0
