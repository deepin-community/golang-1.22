# command-line-arguments
command-line-arguments.Zero1<1> STEXT nosplit size=13 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:22)	TEXT	command-line-arguments.Zero1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:22)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:22)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:22)	FUNCDATA	$5, command-line-arguments.Zero1.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:22)	FUNCDATA	$6, command-line-arguments.Zero1.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:22)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:24)	MOVUPS	X15, (AX)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:24)	MOVQ	$0, 16(AX)
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:25)	RET
	0x0000 44 0f 11 38 48 c7 40 10 00 00 00 00 c3           D..8H.@......
command-line-arguments.Zero2<1> STEXT size=79 args=0x8 locals=0x8 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	TEXT	command-line-arguments.Zero2(SB), ABIInternal, $8-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PCDATA	$0, $-2
	0x0004 00004 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	JLS	62
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PCDATA	$0, $-1
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PUSHQ	BP
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	MOVQ	SP, BP
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	FUNCDATA	$5, command-line-arguments.Zero2.arginfo1(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	FUNCDATA	$6, command-line-arguments.Zero2.argliveinfo(SB)
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PCDATA	$3, $1
	0x000a 00010 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	TESTB	AL, (AX)
	0x000c 00012 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	CMPL	runtime.writeBarrier(SB), $0
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	PCDATA	$0, $-2
	0x0013 00019 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	JEQ	48
	0x0015 00021 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	(AX), CX
	0x0018 00024 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	CALL	runtime.gcWriteBarrier3(SB)
	0x001d 00029 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	CX, (R11)
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	8(AX), CX
	0x0024 00036 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	CX, 8(R11)
	0x0028 00040 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	16(AX), CX
	0x002c 00044 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	CX, 16(R11)
	0x0030 00048 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVUPS	X15, (AX)
	0x0034 00052 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:34)	MOVQ	$0, 16(AX)
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:35)	PCDATA	$0, $-1
	0x003c 00060 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:35)	POPQ	BP
	0x003d 00061 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:35)	RET
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:35)	NOP
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PCDATA	$1, $-1
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PCDATA	$0, $-2
	0x003e 00062 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	MOVQ	AX, 8(SP)
	0x0043 00067 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	CALL	runtime.morestack_noctxt(SB)
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	PCDATA	$0, $-1
	0x0048 00072 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	MOVQ	8(SP), AX
	0x004d 00077 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:31)	JMP	0
	0x0000 49 3b 66 10 76 38 55 48 89 e5 84 00 83 3d 00 00  I;f.v8UH.....=..
	0x0010 00 00 00 74 1b 48 8b 08 e8 00 00 00 00 49 89 0b  ...t.H.......I..
	0x0020 48 8b 48 08 49 89 4b 08 48 8b 48 10 49 89 4b 10  H.H.I.K.H.H.I.K.
	0x0030 44 0f 11 38 48 c7 40 10 00 00 00 00 5d c3 48 89  D..8H.@.....].H.
	0x0040 44 24 08 e8 00 00 00 00 48 8b 44 24 08 eb b1     D$......H.D$...
	rel 14+4 t=R_PCREL runtime.writeBarrier<0>+-1
	rel 25+4 t=R_CALL runtime.gcWriteBarrier3<1>+0
	rel 68+4 t=R_CALL runtime.morestack_noctxt<0>+0
command-line-arguments.Init1<1> STEXT nosplit size=33 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:45)	TEXT	command-line-arguments.Init1(SB), NOSPLIT|NOFRAME|ABIInternal, $0-8
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:45)	FUNCDATA	$0, gclocals·wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:45)	FUNCDATA	$1, gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:45)	FUNCDATA	$5, command-line-arguments.Init1.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:45)	FUNCDATA	$6, command-line-arguments.Init1.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:45)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:47)	MOVQ	$1, (AX)
	0x0007 00007 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:47)	MOVQ	$2, 8(AX)
	0x000f 00015 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:47)	MOVQ	$3, 16(AX)
	0x0017 00023 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:47)	MOVQ	$4, 24(AX)
	0x001f 00031 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:47)	NOP
	0x0020 00032 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/structs.go:48)	RET
	0x0000 48 c7 00 01 00 00 00 48 c7 40 08 02 00 00 00 48  H......H.@.....H
	0x0010 c7 40 10 03 00 00 00 48 c7 40 18 04 00 00 00 90  .@.....H.@......
	0x0020 c3                                               .
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
type:.eqfunc24<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
runtime.memequal64·f<0> SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64<1>+0
runtime.gcbits.0100000000000000<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*codegen.Z1.<0> SRODATA dupok size=13
	0x0000 01 0b 2a 63 6f 64 65 67 65 6e 2e 5a 31           ..*codegen.Z1
type:*command-line-arguments.Z1<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f7 f7 e5 28 08 08 08 36 00 00 00 00 00 00 00 00  ...(...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.Z1.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.Z1<0>+0
runtime.gcbits.<0> SRODATA dupok size=0
type:.importpath.command-line-arguments.<0> SRODATA dupok size=24
	0x0000 00 16 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61  ..command-line-a
	0x0010 72 67 75 6d 65 6e 74 73                          rguments
type:.namedata.a-<0> SRODATA dupok size=3
	0x0000 00 01 61                                         ..a
type:.namedata.b-<0> SRODATA dupok size=3
	0x0000 00 01 62                                         ..b
type:.namedata.c-<0> SRODATA dupok size=3
	0x0000 00 01 63                                         ..c
type:command-line-arguments.Z1<0> SRODATA size=168
	0x0000 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 32 8e 8b b3 0f 08 08 19 00 00 00 00 00 00 00 00  2...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 58 00 00 00 00 00 00 00  ........X.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 10 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc24<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.Z1.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.Z1<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.Z1<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+8 t=R_ADDR type:.namedata.a-<0>+0
	rel 104+8 t=R_ADDR type:int<0>+0
	rel 120+8 t=R_ADDR type:.namedata.b-<0>+0
	rel 128+8 t=R_ADDR type:int<0>+0
	rel 144+8 t=R_ADDR type:.namedata.c-<0>+0
	rel 152+8 t=R_ADDR type:int<0>+0
type:.namedata.*codegen.Z2.<0> SRODATA dupok size=13
	0x0000 01 0b 2a 63 6f 64 65 67 65 6e 2e 5a 32           ..*codegen.Z2
type:*command-line-arguments.Z2<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f5 28 2d fa 08 08 08 36 00 00 00 00 00 00 00 00  .(-....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.Z2.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.Z2<0>+0
runtime.gcbits.0700000000000000<0> SRODATA dupok size=8
	0x0000 07 00 00 00 00 00 00 00                          ........
type:command-line-arguments.Z2<0> SRODATA size=168
	0x0000 18 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0010 d0 b0 50 fe 0f 08 08 19 00 00 00 00 00 00 00 00  ..P.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 58 00 00 00 00 00 00 00  ........X.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 10 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc24<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0700000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.Z2.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.Z2<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.Z2<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+8 t=R_ADDR type:.namedata.a-<0>+0
	rel 104+8 t=R_ADDR type:*int<0>+0
	rel 120+8 t=R_ADDR type:.namedata.b-<0>+0
	rel 128+8 t=R_ADDR type:*int<0>+0
	rel 144+8 t=R_ADDR type:.namedata.c-<0>+0
	rel 152+8 t=R_ADDR type:*int<0>+0
type:.eqfunc32<0> SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=R_ADDR runtime.memequal_varlen<1>+0
type:.namedata.*codegen.I1.<0> SRODATA dupok size=13
	0x0000 01 0b 2a 63 6f 64 65 67 65 6e 2e 49 31           ..*codegen.I1
type:*command-line-arguments.I1<0> SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 55 e9 26 c1 08 08 08 36 00 00 00 00 00 00 00 00  U.&....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.I1.<0>+0
	rel 48+8 t=R_ADDR type:command-line-arguments.I1<0>+0
type:.namedata.d-<0> SRODATA dupok size=3
	0x0000 00 01 64                                         ..d
type:command-line-arguments.I1<0> SRODATA size=192
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 1a 8f f1 7c 0f 08 08 19 00 00 00 00 00 00 00 00  ...|............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	rel 24+8 t=R_ADDR type:.eqfunc32<0>+0
	rel 32+8 t=R_ADDR runtime.gcbits.<0>+0
	rel 40+4 t=R_ADDROFF type:.namedata.*codegen.I1.<0>+0
	rel 44+4 t=R_ADDROFF type:*command-line-arguments.I1<0>+0
	rel 48+8 t=R_ADDR type:.importpath.command-line-arguments.<0>+0
	rel 56+8 t=R_ADDR type:command-line-arguments.I1<0>+96
	rel 80+4 t=R_ADDROFF type:.importpath.command-line-arguments.<0>+0
	rel 96+8 t=R_ADDR type:.namedata.a-<0>+0
	rel 104+8 t=R_ADDR type:int<0>+0
	rel 120+8 t=R_ADDR type:.namedata.b-<0>+0
	rel 128+8 t=R_ADDR type:int<0>+0
	rel 144+8 t=R_ADDR type:.namedata.c-<0>+0
	rel 152+8 t=R_ADDR type:int<0>+0
	rel 168+8 t=R_ADDR type:.namedata.d-<0>+0
	rel 176+8 t=R_ADDR type:int<0>+0
gclocals·wgcWObbY2HYnK2SU/U22lA==<0> SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·J5F+7Qw7O7ve2QcWC7DpeQ==<0> SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
command-line-arguments.Zero1.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.Zero1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.Zero2.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.Zero2.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.Init1.arginfo1<0> SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
command-line-arguments.Init1.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.Zero1<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.Zero1<1>+0
aux for command-line-arguments.Zero1<0> SDWARFLINES size=25
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 12 14  ................
	0x0010 06 37 06 60 02 01 00 01 01                       .7.`.....
	rel 3+8 t=R_ADDR command-line-arguments.Zero1<1>+0
aux for command-line-arguments.Zero1<0> SDWARFFCN size=68
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 5a 65 72 6f 31 00 00 00  guments.Zero1...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 16 01 12 74 00 00 16 00 00 00 00 00  .......t........
	0x0040 00 00 00 00                                      ....
	rel 30+8 t=R_ADDR command-line-arguments.Zero1<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.Zero1<1>+13
	rel 59+4 t=R_DWARFSECREF go:info.*command-line-arguments.Z1<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.Zero2<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 4f 00 00 00 00 00 00 00  ........O.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.Zero2<1>+0
aux for command-line-arguments.Zero2<0> SDWARFLINES size=31
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 19 14  ................
	0x0010 0a 55 30 06 23 06 02 19 f6 1f 02 11 00 01 01     .U0.#..........
	rel 3+8 t=R_ADDR command-line-arguments.Zero2<1>+0
aux for command-line-arguments.Zero2<0> SDWARFFCN size=68
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 5a 65 72 6f 32 00 00 00  guments.Zero2...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 1f 01 12 74 00 00 1f 00 00 00 00 00  .......t........
	0x0040 00 00 00 00                                      ....
	rel 30+8 t=R_ADDR command-line-arguments.Zero2<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.Zero2<1>+79
	rel 59+4 t=R_DWARFSECREF go:info.*command-line-arguments.Z2<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
aux for command-line-arguments.Init1<0> SDWARFLOC size=51
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00  ........!.......
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00                                         ...
	rel 8+8 t=R_ADDR command-line-arguments.Init1<1>+0
aux for command-line-arguments.Init1<0> SDWARFLINES size=26
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 29 14  ..............).
	0x0010 06 55 06 08 1a 02 01 00 01 01                    .U........
	rel 3+8 t=R_ADDR command-line-arguments.Init1<1>+0
aux for command-line-arguments.Init1<0> SDWARFFCN size=68
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 49 6e 69 74 31 00 00 00  guments.Init1...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 2d 01 12 70 00 00 2d 00 00 00 00 00  ....-..p..-.....
	0x0040 00 00 00 00                                      ....
	rel 30+8 t=R_ADDR command-line-arguments.Init1<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.Init1<1>+33
	rel 59+4 t=R_DWARFSECREF go:info.*command-line-arguments.I1<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
