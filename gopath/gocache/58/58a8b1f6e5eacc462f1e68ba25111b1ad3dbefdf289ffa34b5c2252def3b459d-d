# command-line-arguments
command-line-arguments.andWithUse<1> STEXT nosplit size=15 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:12)	TEXT	command-line-arguments.andWithUse(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:12)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:12)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:12)	FUNCDATA	$5, command-line-arguments.andWithUse.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:12)	FUNCDATA	$6, command-line-arguments.andWithUse.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:12)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:13)	ANDQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:15)	TESTQ	AX, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:15)	JNE	14
	0x0008 00008 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:16)	MOVL	$77, AX
	0x000d 00013 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:16)	RET
	0x000e 00014 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:19)	RET
	0x0000 48 21 d8 48 85 c0 75 06 b8 4d 00 00 00 c3 c3     H!.H..u..M.....
command-line-arguments.ornot<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:23)	TEXT	command-line-arguments.ornot(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:23)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:23)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:23)	FUNCDATA	$5, command-line-arguments.ornot.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:23)	FUNCDATA	$6, command-line-arguments.ornot.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:23)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:25)	NOTQ	BX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:25)	ORQ	BX, AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:26)	RET
	0x0000 48 f7 d3 48 09 d8 c3                             H..H...
command-line-arguments.orDemorgans<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:30)	TEXT	command-line-arguments.orDemorgans(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:30)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:30)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:30)	FUNCDATA	$5, command-line-arguments.orDemorgans.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:30)	FUNCDATA	$6, command-line-arguments.orDemorgans.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:30)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:32)	ANDQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:32)	NOTQ	AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:33)	RET
	0x0000 48 21 d8 48 f7 d0 c3                             H!.H...
command-line-arguments.andDemorgans<1> STEXT nosplit size=7 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:37)	TEXT	command-line-arguments.andDemorgans(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:37)	FUNCDATA	$0, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:37)	FUNCDATA	$1, gclocals·g2BeySu+wFnoycgXfElmcg==(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:37)	FUNCDATA	$5, command-line-arguments.andDemorgans.arginfo1(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:37)	FUNCDATA	$6, command-line-arguments.andDemorgans.argliveinfo(SB)
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:37)	PCDATA	$3, $1
	0x0000 00000 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:39)	ORQ	BX, AX
	0x0003 00003 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:39)	NOTQ	AX
	0x0006 00006 (/home/xzl/work/golang-1.22/golang-1.22/test/codegen/logic.go:40)	RET
	0x0000 48 09 d8 48 f7 d0 c3                             H..H...
go:cuinfo.producer.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.command-line-arguments<0> SDWARFCUINFO dupok size=0
	0x0000 63 6f 64 65 67 65 6e                             codegen
gclocals·g2BeySu+wFnoycgXfElmcg==<0> SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
command-line-arguments.andWithUse.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.andWithUse.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.ornot.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.ornot.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.orDemorgans.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.orDemorgans.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
command-line-arguments.andDemorgans.arginfo1<0> SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
command-line-arguments.andDemorgans.argliveinfo<0> SRODATA static dupok size=2
	0x0000 00 00                                            ..
aux for command-line-arguments.andWithUse<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 0f 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 03 00 00 00 00 00 00 00 0d 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.andWithUse<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.andWithUse<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.andWithUse<1>+0
aux for command-line-arguments.andWithUse<0> SDWARFLINES size=30
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 07 14  ................
	0x0010 2f 06 2d 06 24 06 41 06 1c 02 01 00 01 01        /.-.$.A.......
	rel 3+8 t=R_ADDR command-line-arguments.andWithUse<1>+0
aux for command-line-arguments.andWithUse<0> SDWARFFCN size=110
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 61 6e 64 57 69 74 68 55  guments.andWithU
	0x0020 73 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  se..............
	0x0030 00 00 00 01 9c 02 00 00 00 0c 01 12 78 00 00 0c  ............x...
	0x0040 00 00 00 00 00 00 00 00 12 79 00 00 0c 00 00 00  .........y......
	0x0050 00 00 00 00 00 11 7e 72 30 00 01 0c 00 00 00 00  ......~r0.......
	0x0060 00 0d 7a 00 0d 00 00 00 00 00 00 00 00 00        ..z...........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 35+8 t=R_ADDR command-line-arguments.andWithUse<1>+0
	rel 43+8 t=R_ADDR command-line-arguments.andWithUse<1>+15
	rel 64+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 68+4 t=R_DWARFSECREF <0>+0
	rel 77+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 81+4 t=R_DWARFSECREF <0>+51
	rel 92+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 101+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 105+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.ornot<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.ornot<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.ornot<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.ornot<1>+0
aux for command-line-arguments.ornot<0> SDWARFLINES size=25
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 13 14  ................
	0x0010 06 2d 06 2e 02 01 00 01 01                       .-.......
	rel 3+8 t=R_ADDR command-line-arguments.ornot<1>+0
aux for command-line-arguments.ornot<0> SDWARFFCN size=105
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6f 72 6e 6f 74 00 00 00  guments.ornot...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 02 00 00 00 17 01 12 78 00 00 17 00 00 00 00 00  .......x........
	0x0040 00 00 00 12 79 00 00 17 00 00 00 00 00 00 00 00  ....y...........
	0x0050 11 7e 72 30 00 01 17 00 00 00 00 00 0d 7a 00 19  .~r0.........z..
	0x0060 00 00 00 00 00 00 00 00 00                       .........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 30+8 t=R_ADDR command-line-arguments.ornot<1>+0
	rel 38+8 t=R_ADDR command-line-arguments.ornot<1>+7
	rel 59+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 63+4 t=R_DWARFSECREF <0>+0
	rel 72+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 76+4 t=R_DWARFSECREF <0>+51
	rel 87+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 96+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 100+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.orDemorgans<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.orDemorgans<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.orDemorgans<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.orDemorgans<1>+0
aux for command-line-arguments.orDemorgans<0> SDWARFLINES size=25
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 1a 14  ................
	0x0010 06 2d 06 2e 02 01 00 01 01                       .-.......
	rel 3+8 t=R_ADDR command-line-arguments.orDemorgans<1>+0
aux for command-line-arguments.orDemorgans<0> SDWARFFCN size=111
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 6f 72 44 65 6d 6f 72 67  guments.orDemorg
	0x0020 61 6e 73 00 00 00 00 00 00 00 00 00 00 00 00 00  ans.............
	0x0030 00 00 00 00 01 9c 02 00 00 00 1e 01 12 78 00 00  .............x..
	0x0040 1e 00 00 00 00 00 00 00 00 12 79 00 00 1e 00 00  ..........y.....
	0x0050 00 00 00 00 00 00 11 7e 72 30 00 01 1e 00 00 00  .......~r0......
	0x0060 00 00 0d 7a 00 20 00 00 00 00 00 00 00 00 00     ...z. .........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 36+8 t=R_ADDR command-line-arguments.orDemorgans<1>+0
	rel 44+8 t=R_ADDR command-line-arguments.orDemorgans<1>+7
	rel 65+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 69+4 t=R_DWARFSECREF <0>+0
	rel 78+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 82+4 t=R_DWARFSECREF <0>+51
	rel 93+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 102+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 106+4 t=R_DWARFSECREF <0>+102
aux for command-line-arguments.andDemorgans<0> SDWARFLOC size=153
	0x0000 ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0020 01 00 50 00 00 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0030 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00  ................
	0x0050 00 00 00 01 00 53 00 00 00 00 00 00 00 00 00 00  .....S..........
	0x0060 00 00 00 00 00 00 ff ff ff ff ff ff ff ff 00 00  ................
	0x0070 00 00 00 00 00 00 06 00 00 00 00 00 00 00 07 00  ................
	0x0080 00 00 00 00 00 00 01 00 50 00 00 00 00 00 00 00  ........P.......
	0x0090 00 00 00 00 00 00 00 00 00                       .........
	rel 8+8 t=R_ADDR command-line-arguments.andDemorgans<1>+0
	rel 59+8 t=R_ADDR command-line-arguments.andDemorgans<1>+0
	rel 110+8 t=R_ADDR command-line-arguments.andDemorgans<1>+0
aux for command-line-arguments.andDemorgans<0> SDWARFLINES size=25
	0x0000 00 09 02 00 00 00 00 00 00 00 00 04 02 03 21 14  ..............!.
	0x0010 06 2d 06 2e 02 01 00 01 01                       .-.......
	rel 3+8 t=R_ADDR command-line-arguments.andDemorgans<1>+0
aux for command-line-arguments.andDemorgans<0> SDWARFFCN size=112
	0x0000 03 63 6f 6d 6d 61 6e 64 2d 6c 69 6e 65 2d 61 72  .command-line-ar
	0x0010 67 75 6d 65 6e 74 73 2e 61 6e 64 44 65 6d 6f 72  guments.andDemor
	0x0020 67 61 6e 73 00 00 00 00 00 00 00 00 00 00 00 00  gans............
	0x0030 00 00 00 00 00 01 9c 02 00 00 00 25 01 12 78 00  ...........%..x.
	0x0040 00 25 00 00 00 00 00 00 00 00 12 79 00 00 25 00  .%.........y..%.
	0x0050 00 00 00 00 00 00 00 11 7e 72 30 00 01 25 00 00  ........~r0..%..
	0x0060 00 00 00 0d 7a 00 27 00 00 00 00 00 00 00 00 00  ....z.'.........
	rel 0+0 t=R_USETYPE type:int<0>+0
	rel 37+8 t=R_ADDR command-line-arguments.andDemorgans<1>+0
	rel 45+8 t=R_ADDR command-line-arguments.andDemorgans<1>+7
	rel 66+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 70+4 t=R_DWARFSECREF <0>+0
	rel 79+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 83+4 t=R_DWARFSECREF <0>+51
	rel 94+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 103+4 t=R_DWARFSECREF go:info.int<0>+0
	rel 107+4 t=R_DWARFSECREF <0>+102
